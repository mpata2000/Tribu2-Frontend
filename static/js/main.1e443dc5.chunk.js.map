{"version":3,"sources":["components/Header/Header.tsx","components/SideBar/index.tsx","views/About/index.tsx","containers/AboutContainer.tsx","views/Home/index.tsx","hooks/useTypedSelector.ts","containers/HomeContainer.tsx","components/ListItem/index.tsx","redux_folder/constants/hours.constants.ts","redux_folder/actions/hours.actions.ts","components/EditHoursModal/index.tsx","components/HoursButtons/index.tsx","hooks/useInterval.js","redux_folder/constants/proyects.constants.ts","redux_folder/actions/proyects.actions.ts","components/AddTaskToHoursModal/index.tsx","views/Hours/index.tsx","containers/HoursContainer.tsx","views/Soporte/index.tsx","redux_folder/constants/tickets.constants.ts","redux_folder/actions/tickets.actions.ts","containers/SoporteContainer.tsx","components/Tabla/Tabla.tsx","views/Soporte/componentes/Descripcion.tsx","views/Soporte/Tickets/index.tsx","containers/TicketsContainer.tsx","services/api.ts","components/FormularioCrear/FormularioCrear.tsx","views/Soporte/FormularioTickets/index.tsx","containers/FormularioTicketsContainer.tsx","components/FormularioEliminar/FormularioEliminar.tsx","views/Soporte/FormularioEliminarTicket/index.tsx","containers/EliminarTicketsContainer.tsx","components/FormularioModificar/FormularioModificar.tsx","views/Soporte/FormularioModificarTicket/index.tsx","containers/ModificarTicketsContainer.tsx","components/Button/Button.tsx","views/Proyects/ProjectForm.tsx","views/Proyects/ProjectItem.tsx","views/Proyects/Projects.tsx","views/Proyects/index.tsx","containers/ProyectoContainer.tsx","App.tsx","reportWebVitals.ts","redux_folder/reducers/hours.reducer.ts","redux_folder/reducers/tickets.reducer.ts","redux_folder/reducers/products.reducer.ts","redux_folder/reducers/tareas.reducer.ts","redux_folder/reducers/resources.reducer.ts","redux_folder/reducers/clients.reducer.ts","redux_folder/reducers/proyects.reducer.ts","redux_folder/reducers/index.ts","services/hours.services.ts","redux_folder/sagas/hours.sagas.ts","services/proyects.services.ts","redux_folder/sagas/proyects.sagas.ts","services/tickets.services.ts","redux_folder/sagas/tickets.sagas.ts","redux_folder/sagas/index.ts","redux_folder/store/index.ts","index.tsx"],"names":["Header","className","Sidebar","navigate","useNavigate","goTo","path","List","sx","width","maxWidth","bgcolor","borderColor","borderRadius","borderWidth","component","ListItemButton","onClick","ListItemText","primary","AboutView","to","AboutContainer","About","HomeView","props","onGetHours","useTypedSelector","useSelector","HomeContainer","useDispatch","hours","state","console","log","ListItem","item","task","children","nombre","note","HOURS_ON_GET_REQUESTED","HOURS_ON_GET_SUCCEEDED","HOURS_ON_GET_FAILED","HOURS_ON_CREATE_REQUESTED","HOURS_ON_CREATE_SUCCEEDED","HOURS_ON_CREATE_FAILED","HOURS_ON_EDIT_REQUESTED","HOURS_ON_EDIT_SUCCEEDED","HOURS_ON_EDIT_FAILED","HOURS_ON_DELETE_REQUESTED","HOURS_ON_DELETE_SUCCEEDED","HOURS_ON_DELETE_FAILED","onHoursGet","filters","type","constants","onGetSucceeded","data","onCreateHoursSucceeded","onHoursEdit","onHoursEditSucceeded","onHoursDeleteSucceeded","EditHoursModal","hour","handleClose","date","dispatch","useState","dateViewer","setDateViewer","useForm","handleSubmit","control","errors","formState","useEffect","onSubmit_","id","Box","position","top","left","transform","border","boxShadow","p","Typography","variant","onSubmit","style","display","flexDirection","justifyContent","marginTop","render","field","onChange","onBlur","value","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","label","newValue","format","renderInput","params","TextField","name","FormControl","margin","InputLabel","inputProps","maxLength","defaultValue","multiline","rows","Tooltip","title","textAlign","placeholder","rules","pattern","alignSelf","minutes","seconds","color","startIcon","endIcon","fontSize","HoursButtons","timerOn","setTimerOn","setSeconds","setMinutes","setHours","pause","setPause","play","setPlay","React","open","setOpen","callback","delay","savedCallback","useRef","current","setInterval","clearInterval","useInterval","m","h","extraSecondsCero","extraMinutesCero","time","Modal","onClose","IconButton","PROYECTS_ON_GET_ALL_REQUESTED","PROYECTS_ON_GET_ALL_SUCCEEDED","PROYECTS_ON_GET_ALL_FAILED","PROYECTS_ON_CREATE_REQUESTED","PROYECTS_ON_GET_TASKS_REQUESTED","PROYECTS_ON_GET_TASKS_SUCCEEDED","PROYECTS_ON_GET_TASKS_FAILED","PROYECTS_ON_GET_TASKS_BY_IDS_REQUESTED","PROYECTS_ON_GET_TASKS_BY_IDS_SUCCEEDED","PROYECTS_ON_GET_TASKS_BY_IDS_FAILED","onProyectsGetAll","onGetAllSucceeded","createProyectSucceeded","onGetTasksSucceeded","onGetTasksByIdsSucceeded","AddTaskToHoursModal","tasks","proyects","data_","user_id","day","onCreateHours","fullWidth","Select","labelId","minWidth","map","MenuItem","idTarea","idProyecto","required","right","bottom","task_id","HoursView","Date","setDate","actionSucceeded","loading","ids","marginLeft","length","CircularProgress","height","opacity","fontFamily","fontStyle","fontWeight","find","HoursContainer","description","SoporteView","products","Accordion","Object","entries","product","index","Item","eventKey","toString","Body","version","TICKETS_ON_GET_ALL_REQUESTED","TICKETS_ON_GET_ALL_SUCCEEDED","TICKETS_ON_GET_ALL_FAILED","PRODUCTS_ON_GET_ALL_REQUESTED","PRODUCTS_ON_GET_ALL_SUCCEEDED","PRODUCTS_ON_GET_ALL_FAILED","TAREAS_ON_GET_ALL_REQUESTED","TAREAS_ON_GET_ALL_SUCCEEDED","TAREAS_ON_GET_ALL_FAILED","RESOURCES_ON_GET_ALL_REQUESTED","RESOURCES_ON_GET_ALL_SUCCEEDED","RESOURCES_ON_GET_ALL_FAILED","CLIENTS_ON_GET_ALL_REQUESTED","CLIENTS_ON_GET_ALL_SUCCEEDED","CLIENTS_ON_GET_ALL_FAILED","onTicketsGetAllSucceeded","onProductsGetAllSucceeded","onTareasGetAll","onTareasGetAllSucceeded","onResourcesGetAllSucceeded","onClientsGetAllSucceeded","SoporteContainer","Tabla","tickets","onRowClick","Table","striped","bordered","hover","ticket","tipo","recurso","estado","cliente","moment","parseInt","fecha_limite","Descripcion","tareas","tareas_ticket","filter","tarea","includes","descripcion","severidad","fecha_creacion","creador","disablePadding","ticketID","descrip","producto","TicketsView","ticket_i","setTicketI","search","setSearch","filtered_tickets","toLowerCase","event","target","i","TicketsContainer","useLocation","onTicketsGetAll","api","axios","create","getOptions","a","options","headers","errorResponse","error","response","message","Error","get","url","getToken","post","put","patch","delete_","delete","FormularioCrear","location","resources_state","resources","tareas_state","clients_state","clients","idTicket","formValues","setFormValues","handleChange","Form","Group","controlId","Label","Control","readOnly","client","resource","legajo","Nombre","Apellido","as","e","preventDefault","alert","FormularioTicketsView","FormularioTicketsContainer","FormularioTickets","FormularioEliminar","solicitarEliminacionDeTicket","FormularioEliminarTicketView","EliminarTicketsContainer","FormularioEliminarTicket","FormularioModificar","FormularioModificarTicketView","ModificarTicketsContainer","FormularioModificarTicket","Button","text","ProjectForm","enteredNombre","setEnteredNombre","enteredDescripcion","setEnteredDescripcion","enteredFechaInicioReal","setEnteredFechaInicioReal","enteredFechaInicioEstimada","setEnteredFechaInicioEstimada","enteredFechaFinalReal","setEnteredFechaFinalReal","enteredFechaFinalEstimada","setEnteredFechaFinalEstimada","enteredFechaEntrega","setEnteredFechaEntrega","enteredHoras","setEnteredHoras","enteredEstado","setEnteredEstado","enteredPrioridad","setEnteredPrioridad","footer","icon","projectData","fechaInicioReal","fechaFinalizacionReal","fechaInicioEstimada","fechaFinalizacionEstimada","fechaEntregaComunicadaACliente","horasEstimadas","prioridad","setProject","onSave","horasChangeHandler","val","header","visible","modal","onHide","setVisible","htmlFor","Input","onKeyPress","onInput","ProjectItem","model","buttons","items","selectionMode","selection","selectedProject","onSelectionChange","setSelectedProject","proyectoDefault","Projects","proyecto","setProyecto","command","showSaveDialog","showEditDialog","projects","enteredProject","window","ProyectsView","ProyectoContainer","proyectos","Proyects","App","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","defaultState","editSucceeded","deleteSucceeded","hoursReducer","action","ticketsReducer","productsReducer","tareasReducer","resourcesReducer","clientsReducer","proyectsReducer","rootReducer","combineReducers","getHours","url_","createHours","editHours","body","deleteHours","hoursGet","hoursCreate","hoursEdit","hoursDelete","watchHours","call","actions","all","takeLatest","getProyects","postProyects","getTasks","getTasksByIds","proyectsGetAll","proyectsCreate","tasksGet","tasksGetByIds","watchProyects","proyectos_url","recursos_url","getTickets","getProducts","getTareas","getResources","getClients","ticketsGetAll","productsGetAll","tareasGetAll","resourcesGetAll","clientsGetAll","watchTickets","watchProducts","watchTareas","watchResources","watchClients","rootSaga","sagaMiddleware","createSagaMiddleware","loggerMiddleware","createLogger","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","run","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e443dc5.chunk.js","sourcesContent":["import React from 'react'\nimport \"./Header.css\";\n\nconst Header = () => {\n    return (\n        <div className=\"Header\"> \n            <h1 className=\"Title\">Psa-Tasks</h1>\n        </div>\n    )\n}\n\nexport default Header\n","import { List, ListItemButton, ListItemText, ListSubheader } from '@mui/material';\nimport React from 'react'\nimport './index.css';\nimport {useNavigate} from \"react-router-dom\";\n\nconst Sidebar = () => {\n    const navigate = useNavigate();\n\n    const goTo = (path:string) => {\n        navigate(path);\n    }\n      \n    return (\n    <List\n        sx={{ width: 175, maxWidth: 360, bgcolor: 'background.paper', borderColor: 'black', borderRadius: 2, borderWidth: 50 }}\n        component=\"nav\"\n        aria-labelledby=\"nested-list-subheader\"\n    >\n\n        <ListItemButton onClick={() => goTo(\"/\")}>\n            <ListItemText primary=\"Home\" />\n        </ListItemButton>  \n        \n        <ListItemButton>\n            <ListItemText primary=\"Tasks\" />\n        </ListItemButton>      \n\n        <ListItemButton onClick={() => goTo(\"/hours\")}>\n            <ListItemText primary=\"Hours\" />\n        </ListItemButton>\n\n        <ListItemButton onClick={() => goTo(\"/proyecto\")}>\n            <ListItemText primary=\"Proyectos\" />\n        </ListItemButton>  \n        \n        <ListItemButton onClick={() => goTo(\"/soporte\")}>\n            <ListItemText primary=\"Soporte\" />\n        </ListItemButton>\n    </List>\n    );\n}\n\nexport default Sidebar;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nconst AboutView = () => {\n    return (\n        <>\n      <main>\n        <h2>Who are we?</h2>\n        <p>\n          That feels like an existential question, don't you\n          think?\n        </p>\n      </main>\n      <nav>\n        <Link to=\"/\">Home</Link>\n      </nav>\n    </>\n    )\n}\n\nexport default AboutView;\n","import React from 'react'\nimport AboutView from 'views/About'\n\n\nconst AboutContainer = () => {\n    return (\n        <AboutView/>\n    )\n}\n\nexport default AboutContainer\n","import React from 'react'\nimport {Link} from \"react-router-dom\";\nimport Button from 'components/Button/Button';\nimport './index.css'\n\nconst HomeView = (props: any) => {\n  const {onGetHours} = props;\n\n  return (\n    <div className=\"Home\">\n      <main >\n        <h2>Welcome to the homepage!</h2>\n      </main>\n      <nav>\n        <Link to=\"/about\">About</Link>\n      </nav>\n    </div>\n    )\n}\n\nexport default HomeView;\n","import { TypedUseSelectorHook, useSelector } from 'react-redux';\nimport { IHoursDefaultState } from 'types/hours.types';\nimport { ITicketsDefaultState, IProductsDefaultState, ITareasDefaultState, IResourcesDefaultState, IClientsDefaultState } from 'types/tickets.types';\n\ninterface IRootState {\n  proyects: any;\n  hours: IHoursDefaultState;\n  tickets: ITicketsDefaultState;\n  products: IProductsDefaultState;\n  tareas: ITareasDefaultState;\n  resources: IResourcesDefaultState;\n  clients: IClientsDefaultState;\n}\n\nconst useTypedSelector: TypedUseSelectorHook<IRootState> = useSelector;\n\nexport default useTypedSelector;\n","import React from 'react'\nimport HomeView from 'views/Home'\nimport {useDispatch} from 'react-redux'\nimport { onHoursGet } from 'redux_folder/actions/hours.actions';\nimport useTypedSelector from 'hooks/useTypedSelector';\n\nconst HomeContainer = () => {\n    \n    \n    const dispatch = useDispatch();\n\n    const hours = useTypedSelector((state) => state.hours.hours)\n    console.log(hours)\n\n    return (\n        <HomeView/>\n    )\n}\n\nexport default HomeContainer\n","import React from 'react'\nimport './index.css'\n\nconst ListItem = (props:any) => {\n    const {item, task, children} = props;\n    console.log(task)\n    return (\n        <div className=\"container\" >\n            <div className=\"columnDiv\" >\n                <p className=\"title2\"> {task?.nombre} </p>\n                <p className=\"description\"> {item.note} </p>\n            </div>\n            {children}\n        </div>\n    )\n}\n\nexport default ListItem\n","export const HOURS_ON_GET_REQUESTED = 'HOURS_ON_GET_REQUESTED';\nexport const HOURS_ON_GET_SUCCEEDED = 'HOURS_ON_GET_SUCCEEDED';\nexport const HOURS_ON_GET_FAILED = 'HOURS_ON_GET_FAILED';\n\nexport const HOURS_ON_CREATE_REQUESTED = 'HOURS_ON_CREATE_REQUESTED';\nexport const HOURS_ON_CREATE_SUCCEEDED = 'HOURS_ON_CREATE_SUCCEEDED';\nexport const HOURS_ON_CREATE_FAILED = 'HOURS_ON_CREATE_FAILED';\n\nexport const HOURS_ON_EDIT_REQUESTED = 'HOURS_ON_EDIT_REQUESTED';\nexport const HOURS_ON_EDIT_SUCCEEDED = 'HOURS_ON_EDIT_SUCCEEDED';\nexport const HOURS_ON_EDIT_FAILED = 'HOURS_ON_EDIT_FAILED';\n\nexport const HOURS_ON_DELETE_REQUESTED = 'HOURS_ON_DELETE_REQUESTED';\nexport const HOURS_ON_DELETE_SUCCEEDED = 'HOURS_ON_DELETE_SUCCEEDED';\nexport const HOURS_ON_DELETE_FAILED = 'HOURS_ON_DELETE_FAILED';\n","import * as constants from 'redux_folder/constants/hours.constants';\nimport {AnyAction} from 'redux'\n\n// HOURS_ON_GET\nexport const onHoursGet = (filters:any):  AnyAction => (\n  { type: constants.HOURS_ON_GET_REQUESTED, filters});\n\nexport const onGetSucceeded = (data: any): AnyAction => (\n  { type: constants.HOURS_ON_GET_SUCCEEDED, data });\n\nexport const onGetFailed = (error: unknown): AnyAction => (\n  { type: constants.HOURS_ON_GET_FAILED, error });\n\n// HOURS_ON_CREATE\nexport const onCreateHours = (data_:any):  AnyAction => (\n  { type: constants.HOURS_ON_CREATE_REQUESTED, data_});\n\nexport const onCreateHoursSucceeded = (data: any): AnyAction => (\n  { type: constants.HOURS_ON_CREATE_SUCCEEDED, data });\n\nexport const onCreateHoursFailed = (error: unknown): AnyAction => (\n  { type: constants.HOURS_ON_CREATE_FAILED, error });\n\n// HOURS_ON_EDIT\nexport const onHoursEdit = (data:any): AnyAction => (\n  { type: constants.HOURS_ON_EDIT_REQUESTED, data});\n\nexport const onHoursEditSucceeded = (data: any): AnyAction => (\n  { type: constants.HOURS_ON_EDIT_SUCCEEDED, data });\n\nexport const onHoursEditFailed = (error: unknown): AnyAction => (\n  { type: constants.HOURS_ON_EDIT_FAILED, error });\n\n// HOURS_ON_DELETE\n\nexport const onHoursDelete = (id:string): AnyAction => (\n  { type: constants.HOURS_ON_DELETE_REQUESTED, id});\n\nexport const onHoursDeleteSucceeded = (data: any): AnyAction => (\n  { type: constants.HOURS_ON_DELETE_SUCCEEDED, data });\n\nexport const onHoursDeleteFailed = (error: unknown): AnyAction => (\n  { type: constants.HOURS_ON_DELETE_FAILED, error });\n","import React, { useEffect, useState } from 'react'\nimport { Controller, useForm } from 'react-hook-form';\nimport { Alert, Box, Button, FormControl, InputLabel, MenuItem, Select, TextField, Tooltip, Typography  } from '@mui/material'\nimport { useDispatch } from 'react-redux';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { format, hoursToMilliseconds } from 'date-fns';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport DatePicker from '@mui/lab/DatePicker';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport { onHoursDelete, onHoursEdit, onHoursGet } from 'redux_folder/actions/hours.actions';\nimport DeleteOutlinedIcon from '@mui/icons-material/DeleteOutlined';\n\nconst EditHoursModal = (props: any) => {\n    const {hour, handleClose, date} = props;\n    const dispatch = useDispatch()\n\n    const [dateViewer, setDateViewer] = useState(date)\n    const {\n        handleSubmit, control, formState: { errors },\n      } = useForm();\n\n    useEffect(() => {\n    }, [])\n    \n    const style = {\n        position: 'absolute' as 'absolute',\n        top: '51%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        width: 400,\n        bgcolor: 'background.paper',\n        border: '2px solid #000',\n        boxShadow: '2px 2px darkcyan',\n        p: 4,\n      };\n\n    const onSubmit_ = (data:any) =>{\n        data = {\n            ...data,\n            id: hour.id,\n        }\n        dispatch(onHoursEdit(data));\n        handleClose(true);\n    }\n\n    const handleDelete = () => {\n        console.log(hour)\n        dispatch(onHoursDelete(hour.id));\n        handleClose(true);\n    }\n    return (\n        <Box sx={style}>\n            <Typography id=\"title\" variant=\"h6\" component=\"h2\">\n                Aca poner el nombre de la tarea\n            </Typography>\n            <form onSubmit={handleSubmit(onSubmit_)} style={{display: 'flex', flexDirection:'column', justifyContent:'center', marginTop: 20}}>\n            <Controller\n                control={control}\n                render={({field: {onChange, onBlur, value}}) => {\n                    return(\n                        <LocalizationProvider dateAdapter={AdapterDateFns}>\n                            <DatePicker\n                                label=\"Date\"\n                                value={dateViewer}\n                                onChange={(newValue) => {onChange(format(newValue, 'yyyy-MM-dd')); setDateViewer(newValue)}}\n                                renderInput={(params) => <TextField {...params} />}\n                            />\n                        </LocalizationProvider>\n                    )\n                }} \n                name=\"day\"\n            />\n            <Controller\n                control={control}\n                render={({ field: { onChange, onBlur, value } }) => {\n                return (\n                    <FormControl style={{margin: '40px 0px'}}>\n                        <InputLabel id=\"note\"/> \n                        <TextField id=\"note\" inputProps={{ maxLength: 100 }} defaultValue={hour.note} label='Note' multiline rows={4} variant=\"outlined\" onChange={onChange}/>\n                    </FormControl>\n                        \n                    )}}\n                    name=\"note\"\n                />\n                <div style={{display: 'flex' , justifyContent: 'center'}}>\n                            \n                    <Controller\n                        control={control}\n                        render={({ field: { onChange, onBlur, value } }) => {\n                            return (\n                                <Tooltip title=\"Hours\">\n                                    <TextField id=\"hours\"  inputProps={{style: {textAlign: 'center', width: 70}}} defaultValue={hour.hours} placeholder='00'  variant=\"standard\" onChange={onChange}/>\n                                </Tooltip>\n                                    \n                                \n                            )}}\n                        name=\"hours\"\n                        rules={{pattern: /^((?:[0-9]|1[0-9]|2[0-3])(?:.\\d{1,2})?|23(?:.00?)?)$/}}\n                    />\n                    <p style={{alignSelf: 'center', margin: 10}}>:</p>\n                        \n                    <Controller\n                        control={control}\n                        render={({ field: { onChange, onBlur, value } }) => {\n                            return (\n                                <Tooltip title=\"Minutes\">\n                                    <TextField id=\"minutes\"  inputProps={{style: {textAlign: 'center', width: 70}}} defaultValue={hour.minutes} placeholder='00'  variant=\"standard\" onChange={onChange}/>\n                                </Tooltip>\n                                )}}\n                        name=\"minutes\"\n                        rules={{pattern: /^((?:[0-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9])(?:.\\d{1,2})?|59(?:.00?)?)$/}}\n                    />\n                    <p style={{alignSelf: 'center', margin: 10}}>:</p>\n                    <Controller\n                        control={control}\n                        render={({ field: { onChange, onBlur, value } }) => {\n                            return (\n                                <Tooltip title=\"Seconds\">\n                                    <TextField id=\"seconds\"  inputProps={{style: {textAlign: 'center', width: 70}}} defaultValue={hour.seconds} placeholder='00'  variant=\"standard\" onChange={onChange}/>\n                                </Tooltip>\n                                )}}\n                        name=\"seconds\"\n                        rules={{pattern: /^((?:[0-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9])(?:.\\d{1,2})?|59(?:.00?)?)$/ }}\n                    />\n                            \n                </div>\n                <div style={{display:'flex', flexDirection:'row', justifyContent:'space-between', marginTop: 30}}>\n                    <Button variant=\"outlined\" color=\"error\" startIcon={<DeleteOutlinedIcon />} onClick={handleDelete}>\n                        Delete\n                    </Button>\n                    <Button endIcon={<EditIcon/>} variant=\"contained\" onClick={handleSubmit(onSubmit_)}>\n                        Edit\n                    </Button>\n\n                </div>\n                \n                </form>\n                {errors?.hours?.type === 'pattern' && <p style={{color: 'red', fontSize: 10}}>Enter a valid number</p>}\n                {errors?.minutes?.type === 'pattern' && <p style={{color: 'red', fontSize: 10}}>Enter a valid number</p>}\n                {errors?.seconds?.type === 'pattern' && <p style={{color: 'red', fontSize: 10}}>Pls enter a valid number</p>}\n            </Box>\n    )\n}\n\nexport default EditHoursModal\n","import { useInterval } from 'hooks/useInterval';\nimport React, { useEffect, useState } from 'react'\nimport PauseCircleIcon from '@mui/icons-material/PauseCircle';\nimport PlayCircleIcon from '@mui/icons-material/PlayCircle';\nimport StopCircleIcon from '@mui/icons-material/StopCircle';\nimport './index.css'\nimport { useDispatch } from 'react-redux';\nimport { Button, IconButton, Modal } from '@mui/material';\nimport {BiEdit} from 'react-icons/bi'\nimport AddTaskToHoursModal from 'components/AddTaskToHoursModal';\nimport EditHoursModal from 'components/EditHoursModal';\nimport { onHoursEdit } from 'redux_folder/actions/hours.actions';\n\nconst HoursButtons = (props:any) => {\n    const {hour, date, timerOn, setTimerOn} = props\n    const [seconds, setSeconds] = useState(hour.seconds)\n    const [minutes, setMinutes] = useState(hour.minutes)\n    const [hours, setHours] = useState(hour.hours)\n\n    const [pause, setPause] = useState(false);\n    const [play, setPlay] = useState(false);\n    \n    const [open, setOpen] = React.useState(false);\n    const handleOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n\n    const handlePlay = () => {\n        if(!timerOn){\n            setPlay(true)\n            setTimerOn(true)\n        }\n    }\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if(play){\n            setPause(false)\n        }\n    }, [play])\n\n    useEffect(() => {\n        if(pause){\n            setPlay(false)\n            setTimerOn(false)\n            dispatch(onHoursEdit({hours,minutes,seconds, id:hour.id}))\n        }\n    }, [pause])\n\n    useInterval(() => {\n        if (play){\n            setSeconds(seconds + 1);\n        }\n      }, 1000);\n    \n    useEffect(() => {\n        if(seconds > 59){\n            setMinutes((m: number) => m + 1)\n            setSeconds(0)\n        }\n    }, [seconds])\n    \n    useEffect(() => {\n        if(minutes > 59){\n            setHours((h: number) => h + 1)\n            setMinutes(0)\n        }\n    }, [minutes])\n\n    \n    useEffect(() => {\n        if(hours >= 24){\n            setHours(23)\n            setMinutes(59)\n            setSeconds(59)\n            setPause(true)\n        }\n    }, [hours])\n\n    const extraSecondsCero = (seconds < 10) ? '0' : '';\n    const extraMinutesCero = (minutes < 10) ? '0' : '';\n    const extraHoursCero = (hours < 10) ? '0' : '';\n    \n    const time = ` ${extraHoursCero}${hours}:${extraMinutesCero}${minutes}:${extraSecondsCero}${seconds}`\n    return (\n        <div className='container2'>\n            <Modal\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <EditHoursModal hour={hour} handleClose={handleClose} date={date}/>\n            </Modal>\n            <div className='time'>{time}</div>\n            <IconButton style={{alignSelf: 'center'}} onClick={() => {(play) ? setPause(true) : handlePlay()}}>\n                    {(play) \n                    ? (<PauseCircleIcon style={{color: 'darkcyan' }}/>) \n                    : <PlayCircleIcon style={{color: 'darkcyan' }}/>}\n            </IconButton >\n                \n            <IconButton style={{alignSelf: 'center'}} onClick={handleOpen}>\n                <BiEdit />\n            </IconButton>\n                \n        </div>\n    )\n}\n\nexport default HoursButtons\n","import { useEffect, useRef } from  'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    let id = setInterval(() => {\n      savedCallback.current();\n    }, delay);\n    return () => clearInterval(id);\n  }, [delay]);\n}","export const PROYECTS_ON_GET_ALL_REQUESTED = 'PROYECTS_ON_GET_ALL_REQUESTED';\nexport const PROYECTS_ON_GET_ALL_SUCCEEDED = 'PROYECTS_ON_GET_ALL_SUCCEEDED';\nexport const PROYECTS_ON_GET_ALL_FAILED = 'PROYECTS_ON_GET_ALL_FAILED';\n\nexport const PROYECTS_ON_CREATE_REQUESTED = 'PROYECTS_ON_CREATE_REQUESTED';\nexport const PROYECTS_ON_CREATE_SUCCEEDED = 'PROYECTS_ON_CREATE_SUCCEEDED';\nexport const PROYECTS_ON_CREATE_FAILED = 'PROYECTS_ON_CREATE_FAILED';\n\nexport const PROYECTS_ON_GET_TASKS_REQUESTED = 'PROYECTS_ON_GET_TASKS_REQUESTED';\nexport const PROYECTS_ON_GET_TASKS_SUCCEEDED = 'PROYECTS_ON_GET_TASKS_SUCCEEDED';\nexport const PROYECTS_ON_GET_TASKS_FAILED = 'PROYECTS_ON_GET_TASKS_FAILED';\n\nexport const PROYECTS_ON_GET_TASKS_BY_IDS_REQUESTED = 'PROYECTS_ON_GET_TASKS_BY_IDS_REQUESTED';\nexport const PROYECTS_ON_GET_TASKS_BY_IDS_SUCCEEDED = 'PROYECTS_ON_GET_TASKS_BY_IDS_SUCCEEDED';\nexport const PROYECTS_ON_GET_TASKS_BY_IDS_FAILED = 'PROYECTS_ON_GET_TASKS_BY_IDS_FAILED';","import * as constants from 'redux_folder/constants/proyects.constants';\nimport {AnyAction} from 'redux'\n//funcion que devuelve un objeto a despachar.\n// PROYECTS_ON_GET_ALL\nexport const onProyectsGetAll = ():  AnyAction => (\n  { type: constants.PROYECTS_ON_GET_ALL_REQUESTED});\n  \nexport const onGetAllSucceeded = (data: any): AnyAction => (\n  { type: constants.PROYECTS_ON_GET_ALL_SUCCEEDED, data });\n\nexport const onGetAllFailed = (error: unknown): AnyAction => (\n  { type: constants.PROYECTS_ON_GET_ALL_FAILED, error });\n  \n\nexport const createProyect = (data: any):  AnyAction => (\n    { type: constants.PROYECTS_ON_CREATE_REQUESTED, data});\n  \nexport const createProyectSucceeded = (data: any): AnyAction => (\n    { type: constants.PROYECTS_ON_CREATE_SUCCEEDED, data });\n  \nexport const createProyectFailed = (error: unknown): AnyAction => (\n  { type: constants.PROYECTS_ON_CREATE_FAILED, error });\n\n\nexport const onGetTasks = (): AnyAction => (\n{type: constants.PROYECTS_ON_GET_TASKS_REQUESTED});\n\nexport const onGetTasksSucceeded = (data: any): AnyAction => (\n  { type: constants.PROYECTS_ON_GET_TASKS_SUCCEEDED, data });\n\nexport const onGetTasksFailed = (error: unknown): AnyAction => (\n  { type: constants.PROYECTS_ON_GET_TASKS_FAILED, error });\n  \n\nexport const onGetTasksByIds = (ids: string[]): AnyAction => (\n  {type: constants.PROYECTS_ON_GET_TASKS_BY_IDS_REQUESTED, ids});\n\nexport const onGetTasksByIdsSucceeded = (data: any): AnyAction => (\n  { type: constants.PROYECTS_ON_GET_TASKS_BY_IDS_SUCCEEDED, data });\n\nexport const onGetTasksByIdsFailed = (error: unknown): AnyAction => (\n  { type: constants.PROYECTS_ON_GET_TASKS_BY_IDS_FAILED, error });","import { Alert, Box, Button, FormControl, InputLabel, MenuItem, Select, TextField, Typography  } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport { format } from 'date-fns';\nimport useTypedSelector from 'hooks/useTypedSelector';\nimport React, { useEffect } from 'react'\nimport './index.css'\nimport { Controller, useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { onCreateHours } from 'redux_folder/actions/hours.actions';\nimport { onGetTasks } from 'redux_folder/actions/proyects.actions';\n\nconst AddTaskToHoursModal = (props: any) => {\n\n    const {date, handleClose} = props;\n\n    const {\n        handleSubmit, control, formState: { errors },\n      } = useForm();\n    \n    const dispatch = useDispatch()\n    const tasks = useTypedSelector((state) => state.proyects.tasks)\n    console.log(tasks)\n    useEffect(() => {\n        dispatch(onGetTasks())\n    }, [])\n    \n    const style = {\n        position: 'absolute' as 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        width: 400,\n        bgcolor: 'background.paper',\n        border: '2px solid #000',\n        boxShadow: '2px 2px darkcyan',\n        p: 4,\n      };\n    \n    const onSubmit = (data:any)=>{\n        let data_ = {\n            ...data,\n            user_id: 106226,\n            day: format(date, 'yyyy-MM-dd'),\n        }\n        if(!data.note){\n            data_ = {\n                ...data_,\n                note: '',\n            }\n        }\n\n        if(!data.hours){\n            data_ = {\n                ...data_,\n                hours: '0',\n            }\n        }\n        if(!data.minutes){\n            data_ = {\n                ...data_,\n                minutes: '0',\n            }\n        }\n        if(!data.seconds){\n            data_ = {\n                ...data_,\n                seconds: '0',\n            }\n        }\n        dispatch(onCreateHours(data_))\n        handleClose()\n        \n\n    }\n    return(\n        <Box sx={style}>\n                <Typography id=\"title\" variant=\"h6\" component=\"h2\">\n                    New time entry for {format(date,'eeee dd/MM/yyyy')}\n                </Typography>\n                <form onSubmit={handleSubmit(onSubmit)} style={{display: 'flex', flexDirection:'column', justifyContent:'center'}}>\n                <Controller\n                    control={control}\n                    render={({ field: { onChange, onBlur, value } }) => {\n                        return (\n                            <FormControl fullWidth style={{marginTop: 40}}>\n                                <InputLabel id=\"tasks\"> Tasks </InputLabel>\n                                <Select\n                                    labelId=\"tasks\"\n                                    id=\"tasks\"\n                                    value={value}\n                                    label=\"Tasks\"\n                                    onChange={onChange}\n                                    style={{minWidth: '80%'}}\n                                >\n                                    {tasks.map((task) => <MenuItem value={task.idTarea}> {task.nombre} from {task.idProyecto.nombre}</MenuItem>)}\n                                </Select>\n                            </FormControl>\n                        )}}\n                    name=\"task_id\"\n                    rules={{ required: true }}\n                />\n                <Controller\n                    control={control}\n                    render={({ field: { onChange, onBlur, value } }) => {\n                        return (\n                            <FormControl style={{margin: '40px 0px'}}>\n                                <InputLabel id=\"note\"/> \n                                <TextField id=\"note\"  label='Note' multiline rows={4} variant=\"outlined\" onChange={onChange}/>\n                            </FormControl>\n\n\n                        )}}\n                    name=\"note\"\n                />\n                <div style={{display: 'flex' , justifyContent: 'center'}}>\n                            \n                    <Controller\n                        control={control}\n                        render={({ field: { onChange, onBlur, value } }) => {\n                            return (\n                                <>\n                                    <TextField id=\"hours\"   inputProps={{style: {textAlign: 'center', width: 70}}} placeholder='00'  variant=\"standard\" onChange={onChange}/>\n                                </>\n                            )}}\n                        name=\"hours\"\n                        rules={{pattern: /^((?:[0-9]|1[0-9]|2[0-3])(?:.\\d{1,2})?|23(?:.00?)?)$/}}\n                    />\n                    <p style={{alignSelf: 'center', margin: 10}}>:</p>\n                        \n                    <Controller\n                        control={control}\n                        render={({ field: { onChange, onBlur, value } }) => {\n                            return (\n                                <>\n                                    <TextField id=\"minutes\"  inputProps={{style: {textAlign: 'center', width: 70}}} placeholder='00'  variant=\"standard\" onChange={onChange}/>\n                                </>\n                                )}}\n                        name=\"minutes\"\n                        rules={{pattern: /^((?:[0-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9])(?:.\\d{1,2})?|59(?:.00?)?)$/}}\n                    />\n                    <p style={{alignSelf: 'center', margin: 10}}>:</p>\n                    <Controller\n                        control={control}\n                        render={({ field: { onChange, onBlur, value } }) => {\n                            return (\n                                <>\n                                    <TextField id=\"seconds\"   inputProps={{style: {textAlign: 'center', width: 70}}} placeholder='00'  variant=\"standard\" onChange={onChange}/>\n                                </>\n                                )}}\n                        name=\"seconds\"\n                        rules={{pattern: /^((?:[0-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9])(?:.\\d{1,2})?|59(?:.00?)?)$/ }}\n                    />\n                            \n                </div>  \n\n                <Button style={{margin:'10px 0px',right: '0px', bottom:'0px', alignSelf: 'flex-end'}} endIcon={<AddIcon/>} variant=\"contained\" onClick={handleSubmit(onSubmit)}>\n                    Add\n                </Button>\n                </form>\n                {errors?.hours?.type === 'pattern' && <p style={{color: 'red', fontSize: 10}}>Please enter a valid number</p>}\n                {errors?.minutes?.type === 'pattern' && <p style={{color: 'red', fontSize: 10}}>Please enter a valid number</p>}\n                {errors?.seconds?.type === 'pattern' && <p style={{color: 'red', fontSize: 10}}>Please enter a valid number</p>}\n                {errors?.task_id?.type === 'required' && <p style={{color: 'red', fontSize: 10}}>Task Required</p>}  \n            </Box>\n    )\n}\n\nexport default AddTaskToHoursModal;","import React, { useEffect, useState } from 'react'\nimport './index.css';\nimport TextField from '@mui/material/TextField';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport DatePicker from '@mui/lab/DatePicker';\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\nimport ListItem from 'components/ListItem';\nimport HoursButtons from 'components/HoursButtons';\nimport AddIcon from '@mui/icons-material/Add';\nimport Button from '@mui/material/Button';\nimport { CircularProgress, IconButton, Modal } from '@mui/material';\nimport AddTaskToHoursModal from 'components/AddTaskToHoursModal';\nimport { onHoursGet } from 'redux_folder/actions/hours.actions';\nimport { useDispatch } from 'react-redux';\nimport useTypedSelector from 'hooks/useTypedSelector';\nimport { format } from 'date-fns';\nimport AssignmentIcon from '@mui/icons-material/Assignment';\nimport { onGetTasksByIds } from 'redux_folder/actions/proyects.actions';\n\n\n\nconst HoursView = (props:any) => {\n    const [date, setDate] = useState(new Date());\n    const [open, setOpen] = React.useState(false);\n    const handleOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n\n    const [timerOn, setTimerOn] = useState(false);\n\n    const dispatch = useDispatch()\n    const actionSucceeded = useTypedSelector((state) => state.hours.actionSucceeded)\n    const loading = useTypedSelector((state) => state.hours.loading)\n\n    useEffect(() => {\n        dispatch(onHoursGet({day:format(date, 'yyyy-MM-dd'), user_id: '106226'}))\n    }, [])\n    \n    useEffect(() => {\n        if(actionSucceeded){\n            dispatch(onHoursGet({day:format(date, 'yyyy-MM-dd'), user_id: '106226'}))\n        }\n    }, [actionSucceeded, date, dispatch])\n\n    const hours = useTypedSelector((state) => state.hours.hours)\n\n    useEffect(() => {\n        dispatch(onGetTasksByIds(hours.map((hour) => hour.task_id)))\n    }, [hours, dispatch])\n\n\n\n\n    const tasks = useTypedSelector((state) => state.proyects.tasks)\n\n    \n    return (\n        <div className=\"hoursView\">\n            <div className=\"rowDiv\">\n                <h1 className='title'>\n                    Area personal\n                </h1>\n                <div className=\"rowDiv\">\n                    <div className=\"calendar\">\n                        <LocalizationProvider dateAdapter={AdapterDateFns}>\n                            <DatePicker\n                                label=\"Date\"\n                                value={date}\n                                onChange={(newValue) => {if(newValue){setDate(newValue)}}}\n                                renderInput={(params) => <TextField {...params} />}\n                            />\n                        </LocalizationProvider>\n                    </div>\n                    \n                </div>\n            </div>\n            <Button style={{marginLeft: 40}} startIcon={<AddIcon/>} onClick={handleOpen}>\n                Add task\n            </Button>\n            <Modal\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <AddTaskToHoursModal date={date } handleClose={handleClose}/>\n            </Modal>\n            \n            \n            <div className=\"listBox\" >\n                {((hours.length === 0) \n                    ? (loading)\n                        ? <CircularProgress style={{top: '50%', left: '50%',}}/>\n                        :<div style={{display: 'flex', flexDirection: 'column'}}>\n                            <AssignmentIcon style={{alignSelf: 'center', width: 100, height: 100, color: 'grey', opacity: '0.5'}} />\n                            <p style={{alignSelf: 'center', color: 'grey', fontSize:20, fontFamily:'Courier New, Courier, monospace', fontStyle:'italic', fontWeight:'500'}} >No hours yet</p> \n                        </div>\n                    :<div className=\"hoursList\">\n                        <ul className='list'>\n                            {hours.map((hour:any) => (\n                                <div>\n                                    <ListItem item={hour} task={tasks.find((task) => `${task.idTarea}` === hour.task_id)}>\n                                        <HoursButtons hour={hour} date={date} timerOn={timerOn} setTimerOn={setTimerOn} />\n                                    </ListItem>\n                                </div>\n                            )) }\n                        </ul>\n                    </div>)}\n            </div>\n        </div>\n    )\n}\n\nexport default HoursView\n\n","import React from 'react'\nimport HoursView from 'views/Hours';\n\nconst HoursContainer = () => {\n    \n    const hours = [\n        {\n            name: 'Task 1',\n            description: 'Description 1',\n            minutes: 0,\n            hours: 0,\n            seconds: 0,\n        },\n        {\n            \n            name: 'Task 2',\n            description: 'Description 2',\n            minutes: 58,\n            hours: 0,\n            seconds: 55,\n        }\n    ]\n    return (\n        <HoursView hours={hours}/>    \n    )\n}\n\nexport default HoursContainer;\n","import React from 'react'\nimport {Link} from \"react-router-dom\";\n//import Button from 'components/Button/Button';\nimport './index.css'\nimport {Button, Accordion} from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport useTypedSelector from 'hooks/useTypedSelector';\n\nconst SoporteView = (props: any) => {\n  const state = useTypedSelector((state) => state.products);\n    if(state.loading){\n        return (\n            <h2>Loading...</h2>\n        )\n    }\n  return (\n    <>\n      <div className='body'>\n            \n            <div className='d-flex flex-row' id=\"titulo\">{/* Lo pongo a la izquierda y que ocupe todo el ancho  */}\n                <h2>Productos</h2>\n            </div>\n            \n            <Accordion className='productos'>\n                {Object.entries(state.products).map((product: any, index:number)=> (\n                    <Accordion.Item eventKey={index.toString()}>\n                        <Accordion.Header>{product[0]}</Accordion.Header>\n                        <Accordion.Body>\n                        {product[1].map((version: string, index:number)=> (\n                            <div>\n                                <Link to=\"/soporte/tickets\" state={{ product: product[0], version: version }}>\n                                    <span>{version}</span>\n                                </Link>\n                            </div>\n                        ))}\n                        </Accordion.Body>\n                    </Accordion.Item>\n                ))}\n            </Accordion>\n\n        </div>\n    </>\n    )\n}\n\nexport default SoporteView;","export const TICKETS_ON_GET_ALL_REQUESTED = 'TICKETS_ON_GET_ALL_REQUESTED';\nexport const TICKETS_ON_GET_ALL_SUCCEEDED = 'TICKETS_ON_GET_ALL_SUCCEEDED';\nexport const TICKETS_ON_GET_ALL_FAILED = 'TICKETS_ON_GET_ALL_FAILED';\n\nexport const PRODUCTS_ON_GET_ALL_REQUESTED = 'PRODUCTS_ON_GET_ALL_REQUESTED';\nexport const PRODUCTS_ON_GET_ALL_SUCCEEDED = 'PRODUCTS_ON_GET_ALL_SUCCEEDED';\nexport const PRODUCTS_ON_GET_ALL_FAILED = 'PRODUCTS_ON_GET_ALL_FAILED';\n\nexport const TAREAS_ON_GET_ALL_REQUESTED = 'TAREAS_ON_GET_ALL_REQUESTED';\nexport const TAREAS_ON_GET_ALL_SUCCEEDED = 'TAREAS_ON_GET_ALL_SUCCEEDED';\nexport const TAREAS_ON_GET_ALL_FAILED = 'TAREAS_ON_GET_ALL_FAILED';\n\nexport const RESOURCES_ON_GET_ALL_REQUESTED = 'RESOURCES_ON_GET_ALL_REQUESTED';\nexport const RESOURCES_ON_GET_ALL_SUCCEEDED = 'RESOURCES_ON_GET_ALL_SUCCEEDED';\nexport const RESOURCES_ON_GET_ALL_FAILED = 'RESOURCES_ON_GET_ALL_FAILED';\n\nexport const CLIENTS_ON_GET_ALL_REQUESTED = 'CLIENTS_ON_GET_ALL_REQUESTED';\nexport const CLIENTS_ON_GET_ALL_SUCCEEDED = 'CLIENTS_ON_GET_ALL_SUCCEEDED';\nexport const CLIENTS_ON_GET_ALL_FAILED = 'CLIENTS_ON_GET_ALL_FAILED';","import * as constants from 'redux_folder/constants/tickets.constants';\nimport {AnyAction} from 'redux'\n\n// TICKETS_ON_GET_ALL\nexport const onTicketsGetAll = (producto:string, version:string):  AnyAction => (\n  { type: constants.TICKETS_ON_GET_ALL_REQUESTED, producto: producto, version: version});\n\nexport const onTicketsGetAllSucceeded = (data: any): AnyAction => (\n  { type: constants.TICKETS_ON_GET_ALL_SUCCEEDED, data });\n\nexport const onTicketsGetAllFailed = (error: unknown): AnyAction => (\n  { type: constants.TICKETS_ON_GET_ALL_FAILED, error });\n\n\n// PRODUCTS_ON_GET_ALL\nexport const onProductsGetAll = ():  AnyAction => (\n  { type: constants.PRODUCTS_ON_GET_ALL_REQUESTED});\n\nexport const onProductsGetAllSucceeded = (data: any): AnyAction => (\n  { type: constants.PRODUCTS_ON_GET_ALL_SUCCEEDED, data });\n\nexport const onProductsGetAllFailed = (error: unknown): AnyAction => (\n  { type: constants.PRODUCTS_ON_GET_ALL_FAILED, error });\n\n// TAREAS_ON_GET_ALL\nexport const onTareasGetAll = ():  AnyAction => (\n  { type: constants.TAREAS_ON_GET_ALL_REQUESTED});\n\nexport const onTareasGetAllSucceeded = (data: any): AnyAction => (\n  { type: constants.TAREAS_ON_GET_ALL_SUCCEEDED, data });\n\nexport const onTareasGetAllFailed = (error: unknown): AnyAction => (\n  { type: constants.TAREAS_ON_GET_ALL_FAILED, error });\n\n// RESOURCES_ON_GET_ALL\nexport const onResourcesGetAll = ():  AnyAction => (\n  { type: constants.RESOURCES_ON_GET_ALL_REQUESTED});\n\nexport const onResourcesGetAllSucceeded = (data: any): AnyAction => (\n  { type: constants.RESOURCES_ON_GET_ALL_SUCCEEDED, data });\n\nexport const onResourcesGetAllFailed = (error: unknown): AnyAction => (\n  { type: constants.RESOURCES_ON_GET_ALL_FAILED, error });\n\n// CLIENTS_ON_GET_ALL\nexport const onClientsGetAll = ():  AnyAction => (\n  { type: constants.CLIENTS_ON_GET_ALL_REQUESTED});\n\nexport const onClientsGetAllSucceeded = (data: any): AnyAction => (\n  { type: constants.CLIENTS_ON_GET_ALL_SUCCEEDED, data });\n\nexport const onClientsGetAllFailed = (error: unknown): AnyAction => (\n  { type: constants.CLIENTS_ON_GET_ALL_FAILED, error });\n","import React, { useState } from 'react';\nimport SoporteView from 'views/Soporte'\nimport {useDispatch} from 'react-redux'\nimport { onTicketsGetAll, onProductsGetAll} from 'redux_folder/actions/tickets.actions';\nimport useTypedSelector from 'hooks/useTypedSelector';\n\nconst SoporteContainer = () => {\n    \n    \n    const dispatch = useDispatch();\n    \n    const products = [{\"name\":\"Siu Guaraniii\",\"versions\":[\"1.0.0\"]},{\"name\":\"Proyecto 2\",\"versions\":[\"2.0\",\"2.1\",\"2.1.1\"]}];\n    dispatch(onProductsGetAll());\n\n    return (<SoporteView products ={products} />);\n}\n\nexport default SoporteContainer\n","import React from 'react'\n//import './Table.css'\nimport Table from 'react-bootstrap/Table'\nimport moment from 'moment'\n\nconst Tabla = (props:any) => {\n    const {tickets} = props;\n    const {onRowClick} = props;\n    return (\n        <Table striped bordered hover style={{'height': '350px','overflow': 'scroll', 'display': 'block'}}>\n                        <thead>\n                            <tr>\n                                <th>Nombre</th>\n                                <th>Tipo</th>\n                                <th>Recurso</th>\n                                <th>Estado</th>\n                                <th>Cliente</th>\n                                <th>Deadline</th> \n                            </tr>\n                        </thead>\n                        <tbody >\n                            {tickets.map((ticket: { nombre: string; tipo: string; recurso: string; estado: string; cliente: string; fecha_limite: string;}, index:number)=> (\n                            <tr onClick={()=>{onRowClick(index)}}>\n                                <td>{ticket.nombre}</td>\n                                <td>{ticket.tipo}</td>\n                                <td>{ticket.recurso}</td>\n                                <td>{ticket.estado}</td>\n                                <td>{ticket.cliente}</td>\n                                <td>{moment(new Date(parseInt(ticket.fecha_limite))).format(\"DD/MM/YYYY\")}</td>\n                            </tr>\n                            ))}\n                        </tbody>\n                    </Table>\n    )\n}\n\nexport default Tabla","import React from 'react'\nimport moment from 'moment'\nimport './Descripcion.css'\nimport Button from 'react-bootstrap/Button'\nimport { AnyRecord } from 'dns';\nimport {Link} from 'react-router-dom';\nimport { List, ListItem, ListItemText} from '@mui/material';\nimport useTypedSelector from 'hooks/useTypedSelector';\n\nconst Descripcion = (props:any) => {\n    let {ticket} = props;\n    // let {product} = props;\n    // let {version} = props;\n    const state = useTypedSelector((state) => state.tareas);\n    const tareas = state.tareas;\n    if(!ticket){\n        return (<div></div>)\n    }\n    const tareas_ticket = tareas.filter((tarea:any) => {return ticket.tareas.includes(tarea.idTarea)});\n    if(state.loading){\n        return (\n            <h2>Loading...</h2>\n        )\n    }\n    return (\n        <div className='info'>\n            <h6>{ticket.nombre}</h6>\n            <div>\n                <p className='subtitulo margen_chico'>Descripción:</p>\n                <p className='margen_chico descripcion'>{ticket.descripcion}</p>\n            </div>\n            <div className='d-flex flex-row justify-content-around info_item'>\n                <div>\n                    <p className='subtitulo margen_chico'>Tipo:</p>\n                    <p className='margen_chico'>{ticket.tipo}</p>\n                </div>\n                <div>\n                    <p className='subtitulo margen_chico'>Severidad:</p>\n                    <p className='margen_chico'>{ticket.severidad}</p>\n                </div>\n            </div>\n            <div className='d-flex flex-row justify-content-evenly'>\n                <div>\n                    <p className='subtitulo margen_chico'>Fecha creación:</p>\n                    <p className='margen_chico'>{moment(new Date(parseInt(ticket.fecha_creacion))).format(\"DD/MM/YYYY\")}</p>\n                </div>\n                <div>\n                    <p className='subtitulo margen_chico'>Fecha límite:</p>\n                    <p className='margen_chico'>{moment(new Date(parseInt(ticket.fecha_limite))).format(\"DD/MM/YYYY\")}</p>\n                </div>\n            </div>\n            <div className='d-flex flex-row justify-content-around'>\n                <div>\n                    <p className='subtitulo margen_chico'>Cliente:</p>\n                    <p className='margen_chico'>{ticket.cliente}</p>\n                </div>\n                <div>\n                    <p className='subtitulo margen_chico'>Creador:</p>\n                    <p className='margen_chico'>{ticket.creador}</p>\n                </div>\n            </div>\n            <div className='d-flex flex-row justify-content-center'>\n                <p className='subtitulo margen_chico margen_derecho'>Recurso:</p>\n                <p className='margen_chico'>{ticket.recurso}</p>\n            </div>\n\n            <p className='subtitulo margen_chico margen_derecho'>Tareas:</p>\n            <List>\n                {tareas_ticket.map((tarea:any) => (\n                    <ListItem disablePadding>\n                        <ListItemText primary={tarea.nombre} />\n                    </ListItem>\n                ))}\n            </List>\n            <div className='d-flex flex-column align-items-center'>\n                \n                <Link to='/soporte/tickets/eliminar' \n                className='btn btn-secondary boton_accion'\n                state={{ ticketID: ticket.id,\n                 nombre : ticket.nombre ,\n                 descrip : ticket.descripcion,\n                 producto : ticket.producto,\n                 version : ticket.version,\n                 tareas : ticket.tareas,\n                 estado : ticket.estado\n                 }}>\n                    Eliminar\n                </Link>\n\n\n                <Link to='/soporte/tickets/modificar' \n                className='btn btn-dark boton_accion'\n                state={{ ticketID: ticket.id,\n                 nombre : ticket.nombre ,\n                 descrip : ticket.descripcion,\n                 severidad : ticket.severidad,\n                 estado : ticket.estado\n                 }}>\n                    Modificar\n                </Link>\n                \n            </div>\n        </div>\n    )\n}\n\nexport default Descripcion","import React, { useState } from 'react';\nimport {Button, Accordion} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Link} from 'react-router-dom';\nimport Tabla from 'components/Tabla/Tabla'\nimport './index.css'\nimport Descripcion from '../componentes/Descripcion';\nimport useTypedSelector from 'hooks/useTypedSelector';\nimport {useDispatch} from 'react-redux';\nimport { onTareasGetAll } from 'redux_folder/actions/tickets.actions';\n\n\n\nconst TicketsView = (props: any) => {\n    const state = useTypedSelector((state) => state.tickets);\n    const tickets = state.tickets;\n\n    const [ ticket_i, setTicketI ] = useState(0);\n\n\n    function onRowClick(i:number){\n        setTicketI(i)\n    }\n    \n    const {product} = props;\n    const {version} = props;\n\n    const [ search, setSearch ] = useState('');\n    const filter_name = (event:any) => {\n        setSearch(event.target.value);\n    }\n\n    let filtered_tickets = tickets.filter((ticket:any) => {return ticket.nombre.toLowerCase().includes(search.toLowerCase())});\n\n    if(state.loading){\n        return (\n            <h2>Loading...</h2>\n        )\n    }\n\n    return (\n      <>\n        <div className='body'>\n            <div  className='d-flex flex-row justify-content-between titulo'>\n                <div>\n                    <h2>Tickets</h2>\n                </div>\n\n                <div>\n                <label>\n                    Filtro nombre:\n                    <input type=\"text\" name=\"search\" onChange={filter_name}/>\n                </label>\n                </div>\n\n                <div>\n                    <h4>Proyecto: {product}</h4>\n                    <h5>Versión: {version}</h5>\n                </div>\n            </div>\n            <div className='d-flex flex-row justify-content-evenly tabla_aside'>\n                <div className='d-flex flex-column justify-content-between tabla'>\n                    \n                    <Tabla tickets={filtered_tickets} onRowClick={onRowClick} />\n\n                    <div className='d-flex flex-row justify-content-between'>\n                        <Link to='/soporte' className='btn btn-secondary boton_pie_pagina'>\n                            Volver a Productos\n                        </Link>\n                        <Link to='/soporte/tickets/crear' className='btn btn-dark boton_pie_pagina'\n                                                            state={{ \n                                                                producto: product,\n                                                                version : version\n                                                                }}>\n                            Crear nuevo ticket\n                        </Link>\n                    </div>\n                </div>\n                <div className='aside shadow bg-white rounded'>\n                    <Descripcion ticket={filtered_tickets ? filtered_tickets[ticket_i] : null}/>\n                </div>\n            </div>\n            \n        </div>\n      </>\n      )\n  }\n\n  export default TicketsView;","import React from 'react'\nimport TicketsView from 'views/Soporte/Tickets'\nimport {useDispatch} from 'react-redux'\nimport { onTicketsGetAll, onTareasGetAll } from 'redux_folder/actions/tickets.actions';\nimport { useLocation} from 'react-router-dom';\n\nconst TicketsContainer = () => {\n    const product = useLocation().state.product;\n    const version = useLocation().state.version;\n\n    const dispatch = useDispatch();\n    dispatch(onTicketsGetAll(product, version));\n    dispatch(onTareasGetAll());\n\n   \n    return (\n        <TicketsView product={product} version={version}/>\n    )\n}\n\nexport default TicketsContainer","import axios, { AxiosResponse } from 'axios';\n\n\nconst api = axios.create();\n\nasync function getOptions() {\n  const options = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n  return options;\n}\n\nfunction errorResponse(error: any) {\n  const { response } = error;\n  let message = error;\n  if (response) {\n    const { data } = response;\n    message = data.message;\n  }\n  return new Error(message);\n}\n\nexport async function get(url: string, headers = {}): Promise<AxiosResponse> {\n  try {\n    const getToken = await getOptions();\n    const options = { ...getToken, ...headers };\n    const response = await api.get(url, options);\n    return response;\n  } catch (error: any) {\n    throw errorResponse(error);\n  }\n}\n\nexport async function post(url: string, params = {}, headers = {}): Promise<any> {\n  try {\n    const getToken = await getOptions();\n    const options = { ...getToken, ...headers };\n    const response = await api.post(url, params, options);\n    return response;\n  } catch (error: any) {\n    throw errorResponse(error);\n  }\n}\n\nexport async function put(url: string, params = {}, headers = {}): Promise<any> {\n  try {\n    const getToken = await getOptions();\n    const options = { ...getToken, ...headers };\n    const { data } = await api.put(url, params, options);\n    return data;\n  } catch (error) {\n    throw errorResponse(error);\n  }\n}\n\nexport async function patch(url: string, params = {}, headers = {}): Promise<any> {\n  try {\n    const getToken = await getOptions();\n    const options = { ...getToken, ...headers };\n    const { data } = await api.patch(url, params, options);\n    return data;\n  } catch (error) {\n    throw errorResponse(error);\n  }\n}\n\nexport async function delete_(url: string, headers = {}): Promise<any> {\n  try {\n    const getToken = await getOptions();\n    const options = { ...getToken, ...headers };\n    const { data } = await api.delete(url, options);\n    return data;\n  } catch (error) {\n    throw errorResponse(error);\n  }\n}\n","import React, { useState } from 'react'\nimport './FormularioCrear.css'\nimport Form from 'react-bootstrap/Form'\nimport { FloatingLabel } from 'react-bootstrap'\nimport Button from 'react-bootstrap/Button'\nimport useTypedSelector from 'hooks/useTypedSelector';\nimport { post } from 'services/api';\nimport { useNavigate } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\n\nconst FormularioCrear = (props:any) => {\n    const {tickets} = props;\n    const {onRowClick} = props;\n    const {handleSubmit} = props;\n    const navigate = useNavigate();\n\n    const location = useLocation();\n    const { producto } = location.state;\n    const {version} = location.state;\n\n    const resources_state = useTypedSelector((state) => state.resources);\n    const tareas_state = useTypedSelector((state) => state.tareas);\n    const clients_state = useTypedSelector((state) => state.clients);\n    const resources = resources_state.resources;\n    console.log(tareas_state)\n    const tareas = tareas_state.tareas.filter((tarea:any) => {return tarea.idTicket == 0});\n    const clients = clients_state.clients;\n\n    const [formValues, setFormValues ] = useState({\n        nombre: '',\n        producto: producto,\n        version: version,\n        estado: 'Abierto',\n        tipo: '',\n        severidad: '1',\n        cliente: '',\n        recurso: '',\n        descripcion: '',\n        creador: '',\n        tareas: [\"1\"],\n    })\n\n    const handleChange = (event:any) => {\n        const {name , value} = event.target\n        console.log(name, value)\n        if (name==\"tareas\"){\n            setFormValues({...formValues, [name]: [ parseInt(value) ]})\n        }else{\n            setFormValues({...formValues, [name]: value})\n        }\n    }\n\n    const enviar_solicitud_agregar = (e:any) => {\n        e.preventDefault()\n        post(`https://shielded-shelf-11253.herokuapp.com/tickets`,formValues);\n        alert(\"Ticket correctamente creado\");\n        console.log(formValues);\n        navigate(-1);\n    }\n\n    if(resources_state.loading || tareas_state.loading || clients_state.loading){\n        return (\n            <h2>Loading...</h2>\n        )\n    }\n    return (\n        <div className='d-flex justify-content-between'>\n            <Form className='d-flex flex-column justify-content-evenly formulario'>\n                <Form.Group className=\"d-flex flex-row justify-content-evenly\" controlId=\"formBasicEmail\">\n                    <Form.Label className='etiqueta'>Nombre</Form.Label>\n                    <Form.Control className='input_grande' type=\"text\" placeholder=\"Nombre del ticket\" name=\"nombre\" value={formValues.nombre} onChange={handleChange} />\n                    {/* <Form.Text className=\"text-muted\">\n                    We'll never share your email with anyone else.\n                </Form.Text> */}\n                </Form.Group>\n                <div className=\"d-flex flex-row justify-content-evenly doble_input\">\n                    <Form.Group className='d-flex flex-row primer_input' controlId=\"floatingSelect\">\n                        <Form.Label className='etiqueta'>Proyectos</Form.Label>\n                        <Form.Control type=\"text\" className='input_chico' name=\"producto\" value={formValues.producto} readOnly={true}  />\n                    </Form.Group>\n                    <Form.Group className='d-flex flex-row primer_input' controlId=\"floatingSelect\">\n                        <Form.Label className='etiqueta'>Version</Form.Label>\n                        <Form.Control type=\"text\" className='input_chico' name=\"version\" value={formValues.version} readOnly={true} />\n                    </Form.Group>\n                </div>\n\n                <div className=\"d-flex flex-row justify-content-evenly\">\n                    <Form.Group className='d-flex flex-row primer_input' controlId=\"floatingSelect\">\n                        <Form.Label className='etiqueta'>Estado</Form.Label>\n                        <Form.Select className='input_chico' name=\"estado\" value={formValues.estado} onChange={handleChange}>\n                            <option value=\"Abierto\">Abierto</option>\n                            <option value=\"En proceso\">En Proceso</option>\n                            <option value=\"En proceso\">A la espera de desarollo</option>\n                            <option value=\"Cerrado\">A la espera de cliente</option>\n                            <option value=\"En Curso\">Cerrado</option>\n                        </Form.Select>\n                    </Form.Group>\n                    <Form.Group className='d-flex flex-row primer_input' controlId=\"floatingSelect\">\n                        <Form.Label className='etiqueta'>Tipo</Form.Label>\n                        <Form.Select className='input_chico' name=\"tipo\" value={formValues.tipo} onChange={handleChange}>\n                            <option> </option>\n                            <option value=\"consulta\">Consulta</option>\n                            <option value=\"incidencia\">Incidencia</option>\n                        </Form.Select>\n                    </Form.Group>\n                </div>\n\n                <div className=\"d-flex flex-row justify-content-evenly\">\n                    <Form.Group className='d-flex flex-row primer_input' controlId=\"floatingSelect\">\n                        <Form.Label className='etiqueta'>Severidad</Form.Label>\n                        <Form.Select className='input_chico' name=\"severidad\" value={formValues.severidad} onChange={handleChange}>\n                            <option value=\"1\">1</option>\n                            <option value=\"2\">2</option>\n                            <option value=\"3\">3</option>\n                            <option value=\"4\">4</option>\n                        </Form.Select>\n                    </Form.Group>\n                    <Form.Group className='d-flex flex-row primer_input' controlId=\"floatingSelect\">\n                        <Form.Label className='etiqueta'>Cliente</Form.Label>\n                        <Form.Select className='input_chico' name=\"cliente\" value={formValues.cliente} onChange={handleChange}>\n                            {clients.map((client:any) =>(\n                            <option value={client.id}>{client['razon social']}</option>\n                            ))}\n                        </Form.Select>\n                    </Form.Group>\n                </div>\n\n                <Form.Group className=\"d-flex flex-row justify-content-evenly\" controlId=\"formBasicEmail\">\n                    <Form.Label className='etiqueta'>Creador</Form.Label>\n                    <Form.Control className='input_grande' type=\"text\" placeholder=\"Complete\" name=\"creador\" value={formValues.creador} onChange={handleChange}/>\n                    {/* <Form.Text className=\"text-muted\">\n                    We'll never share your email with anyone else.\n                </Form.Text> */}\n                </Form.Group>\n                \n                <Form.Group className='d-flex flex-row' controlId=\"floatingSelect\">\n                    <Form.Label className='etiqueta'>Recurso</Form.Label>\n                    <Form.Select className='input_grande' name=\"recurso\" value={formValues.recurso} onChange={handleChange}>\n                        <option> </option>\n                        {resources.map((resource:any) =>(\n                            <option value={resource.legajo}>{resource.Nombre + ' ' + resource.Apellido}</option>\n                        ))}\n                    </Form.Select>\n                </Form.Group>\n\n                    <Form.Group className='d-flex flex-row' controlId=\"floatingSelect\">\n                        <Form.Label className='etiqueta'>Tarea</Form.Label>\n                        <Form.Select className='input_grande' name=\"tareas\" onChange={handleChange} value={formValues.tareas}>\n                            <option> </option>\n                            {tareas.map((tarea:any) =>(\n                                <option value={tarea.idTarea}>{tarea.idTarea + \":\" + tarea.nombre}</option>\n                            ))}\n                        </Form.Select>\n                    </Form.Group>\n                <div className=\"d-flex flex-row justify-content-evenly\">\n                    <Form.Group className='d-flex flex-row' controlId=\"formBasicEmail\">\n                        <Form.Label className='etiqueta'>Descripcion</Form.Label>\n                        <Form.Control\n                            className='input_descripcion_crear'\n                            as=\"textarea\"\n                            placeholder=\"Descripción del ticket\"\n                            name=\"descripcion\"\n                            value={formValues.descripcion}\n                            onChange={handleChange}\n                            style={{ height: '100px' }}\n                            />\n                    </Form.Group>\n\n                    <Button className='btn btn-dark' onClick={enviar_solicitud_agregar}>\n                        Crear ticket\n                    </Button>\n                </div>\n            </Form>\n\n            <div className='d-flex flex-column justify-content-center'>\n                <h5>Tareas</h5>\n                <ul>\n                    <li>1</li>\n                    <li>2</li>\n                    <li>3</li>\n                </ul>\n            </div>\n        </div>\n    )\n}\n\nexport default FormularioCrear","import React from 'react'\nimport {Link} from \"react-router-dom\";\n//import Button from 'components/Button/Button';\n//import './index.css'\nimport {Button, Accordion} from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport FormularioCrear from 'components/FormularioCrear/FormularioCrear';\nimport {post} from 'services/api';\n\nconst FormularioTicketsView = (props: any) => {\n//  const {onGetTickets} = props;\n//  const {tickets}      = props;\n\n  const handleSubmit = (data:any) => {\n    console.log(data)\n    const respuesta = post('https://shielded-shelf-11253.herokuapp.com/tickets',data);\n  }\n\n  return (\n    <>\n      <div className='body'>\n            \n            <div className='d-flex flex-row' id=\"titulo\">{/* Lo pongo a la izquierda y que ocupe todo el ancho  */}\n                <h2>Crear ticket</h2>\n            </div>\n            \n            <FormularioCrear handleSubmit={handleSubmit}/>\n\n        </div>\n    </>\n    )\n}\n\nexport default FormularioTicketsView;\n","import React from 'react'\nimport FormularioTicketsView from 'views/Soporte/FormularioTickets'\nimport {useDispatch} from 'react-redux'\nimport { onResourcesGetAll, onTareasGetAll, onClientsGetAll } from 'redux_folder/actions/tickets.actions';\nconst FormularioTicketsContainer = () => {\n    const dispatch = useDispatch();\n    dispatch(onResourcesGetAll());\n    dispatch(onTareasGetAll());\n    dispatch(onClientsGetAll());\n\n    return (\n        <FormularioTicketsView />\n    )\n}\n\nexport default FormularioTicketsContainer","import React, { Component } from 'react';\nimport './FormularioEliminar.css';\nimport Form from 'react-bootstrap/Form';\nimport { FloatingLabel } from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button';\nimport { NavigateFunction, useLocation , Link} from 'react-router-dom';\nimport { AnyARecord } from 'dns';\nimport { delete_ } from 'services/api';\nimport { useNavigate } from 'react-router-dom';\n\nfunction solicitarEliminacionDeTicket( id : any, estado : any, navigate : NavigateFunction) {\n\n\n    if (estado === \"Cerrado\") {\n        const respuesta = delete_(`https://shielded-shelf-11253.herokuapp.com/tickets/${id}`);\n        alert(\"Ticket correctamente eliminado\");\n        navigate(-1);\n    }\n    else{\n        alert(\"El ticket debe estar cerrado para poder ser eliminado\");\n        navigate(-1); //va a la pagina previa\n    }\n}\n\n\n\nconst FormularioEliminar = (props:any) => {\n\n    const location = useLocation();\n    const { ticketID } = location.state;\n    const {nombre} = location.state;\n    const {descrip} = location.state;\n    const {estado} = location.state;\n    const navigate = useNavigate();\n    const {producto} = location.state;\n    const {version} = location.state;\n    const {tareas} = location.state;\n\n    //const {tickets} = props;\n\n    return (\n        <div className='d-flex justify-content-center'>\n            <Form className='d-flex flex-column justify-content-evenly formulario_eliminar'>\n\n                <Form.Group className=\"d-flex flex-row justify-content-evenly\" controlId=\"formBasicEmail\">\n                    <Form.Label className='etiqueta_eliminar'>ID del Ticket</Form.Label>\n                    <Form.Control value={ticketID} readOnly={true} className='input_grande_eliminar' type=\"text\" placeholder=\"Nombre del ticket\" />\n                </Form.Group>\n\n                <Form.Group className=\"d-flex flex-row justify-content-evenly\" controlId=\"formBasicEmail\">\n                    <Form.Label className='etiqueta_eliminar'>Nombre del Ticket</Form.Label>\n                    <Form.Control value={nombre} readOnly={true} className='input_grande_eliminar' type=\"text\" placeholder=\"Nombre del ticket\" />\n                </Form.Group>\n\n                <Form.Group className='d-flex flex-row' controlId=\"formBasicEmail\">\n                    <Form.Label  className='etiqueta_eliminar'>Descripcion</Form.Label>\n                    <Form.Control\n                        value={descrip}\n                        readOnly={true}\n                        className='input_grande_eliminar'\n                        as=\"textarea\"\n                        placeholder=\"Descripción del ticket\"\n                        style={{ height: '100px' }}\n                        />\n                </Form.Group>\n\n                <Form.Group className='d-flex flex-row justify-content-center' controlId=\"formBasicEmail\">\n                    <Button className='btn btn-secondary' onClick={() =>solicitarEliminacionDeTicket(ticketID, estado, navigate) }>\n                        Eliminar ticket\n                    </Button>\n                    <Link to=\"/soporte/tickets\" className='btn btn-dark' state={{ product: producto, version: version, tareas: tareas }}>\n                        Cancelar\n                    </Link>\n                </Form.Group>\n\n            </Form>\n        </div>\n    )\n}\n\nexport default FormularioEliminar","import React from 'react'\nimport {Link} from \"react-router-dom\";\n//import Button from 'components/Button/Button';\n//import './index.css'\nimport {Button, Accordion} from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport FormularioEliminar from 'components/FormularioEliminar/FormularioEliminar';\n\nconst FormularioEliminarTicketView = (props: any) => {\n//  const {onGetTickets} = props;\n//  const {tickets}      = props;\n\n  return (\n    <>\n      <div className='body'>\n            \n            <div className='d-flex flex-row' id=\"titulo\">{/* Lo pongo a la izquierda y que ocupe todo el ancho  */}\n                <h2>Eliminar Ticket</h2>\n            </div>\n            \n            <FormularioEliminar/>\n\n        </div>\n    </>\n    )\n}\n\nexport default FormularioEliminarTicketView;\n","import React from 'react';\nimport FormularioEliminarTicketView from 'views/Soporte/FormularioEliminarTicket';\nimport {useDispatch} from 'react-redux';\n// import { onTicketsGetAll } from 'redux_folder/actions/tickets.actions';\nimport useTypedSelector from 'hooks/useTypedSelector';\n\nconst EliminarTicketsContainer = () => {\n\n\n\n    const ticket_state = useTypedSelector((state) => state.tickets);\n\n    return (\n        <FormularioEliminarTicketView />\n    )\n}\n\nexport default EliminarTicketsContainer","import React , { useState }from 'react'\nimport './FormularioModificar.css'\nimport Form from 'react-bootstrap/Form'\nimport { FloatingLabel } from 'react-bootstrap'\nimport Button from 'react-bootstrap/Button'\nimport {Link} from \"react-router-dom\";\nimport { useLocation } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport { allowedNodeEnvironmentFlags } from 'process';\nimport { put } from 'services/api';\n\nconst FormularioModificar = (props:any) => {\n    const location = useLocation();\n    const { ticketID } = location.state;\n    const {nombre} = location.state;\n    const {descrip} = location.state;\n    const navigate = useNavigate();\n    //const {tickets} = props;\n\n\n\n    const [formValues, setFormValues ] = useState({\n        estado: 'abierto',\n        severidad: '1',\n        descripcion: descrip,\n    })\n\n    const handleChange = (event:any) => {\n        const {name , value} = event.target;\n        //console.log(name, value);\n        setFormValues({...formValues, [name]: value});\n    }\n\n    const enviar_solicitud_modificar = (e:any) => {\n        e.preventDefault();\n        put(`https://shielded-shelf-11253.herokuapp.com/tickets/${ticketID}`, formValues);\n        alert(\"Ticket correctamente actualizado\");\n        //console.log(formValues);\n        navigate(-1);\n    }\n\n\n    return (\n        <div className='d-flex justify-content-center'>\n            <Form className='d-flex flex-column justify-content-evenly formulario_modificar'>\n\n            <Form.Group className=\"d-flex flex-row justify-content-evenly\" controlId=\"formBasicEmail\">\n                    <Form.Label className='etiqueta_modificar'>ID del Ticket</Form.Label>\n                    <Form.Control value={ticketID} readOnly={true} className='input_grande' type=\"text\" placeholder=\"Nombre del ticket\" />\n                </Form.Group>\n\n                <Form.Group className=\"d-flex flex-row justify-content-evenly\" controlId=\"formBasicEmail\">\n                    <Form.Label className='etiqueta_modificar'>Nombre del Ticket</Form.Label>\n                    <Form.Control value={nombre} readOnly={true} className='input_grande' type=\"text\"  onChange={handleChange} />\n                </Form.Group>\n                <br></br>\n                <br></br>\n                <h2 className=\"flex-row justify-content-evenly\" >Campos Modificables</h2>\n                <br></br>\n                <Form.Group className=\"d-flex flex-row justify-content-evenly\" controlId=\"formBasicEmail\" >\n                    <Form.Label className='etiqueta_modificar'>Severidad</Form.Label>\n                    <Form.Select className='input_grande' name=\"severidad\" value={formValues.severidad} onChange={handleChange}>\n                            <option value=\"1\">1</option>\n                            <option value=\"2\">2</option>\n                            <option value=\"3\">3</option>\n                            <option value=\"4\">4</option>\n                        </Form.Select>\n                </Form.Group>\n                <br></br>\n\n                <Form.Group className=\"d-flex flex-row justify-content-evenly\" controlId=\"formBasicEmail\">\n                    <Form.Label className='etiqueta_modificar'>Estado</Form.Label>\n                    <Form.Select className='input_grande' name=\"estado\" value={formValues.estado} onChange={handleChange}>\n                            <option value=\"Abierto\">Abierto</option>\n                            <option value=\"En Proceso\">En Proceso</option>\n                            <option value=\"A la espera de desarollo\">A la espera de desarollo</option>\n                            <option value=\"A la espera de cliente\">A la espera de cliente</option>\n                            <option value=\"Cerrado\">Cerrado</option>\n                        </Form.Select>\n                </Form.Group>\n                <br></br>\n                <div className=\"d-flex flex-row justify-content-evenly\">\n                    <Form.Group className='d-flex flex-row' controlId=\"formBasicEmail\">\n                        <Form.Label  className='etiqueta_modificar'>Descripcion</Form.Label>\n                        <Form.Control\n                            value={formValues.descripcion}\n                            name=\"descripcion\"\n                            onChange={handleChange}\n                            className='input_descripcion'\n                            as=\"textarea\"\n                            placeholder={descrip}\n                            style={{ height: '100px' }}\n                            />\n                    </Form.Group>\n                </div>\n\n                <div className=\"d-flex flex-row justify-content-evenly\">\n                    <Form.Group className='d-flex flex-row' controlId=\"formBasicEmail\">\n                    <Button className='btn btn-dark' onClick={enviar_solicitud_modificar}>\n                        Modificar ticket\n                    </Button>\n                    <Button className='btn btn-dark' onClick={() => navigate(-1)} >\n                        Cancelar\n                    </Button>\n\n                    </Form.Group>\n                </div>\n\n            </Form>\n        </div>\n    )\n}\n\nexport default FormularioModificar","import React from 'react'\nimport {Link} from \"react-router-dom\";\n//import Button from 'components/Button/Button';\n//import './index.css'\nimport {Button, Accordion} from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport FormularioModificar from 'components/FormularioModificar/FormularioModificar';\n\nconst FormularioModificarTicketView = (props: any) => {\n//  const {onGetTickets} = props;\n//  const {tickets}      = props;\n\n  return (\n    <>\n      <div className='body'>\n            \n            <div className='d-flex flex-row' id=\"titulo\">{/* Lo pongo a la izquierda y que ocupe todo el ancho  */}\n                <h2>Modificar ticket</h2>\n            </div>\n            \n            <FormularioModificar/>\n\n        </div>\n    </>\n    )\n}\n\nexport default FormularioModificarTicketView;\n","import React from 'react';\nimport FormularioModificarTicketView from 'views/Soporte/FormularioModificarTicket';\nimport {useDispatch} from 'react-redux';\n// import { onTicketsGetAll } from 'redux_folder/actions/tickets.actions';\nimport useTypedSelector from 'hooks/useTypedSelector';\n\nconst ModificarTicketsContainer = () => {\n\n\n\n    const ticket_state = useTypedSelector((state) => state.tickets);\n\n    return (\n        <FormularioModificarTicketView />\n    )\n}\n\nexport default ModificarTicketsContainer","import React from 'react'\nimport './Button.css'\n\nconst Button = (props:any) => {\n    const {text, onClick} = props;\n    return (\n        <button onClick={onClick} className=\"Button\">{text}</button>\n    )\n}\n\nexport default Button\n","import React, { useState } from 'react'\n\nimport { Dialog } from 'primereact/dialog';\nimport { InputText } from 'primereact/inputtext';\nimport Button from 'components/Button/Button';\nimport { Box, FormControl, Input, InputLabel, MenuItem, Select } from '@mui/material';\n\nconst ProjectForm = (props: any) => {\n    const [enteredNombre, setEnteredNombre] = useState('');\n    const [enteredDescripcion, setEnteredDescripcion] = useState('');\n    const [enteredFechaInicioReal, setEnteredFechaInicioReal] = useState('');\n    const [enteredFechaInicioEstimada, setEnteredFechaInicioEstimada] = useState('');\n    const [enteredFechaFinalReal, setEnteredFechaFinalReal] = useState('');\n    const [enteredFechaFinalEstimada, setEnteredFechaFinalEstimada] = useState('');\n    const [enteredFechaEntrega, setEnteredFechaEntrega] = useState('');\n    const [enteredHoras, setEnteredHoras] = useState(0);\n    const [enteredEstado, setEnteredEstado] = useState('');\n    const [enteredPrioridad, setEnteredPrioridad] = useState('');\n\n    const estados = [\n        { value: 'No iniciada', label: 'No iniciada' },\n        { value: 'En desarrollo', label: 'En desarrollo' },\n        { value: 'Completada', label: 'Completada' }\n    ]\n\n    const prioridades = [\n        { value: 'Urgente!', label: 'Urgente!' },\n        { value: 'Importante', label: 'Importante' },\n        { value: 'Media', label: 'Media' },\n        { value: 'Baja', label: 'Baja' }\n    ]\n\n\n    const footer = (\n        <div>\n            <Button text=\"Guardar\" icon=\"pi pi-check\" onClick={() => {\n                const projectData = {\n                    nombre: enteredNombre,\n                    descripcion: enteredDescripcion,\n                    fechaInicioReal: enteredFechaInicioReal,\n                    fechaFinalizacionReal: enteredFechaFinalReal,\n                    fechaInicioEstimada: enteredFechaInicioEstimada,\n                    fechaFinalizacionEstimada: enteredFechaFinalEstimada,\n                    fechaEntregaComunicadaACliente: enteredFechaEntrega,\n                    horasEstimadas: enteredHoras,\n                    prioridad: enteredPrioridad,\n                    estado: enteredEstado\n                }\n                debugger;\n                console.log(projectData);\n                props.setProject(projectData);\n                props.onSave(projectData);\n                //console.log(projectData)\n                setEnteredNombre('');\n                setEnteredDescripcion('');\n                setEnteredFechaInicioReal('');\n                setEnteredFechaInicioEstimada('');\n                setEnteredFechaFinalReal('');\n                setEnteredFechaFinalEstimada('');\n                setEnteredFechaEntrega('');\n                setEnteredHoras(0);\n                setEnteredEstado('');\n                setEnteredPrioridad('');\n            }} />\n        </div>\n    );\n\n    const fechaInicioRealChangeHandler = (event) => {\n        let val = event.target.value.toString();\n        setEnteredFechaInicioReal(val);\n        // props.setProject((prevProject: { proyecto: any; }) => {\n        //     let proyecto = Object.assign({}, props.project);\n        //     return { proyecto };\n        // })\n    };\n    const fechaFinalizacionRealChangeHandler = (event) => {\n        let val = event.target.value.toString();\n        setEnteredFechaFinalReal(val);\n        // props.setProject((prevProject: { proyecto: any; }) => {\n        //     let proyecto = Object.assign({}, props.project);\n        //     proyecto.fechaFinalizacionReal = val;\n        //     return { proyecto };\n        // })\n    };\n    const fechaInicionEstimadoChangeHandler = (event) => {\n        let val = event.target.value.toString();\n        setEnteredFechaInicioEstimada(val);\n        // props.setProject((prevProject: { proyecto: any; }) => {\n        //     let proyecto = Object.assign({}, props.project);\n        //     return { proyecto };\n        // })\n\n    };\n    const fechaFinalizacionEstimadoChangeHandler = (event) => {\n        let val = event.target.value.toString();\n        setEnteredFechaFinalEstimada(val);\n        // props.setProject((prevProject: { proyecto: any; }) => {\n        //     let proyecto = Object.assign({}, props.project);\n        //     proyecto.fechaFinalizacionEstimado = val;\n        //     return { proyecto };\n        // })\n        // console.log(props.project);\n    };\n    const fechaEntregaChangeHandler = (event) => {\n        let val = event.target.value.toString();\n        setEnteredFechaEntrega(val);\n        // props.setProject((prevProject: { proyecto: any; }) => {\n        //     let proyecto = Object.assign({}, props.project);\n        //     proyecto.fechaEntregaComunicadaACliente = val;\n        //     return { proyecto };\n        // })\n        // console.log(props.project);\n    };\n    const horasChangeHandler = (event) => {\n        let val = parseInt(event.target.value);\n        setEnteredHoras(val);\n        // props.setProject(() => {\n        //     let proyecto = Object.assign({}, props.project);\n        //     proyecto.descripcion = val;\n        //     console.log(proyecto.horasEstimadas);\n        //     return { proyecto };\n        // })\n    }\n    const estadoChangeHandler = (event) => {\n        let val = event.target.value;\n        setEnteredEstado(val);\n        // props.setProject((prevProject: { proyecto: any; }) => {\n        //     let proyecto = Object.assign({}, props.project);\n        //     proyecto.estado = val;\n        //     return { proyecto };\n        // })\n        // console.log(val);\n    };\n    const prioridadChangeHandler = (event) => {\n        let val = event.target.value;\n        setEnteredPrioridad(val);\n        // props.setProject((prevProject: { proyecto: any; }) => {\n        //     let proyecto = Object.assign({}, props.project);\n        //     proyecto.prioridad = val;\n        //     return { proyecto };\n        // })\n        // console.log(val);\n    };\n\n    return (\n        <div>\n            <Dialog header={props.title} visible={props.visible} style={{ width: '400px' }} footer={footer} modal={true} onHide={() => props.setVisible(false)}>\n                <form id=\"proyecto-form\">\n                    <span className=\"p-float-label\">\n                        <label htmlFor=\"nombre\">Nombre</label>\n                        <Input type='text' name='nombre' value={enteredNombre} style={{ width: '100%' }} id=\"nombre\" onChange={(e: any) => {\n                            let val = e.target.value;\n                            setEnteredNombre(val);\n                            // props.setProject((prevProject: { proyecto: any; }) => {\n                            //     let proyecto = Object.assign({}, props.project);\n                            //     proyecto.nombre = val;\n                            //     // console.log(proyecto.nombre);\n                            //     return { proyecto };\n                            // })\n                            console.log(enteredNombre);\n                        }\n                        } />\n                    </span>\n                    <br />\n                    <span className=\"p-float-label\">\n                        <label htmlFor=\"descripcion\">Descripción</label>\n                        <Input type='text' value={enteredDescripcion} style={{ width: '100%' }} id=\"descripcion\" onChange={(e: any) => {\n                            let val = e.target.value;\n                            setEnteredDescripcion(val);\n                            // props.setProject((prevProject: { proyecto: any; }) => {\n                            //     let proyecto = Object.assign({}, props.project);\n                            //     proyecto.descripcion = val;\n                            //    // console.log(proyecto.descripcion);\n                            //     return { proyecto };\n                            // })\n                        }\n                        } />\n                    </span>\n                    <br />\n                    <label htmlFor=\"fechaInicioReal\">Fecha Inicio Real</label>\n                    <span className=\"p-float-label\">\n                        <Input type='date' data-data-format='YYYY-MM-DD' value={enteredFechaInicioReal} onChange={fechaInicioRealChangeHandler} />\n                    </span>\n                    <br />\n                    <label htmlFor=\"fechaFinalizacionReal\">Fecha Finalización Real</label>\n                    <span className=\"p-float-label\">\n                        <Input type='date' data-data-format='YYYY-MM-DD' value={enteredFechaFinalReal} onChange={fechaFinalizacionRealChangeHandler} />\n                    </span>\n                    <br />\n                    <label htmlFor=\"fechaInicioEstimada\">Fecha Inicio Estimada</label>\n                    <span className=\"p-float-label\">\n                        <Input type='date' data-data-format='YYYY-MM-DD' value={enteredFechaInicioEstimada} onChange={fechaInicionEstimadoChangeHandler} />\n                    </span>\n                    <br />\n                    <label htmlFor=\"fechaFinalizacionEstimada\">Fecha Finalización Estimada</label>\n                    <span className=\"p-float-label\">\n                        <Input type='date' data-data-format='YYYY-MM-DD' value={enteredFechaFinalEstimada} onChange={fechaFinalizacionEstimadoChangeHandler} />\n                    </span>\n                    <br />\n                    <label htmlFor=\"fechaEntregaComunicadaACliente\">Fecha de Entrega</label>\n                    <span className=\"p-float-label\">\n                        <Input type='date' data-data-format='YYYY-MM-DD' value={enteredFechaEntrega} onChange={fechaEntregaChangeHandler} />\n                    </span>\n                    <br />\n                    <span className=\"p-float-label\">\n                        <InputText type={'number'} value={enteredHoras} style={{ width: '100%' }} id=\"horasEstimadas\" onKeyPress={horasChangeHandler} onInput={horasChangeHandler} />\n                        <label htmlFor=\"HorasEstimadas\">Horas estimadas</label>\n                    </span>\n                    <br />\n                    <span className=\"p-float-label\">\n                        <Box sx={{ minWidth: 120 }}>\n                            <FormControl fullWidth>\n                                <InputLabel id='prioridad'>Prioridad</InputLabel>\n                                <Select labelId='prioridad' id=\"prioridades\" label='Prioridad' onChange={prioridadChangeHandler} value={enteredPrioridad}\n                                >\n                                    <MenuItem value={'Urgente!'}>Urgente!</MenuItem>\n                                    <MenuItem value={'Importante'}>Importante</MenuItem>\n                                    <MenuItem value={'Media'}>Media</MenuItem>\n                                    <MenuItem value={'Baja'}>Baja</MenuItem>\n                                </Select>\n                            </FormControl>\n                        </Box>\n                    </span>\n                    <br />\n                    <span className=\"p-float-label\">\n                        <Box sx={{ minWidth: 120 }}>\n                            <FormControl fullWidth>\n                                <InputLabel id='estado'>Estado</InputLabel>\n                                <Select labelId='Estado' id=\"estados\" label='Estado' onChange={estadoChangeHandler} value={enteredEstado}\n                                >\n                                    <MenuItem value={'No iniciada'}>No iniciada</MenuItem>\n                                    <MenuItem value={'En desarrollo'}>En desarrollo</MenuItem>\n                                    <MenuItem value={'En prueba'}>En prueba</MenuItem>\n                                    <MenuItem value={'Completada'}>Completada</MenuItem>\n                                </Select>\n                            </FormControl>\n                        </Box>\n                    </span>\n\n                </form>\n            </Dialog>\n        </div>\n    )\n}\n\nexport default ProjectForm;","import { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Panel } from 'primereact/panel'\nimport { Menubar } from 'primereact/menubar'\n\n\nconst ProjectItem = (props: any) => {\n\n\n    return (\n        <div>\n            <Menubar model={props.buttons}></Menubar>\n            <br></br>\n            <Panel header=\"PSA - Proyectos\" >\n                <DataTable value={props.items} selectionMode=\"single\" selection={props.selectedProject} onSelectionChange={(e: any) => props.setSelectedProject(e.value)}>\n                    <Column field=\"idProyecto\" header=\"Id Proyecto\"></Column>\n                    <Column field=\"nombre\" header=\"Nombre\"></Column>\n                    <Column field=\"descripcion\" header=\"Descripcion\"></Column>\n                    <Column field=\"fechaInicioReal\" header=\"Fecha inicio Real\"></Column>\n                    <Column field=\"fechaFinalizacionReal\" header=\"Fecha fin Real\"></Column>\n                    <Column field=\"fechaInicioEstimada\" header=\"Fecha inicio Estimada\"></Column>\n                    <Column field=\"fechaFinalizacionEstimada\" header=\"Fecha fin Estimada\"></Column>\n                    <Column field=\"fechaEntregaComunicadaACliente\" header=\"Fecha de Entrega\"></Column>\n                    <Column field=\"horasEstimadas\" header=\"Horas estimadas\"></Column>\n                    <Column field=\"estado\" header=\"Estado\"></Column>\n                    <Column field=\"prioridad\" header=\"Prioridad\"></Column>\n                    <Column field=\"idLegajo\" header=\"Responsable\"></Column>\n                </DataTable>\n            </Panel>\n        </div>\n    )\n}\n\nexport default ProjectItem;","import React, { useEffect, useState } from 'react';\nimport ProjectForm from './ProjectForm';\nimport ProjectItem from './ProjectItem';\nimport { useDispatch } from 'react-redux';\nimport { createProyect, onProyectsGetAll } from 'redux_folder/actions/proyects.actions';\n\n\nconst proyectoDefault = {\n    idProyecto: null,\n    nombre: '',\n    descripcion: '',\n    fechaInicioReal: '',\n    fechaFinalizacionReal: '',\n    fechaInicioEstimada: '',\n    fechaFinalizacionEstimada: '',\n    fechaEntregaComunicadaACliente: '',\n    horasEstimadas: 0,\n    prioridad: '',\n    estado: ''\n}\n\nconst Projects = (props: any) => {\n\n    const [visible, setVisible] = useState(false)\n    const [selectedProject, setSelectedProject] = useState(proyectoDefault)\n    const [proyecto, setProyecto] = useState(proyectoDefault)\n    const dispatch = useDispatch();\n\n    const buttons = [\n        {\n            label: 'Nuevo',\n            icon: 'pi pi-fw pi-plus',\n            command: () => { showSaveDialog() }\n        },\n        {\n            label: 'Editar',\n            icon: 'pi pi-fw pi-pencil',\n            command: () => { showEditDialog() }\n        },\n        {\n            label: 'Eliminar',\n            icon: 'pi pi-fw pi-trash',\n            command: () => { delete_() }\n        }\n    ];\n\n    const showSuccess = () => {\n        window.alert('Proyecto creado con exito.')\n    }\n\n    const save = (enteredProject) => {\n        debugger;\n        console.log(enteredProject);\n        //SQUAD 9 HACER EL FLUJO DEL DISPATCH COMO EL GET, PARA EL POST\n\n        dispatch(createProyect(enteredProject));\n\n        setVisible(false);\n        showSuccess();\n        //vuelvo a llamar al registro\n        dispatch(onProyectsGetAll());\n    }\n\n    const delete_ = () => {\n\n        //SQUAD 9 HACER EL FLUJO DEL DISPATCH COMO EL GET, PARA EL DELETE\n\n        /*if(window.confirm(\"¿Desea elminar el registro?\")){\n            dispatch(onProjectDelete(selectedProyecto.idProyecto))\n            //alert('el registro fue borrado');\n            showSuccess();\n            dispatch(onProyectsGetAll());\n      \n          });\n        }*/\n    }\n    const showSaveDialog = () => {\n        setVisible(true)\n        setProyecto(proyectoDefault)\n        //document.getElementById('proyecto-form').reset();\n    }\n\n    const showEditDialog = () => {\n        setVisible(true)\n        setProyecto(selectedProject)\n    }\n\n    const setTitle = () => {\n        return (null == proyecto.idProyecto ? 'Crear Proyecto' : 'Editar Proyecto: ' + proyecto.idProyecto)\n    }\n\n    return (\n        <div>\n            <ProjectItem\n                items={props.projects}\n                buttons={buttons}\n                selectedProject={selectedProject}\n                setSelectedProject={setSelectedProject}\n            />\n            <ProjectForm\n                title={setTitle}\n                onSave={save}\n                visible={visible}\n                setVisible={setVisible}\n                setProject={setProyecto}></ProjectForm>\n        </div >\n    )\n}\nexport default Projects;","import React from 'react'\n\n\nimport ProjectForm from './ProjectForm';\nimport Projects from './Projects';\n\nconst proyectoDefault = {\n  idProyecto: null,\n  nombre: null,\n  descripcion: null,\n  fechaInicioReal: null,\n  fechaFinalizacionReal: null,\n  fechaInicioEstimada: null,\n  fechaFinalizacionEstimada: null,\n  idLegajo: null\n}\n\nconst ProyectsView = (props: any) => {\n\n  return (\n    <div style={{ width: '80%', margin: '0 auto', marginTop: '20px' }} >\n      <Projects\n       projects = {props.projects}\n      />\n    </div>\n  );\n}\n\nexport default ProyectsView\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\n//estilos css\nimport 'primereact/resources/themes/nova/theme.css'\nimport 'primereact/resources/primereact.min.css'\nimport 'primeicons/primeicons.css'\nimport { onProyectsGetAll , createProyect } from 'redux_folder/actions/proyects.actions';\nimport useTypedSelector from 'hooks/useTypedSelector';\nimport ProyectsView from 'views/Proyects';\n\nconst ProyectoContainer = (props: any) => {\n  const dispatch = useDispatch();\n  const proyectos = useTypedSelector((state) => state.proyects.proyects);\n\n  useEffect(() => {\n\n    dispatch(onProyectsGetAll());\n\n  }, [])\n\n  \n  return (\n    <div>\n      <ProyectsView\n        projects={proyectos}\n        />\n    </div>\n  )\n}\n\nexport default ProyectoContainer;","\nimport Header from 'components/Header/Header';\nimport SideBar from 'components/SideBar';\nimport AboutContainer from 'containers/AboutContainer';\nimport HomeContainer from 'containers/HomeContainer';\nimport HoursContainer from 'containers/HoursContainer';\nimport SoporteContainer from 'containers/SoporteContainer';\nimport TicketsContainer from 'containers/TicketsContainer';\nimport FormularioTicketsContainer from 'containers/FormularioTicketsContainer';\nimport EliminarTicketsContainer from 'containers/EliminarTicketsContainer';\nimport ModificarTicketsContainer from 'containers/ModificarTicketsContainer';\nimport React from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport './App.css';\nimport ProyectoContainer from 'containers/ProyectoContainer';\n\nfunction App() {\n  \n  return (\n        <div className=\"App\">\n          <Header/>\n          <div className=\"rowView\">\n            <SideBar />\n            <div className='contentView'>\n              <Routes>\n                <Route path=\"/\" element={<HomeContainer />}/>\n                <Route path=\"/about\" element={<AboutContainer />} />\n                <Route path=\"/hours\" element={<HoursContainer />} />\n                <Route path=\"/soporte\" element={<SoporteContainer />} />\n                <Route path=\"/soporte/tickets\" element={<TicketsContainer />} />\n                <Route path=\"/soporte/tickets/crear\" element={<FormularioTicketsContainer />} />\n                <Route path=\"/soporte/tickets/eliminar\" element={<EliminarTicketsContainer />} />\n                <Route path=\"/soporte/tickets/modificar\" element={<ModificarTicketsContainer />} />\n                <Route path=\"/proyecto\" element={<ProyectoContainer />} />\n              </Routes>\n            </div>\n          </div>\n        </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Reducer } from 'redux';\nimport * as constants from 'redux_folder/constants/hours.constants';\nimport { IHoursDefaultState } from 'types/hours.types';\n\nconst defaultState: IHoursDefaultState = {\n  loading: false,\n  hours: [],\n  actionSucceeded: false,\n  editSucceeded: false,\n  deleteSucceeded: false,\n};\n\n// eslint-disable-next-line default-param-last\nconst hoursReducer: Reducer = (state = defaultState, action) => {\n  const { data, type } = action;\n  switch (type) {\n    case constants.HOURS_ON_GET_REQUESTED:\n      return {\n        ...state,\n        loading: true,\n        hours: [],\n      };\n    case constants.HOURS_ON_GET_SUCCEEDED:\n      return {\n        ...state,\n        loading: false,\n        hours: data.data.hours,\n      }\n    case constants.HOURS_ON_GET_FAILED:\n      return {\n        ...state,\n        loading:false,\n        hours:[],\n      }\n    case constants.HOURS_ON_CREATE_REQUESTED:\n    case constants.HOURS_ON_EDIT_REQUESTED:\n      case constants.HOURS_ON_DELETE_REQUESTED:\n      return {\n        ...state,\n        loading:true,\n        actionSucceeded:false,\n      }\n      case constants.HOURS_ON_CREATE_SUCCEEDED:\n      case constants.HOURS_ON_EDIT_SUCCEEDED:\n      case constants.HOURS_ON_DELETE_SUCCEEDED:\n        return {\n          ...state,\n          loading:false,\n          actionSucceeded:true,\n        }\n      case constants.HOURS_ON_CREATE_FAILED:\n        case constants.HOURS_ON_EDIT_FAILED:\n        case constants.HOURS_ON_DELETE_FAILED:\n        return {\n          ...state,\n          loading:false,\n          actionSucceeded:false,\n        }\n    default:\n      return state;\n  }\n};\n\nexport default hoursReducer;\n","import { Reducer } from 'redux';\nimport * as constants from 'redux_folder/constants/tickets.constants';\nimport { ITicketsDefaultState } from 'types/tickets.types';\n\nconst defaultState: ITicketsDefaultState = {\n  loading: false,\n  tickets: [],\n};\n\n// eslint-disable-next-line default-param-last\nconst ticketsReducer: Reducer = (state = defaultState, action) => {\n  const { data, type } = action;\n  switch (type) {\n    case constants.TICKETS_ON_GET_ALL_REQUESTED:\n      return {\n        ...state,\n        loading: true,\n        tickets: [],\n      };\n    case constants.TICKETS_ON_GET_ALL_SUCCEEDED:\n      return {\n        ...state,\n        loading: false,\n        tickets: data.data,\n      }\n    case constants.TICKETS_ON_GET_ALL_FAILED:\n      return {\n        ...state,\n        loading:false,\n        tickets:[],\n      }\n    default:\n      return state;\n  }\n};\n\nexport default ticketsReducer;\n","import { Reducer } from 'redux';\nimport * as constants from 'redux_folder/constants/tickets.constants';\nimport { IProductsDefaultState } from 'types/tickets.types';\n\nconst defaultState: IProductsDefaultState = {\n  loading: false,\n  products: [],\n};\n\n// eslint-disable-next-line default-param-last\nconst productsReducer: Reducer = (state = defaultState, action) => {\n  const { data, type } = action;\n  switch (type) {\n    case constants.PRODUCTS_ON_GET_ALL_REQUESTED:\n      return {\n        ...state,\n        loading: true,\n        products: [],\n      };\n    case constants.PRODUCTS_ON_GET_ALL_SUCCEEDED:\n      return {\n        ...state,\n        loading: false,\n        products: data.data,\n      }\n    case constants.PRODUCTS_ON_GET_ALL_FAILED:\n      return {\n        ...state,\n        loading:false,\n        products:[],\n      }\n    default:\n      return state;\n  }\n};\n\nexport default productsReducer;\n","import { Reducer } from 'redux';\nimport * as constants from 'redux_folder/constants/tickets.constants';\nimport { ITareasDefaultState } from 'types/tickets.types';\n\nconst defaultState: ITareasDefaultState = {\n  loading: false,\n  tareas: [],\n};\n\n// eslint-disable-next-line default-param-last\nconst tareasReducer: Reducer = (state = defaultState, action) => {\n  const { data, type } = action;\n  switch (type) {\n    case constants.TAREAS_ON_GET_ALL_REQUESTED:\n      return {\n        ...state,\n        loading: true,\n        tareas: [],\n      };\n    case constants.TAREAS_ON_GET_ALL_SUCCEEDED:\n      return {\n        ...state,\n        loading: false,\n        tareas: data.data,\n      }\n    case constants.TAREAS_ON_GET_ALL_FAILED:\n      return {\n        ...state,\n        loading:false,\n        tareas:[],\n      }\n    default:\n      return state;\n  }\n};\n\nexport default tareasReducer;\n","import { Reducer } from 'redux';\nimport * as constants from 'redux_folder/constants/tickets.constants';\nimport { IResourcesDefaultState } from 'types/tickets.types';\n\nconst defaultState: IResourcesDefaultState = {\n  loading: false,\n  resources: [],\n};\n\n// eslint-disable-next-line default-param-last\nconst resourcesReducer: Reducer = (state = defaultState, action) => {\n  const { data, type } = action;\n  switch (type) {\n    case constants.RESOURCES_ON_GET_ALL_REQUESTED:\n      return {\n        ...state,\n        loading: true,\n        resources: [],\n      };\n    case constants.RESOURCES_ON_GET_ALL_SUCCEEDED:\n      return {\n        ...state,\n        loading: false,\n        resources: data.data.resources,\n      }\n    case constants.RESOURCES_ON_GET_ALL_FAILED:\n      return {\n        ...state,\n        loading:false,\n        resources:[],\n      }\n    default:\n      return state;\n  }\n};\n\nexport default resourcesReducer;\n","import { Reducer } from 'redux';\nimport * as constants from 'redux_folder/constants/tickets.constants';\nimport { IClientsDefaultState } from 'types/tickets.types';\n\nconst defaultState: IClientsDefaultState = {\n  loading: false,\n  clients: [],\n};\n\n// eslint-disable-next-line default-param-last\nconst clientsReducer: Reducer = (state = defaultState, action) => {\n  const { data, type } = action;\n  switch (type) {\n    case constants.CLIENTS_ON_GET_ALL_REQUESTED:\n      return {\n        ...state,\n        loading: true,\n        clients: [],\n      };\n    case constants.CLIENTS_ON_GET_ALL_SUCCEEDED:\n      return {\n        ...state,\n        loading: false,\n        clients: data.data,\n      }\n    case constants.CLIENTS_ON_GET_ALL_FAILED:\n      return {\n        ...state,\n        loading:false,\n        clients:[],\n      }\n    default:\n      return state;\n  }\n};\n\nexport default clientsReducer;\n","import { Reducer } from 'redux';\nimport * as constants from 'redux_folder/constants/proyects.constants';\n\nconst defaultState  = {\n  loading: false,\n  proyects: [],\n  tasks: [],\n};\n\n// eslint-disable-next-line default-param-last\nconst proyectsReducer: Reducer = (state = defaultState, action) => {\n  const { data, type } = action;\n  switch (type) {\n    case constants.PROYECTS_ON_GET_ALL_REQUESTED:\n      return {\n        ...state,\n        loading: true,\n        proyects: [],\n      };\n\n    case constants.PROYECTS_ON_GET_TASKS_REQUESTED:\n    case constants.PROYECTS_ON_GET_TASKS_BY_IDS_REQUESTED:\n      return {\n        ...state,\n        loading: true,\n        tasks: [],\n      };\n    case constants.PROYECTS_ON_GET_ALL_SUCCEEDED:\n      return {\n        ...state,\n        loading: false,\n        proyects: data.data,\n      }\n    case constants.PROYECTS_ON_GET_TASKS_SUCCEEDED:\n    case constants.PROYECTS_ON_GET_TASKS_BY_IDS_SUCCEEDED:\n      return {\n        ...state,\n        loading: false,\n        tasks: data.data,\n      }\n    case constants.PROYECTS_ON_GET_ALL_FAILED:\n      return {\n        ...state,\n        loading:false,\n        proyects:[],\n      }\n    case constants.PROYECTS_ON_GET_TASKS_FAILED:\n    case constants.PROYECTS_ON_GET_TASKS_BY_IDS_FAILED:\n      return {\n        ...state,\n        loading:false,\n        tasks:[],\n      }\n    default:\n      return state;\n  }\n};\n\nexport default proyectsReducer;","import { combineReducers } from 'redux';\n\nimport hoursReducer from 'redux_folder/reducers/hours.reducer';\nimport ticketsReducer from 'redux_folder/reducers/tickets.reducer';\nimport productsReducer from 'redux_folder/reducers/products.reducer';\nimport tareasReducer from 'redux_folder/reducers/tareas.reducer';\nimport resourcesReducer from 'redux_folder/reducers/resources.reducer';\nimport clientsReducer from 'redux_folder/reducers/clients.reducer';\n\nimport proyectsReducer from './proyects.reducer';\n\nconst rootReducer = combineReducers({\n  hours: hoursReducer,\n  tickets: ticketsReducer,\n  products: productsReducer,\n  tareas: tareasReducer,\n  resources: resourcesReducer,\n  clients: clientsReducer,\n  proyects: proyectsReducer,\n});\n\nexport default rootReducer;\n","import { get, patch, post, delete_ } from 'services/api';\n\nconst url = 'https://psa-tribu2-recursos.herokuapp.com'\n\nexport async function getHours(filters:any): Promise<any> {\n  let url_ = `${url}/hours?limit=50&offset=0`;\n\n  if(filters.day){\n    url_ += `&day=${filters.day}`\n  }\n\n  if(filters.user_id){\n    url_ += `&user_id=${filters.user_id}`\n  }\n\n  if(filters.task_id){\n    url_ += `&task_id=${filters.task_id}`\n  }\n  const response = await get(url_);\n  return response;\n}\n\n\nexport async function createHours(data_:any): Promise<any> {\n  const response = await post(`${url}/hours`, data_);\n  return response;\n}\nexport async function editHours(data: any): Promise<any> {\n  let body = {}\n\n  if( data.day ){\n    body = {\n      ...body,\n      day: data.day\n    }\n  }\n  \n  if( data.note ){\n    body = {\n      ...body,\n      note: data.note\n    }\n  }\n  if( data.hours ){\n    body = {\n      ...body,\n      hours: data.hours\n    }\n  }\n  if( data.minutes ){\n    body = {\n      ...body,\n      minutes: data.minutes\n    }\n  }\n  if( data.seconds ){\n    body = {\n      ...body,\n      seconds: data.seconds\n    }\n  }\n  const response = await patch(`${url}/hours/${data.id}`, body)\n  return response;\n}\n\nexport async function deleteHours(id:string): Promise<any> {\n\n  const response = await delete_(`${url}/hours/${id}`);\n  return response;\n}\n","import {\n  all, call, put, takeLatest,\n} from 'redux-saga/effects';\n\nimport * as constants from 'redux_folder/constants/hours.constants';\nimport * as actions from 'redux_folder/actions/hours.actions';\n\nimport { createHours, deleteHours, editHours, getHours } from 'services/hours.services';\n\nexport function* hoursGet(action:any) {\n  try {\n    const data: unknown = yield call(getHours,action.filters);\n    yield put(actions.onGetSucceeded(data));\n  } catch (error) {\n    yield put(actions.onGetFailed(error));\n  }\n}\nexport function* hoursCreate(action: any) {\n  try {\n    const data: unknown = yield call(createHours, action.data_);\n    yield put(actions.onCreateHoursSucceeded(data));\n  } catch (error) {\n    yield put(actions.onCreateHoursFailed(error));\n  }\n}\nexport function* hoursEdit(action: any) {\n  try {\n    const data: unknown = yield call(editHours, action.data);\n    yield put(actions.onHoursEditSucceeded(data));\n  } catch (error) {\n    yield put(actions.onHoursEditFailed(error));\n  }\n}\nexport function* hoursDelete(action: any) {\n  try {\n    const data: unknown = yield call(deleteHours, action.id);\n    yield put(actions.onHoursDeleteSucceeded(data));\n  } catch (error) {\n    yield put(actions.onHoursDeleteFailed(error));\n  }\n}\nexport function* watchHours() {\n  yield all([\n    takeLatest(constants.HOURS_ON_GET_REQUESTED, hoursGet),\n    takeLatest(constants.HOURS_ON_CREATE_REQUESTED,hoursCreate),\n    takeLatest(constants.HOURS_ON_EDIT_REQUESTED,hoursEdit),\n    takeLatest(constants.HOURS_ON_DELETE_REQUESTED,hoursDelete),\n  ]);\n}\n","import axios from 'axios';\nimport { get , post, delete_} from 'services/api';\n\nconst url = 'https://psa-tribu2-proyectos.herokuapp.com'\n\nexport async function getProyects(): Promise<any> {\n  const response = await get(`${url}/proyectos`);\n  return response;\n}\n\nexport async function postProyects(proyecto: any): Promise<any> {\n  const response = await post(`${url}/proyectos`, proyecto.data);\n  return response;\n}\n\nexport async function saveProyects(): Promise<any> {\n  const response = await get(`${url}/proyectos`);\n  return response;\n}\n export async function deleteProyects(id): Promise<any> {\n   const response = await delete_(`${url}/proyectos/${id}`);\n   return response;\n }\n\nexport async function getTasks(): Promise<any> {\n  const response = await get(`${url}/tareas`);\n  return response;\n}\n\nexport async function getTasksByIds(ids: string[]): Promise<any> {\n  console.log(`${url}/tareas?ids=${ids}`);\n  \n  const response = await get(`${url}/tareas?ids=${ids}`);\n  return response;\n}","import {\n    all, call, put, takeLatest,\n  } from 'redux-saga/effects';\n  \n  import * as constants from 'redux_folder/constants/proyects.constants';\n  import * as actions from 'redux_folder/actions/proyects.actions';\n  \n  import { getProyects , getTasks, getTasksByIds, postProyects } from 'services/proyects.services';\n  \n  export function* proyectsGetAll() {\n    try {\n      const data: unknown = yield call(getProyects);\n      yield put(actions.onGetAllSucceeded(data));\n    } catch (error) {\n      yield put(actions.onGetAllFailed(error));\n    }\n  }\n  \n  export function* proyectsCreate(data_:any) {\n    try {\n      const data: unknown = yield call(postProyects,data_);\n      yield put(actions.createProyectSucceeded(data));\n    } catch (error) {\n      yield put(actions.createProyectFailed(error));\n    }\n  }\n\n  export function* tasksGet() {\n    try {\n      const data: unknown = yield call(getTasks);\n      yield put(actions.onGetTasksSucceeded(data));\n    } catch (error) {\n      yield put(actions.onGetTasksFailed(error));\n    }\n  }\n  export function* tasksGetByIds(action:any) {\n    try {\n      const data: unknown = yield call(getTasksByIds, action.ids);\n      yield put(actions.onGetTasksByIdsSucceeded(data));\n    } catch (error) {\n      yield put(actions.onGetTasksByIdsFailed(error));\n    }\n  }\n\n  \n  export function* watchProyects() {\n    yield all([\n      takeLatest(constants.PROYECTS_ON_GET_ALL_REQUESTED, proyectsGetAll),\n      takeLatest(constants.PROYECTS_ON_CREATE_REQUESTED, proyectsCreate),\n      takeLatest(constants.PROYECTS_ON_GET_TASKS_REQUESTED, tasksGet),\n      takeLatest(constants.PROYECTS_ON_GET_TASKS_BY_IDS_REQUESTED, tasksGetByIds),\n\n    ]);\n  }\n  ","import { get } from 'services/api';\n\nconst url = 'https://shielded-shelf-11253.herokuapp.com'\nconst proyectos_url = \"https://psa-tribu2-proyectos.herokuapp.com\"\nconst recursos_url = \"https://psa-tribu2-recursos.herokuapp.com\"\n\nexport async function getTickets(producto:string, version:string): Promise<any> {\n  const response = await get(`${url}/tickets?producto=`+producto+`&version=`+version);\n  return response;\n}\n\nexport async function getProducts(): Promise<any> {\n  const response = await get(`${url}/products`);\n  return response;\n}\n\nexport async function getTareas(): Promise<any> {\n  const response = await get(`${proyectos_url}/tareas`);\n  return response;\n}\n\nexport async function getResources(): Promise<any> {\n  const response = await get(`${recursos_url}/resources`);\n  return response;\n}\n\nexport async function getClients(): Promise<any> {\n  const response = await get(`${url}/clients`);\n  return response;\n}\n","import {\n  all, call, put, takeLatest,\n} from 'redux-saga/effects';\n\nimport * as constants from 'redux_folder/constants/tickets.constants';\nimport * as actions from 'redux_folder/actions/tickets.actions';\n\nimport { getTickets, getProducts, getTareas, getResources, getClients } from 'services/tickets.services';\n\nexport function* ticketsGetAll(action:any) {\n  try {\n    const data: unknown = yield call(getTickets, action.producto, action.version);\n    yield put(actions.onTicketsGetAllSucceeded(data));\n  } catch (error) {\n    yield put(actions.onTicketsGetAllFailed(error));\n  }\n}\n\nexport function* productsGetAll(action:any) {\n  try {\n    const data: unknown = yield call(getProducts);\n    yield put(actions.onProductsGetAllSucceeded(data));\n  } catch (error) {\n    yield put(actions.onProductsGetAllFailed(error));\n  }\n}\n\nexport function* tareasGetAll(action:any) {\n  try {\n    const data: unknown = yield call(getTareas);\n    yield put(actions.onTareasGetAllSucceeded(data));\n  } catch (error) {\n    yield put(actions.onTareasGetAllFailed(error));\n  }\n}\n\nexport function* resourcesGetAll(action:any) {\n  try {\n    const data: unknown = yield call(getResources);\n    yield put(actions.onResourcesGetAllSucceeded(data));\n  } catch (error) {\n    yield put(actions.onResourcesGetAllFailed(error));\n  }\n}\n\nexport function* clientsGetAll(action:any) {\n  try {\n    const data: unknown = yield call(getClients);\n    yield put(actions.onClientsGetAllSucceeded(data));\n  } catch (error) {\n    yield put(actions.onClientsGetAllFailed(error));\n  }\n}\n\n\nexport function* watchTickets() {\n  yield all([\n    takeLatest(constants.TICKETS_ON_GET_ALL_REQUESTED, ticketsGetAll),\n  ]);\n}\n\nexport function* watchProducts() {\n  yield all([\n    takeLatest(constants.PRODUCTS_ON_GET_ALL_REQUESTED, productsGetAll),\n  ]);\n}\n\nexport function* watchTareas() {\n  yield all([\n    takeLatest(constants.TAREAS_ON_GET_ALL_REQUESTED, tareasGetAll),\n  ]);\n}\n\nexport function* watchResources() {\n  yield all([\n    takeLatest(constants.RESOURCES_ON_GET_ALL_REQUESTED, resourcesGetAll),\n  ]);\n}\n\nexport function* watchClients() {\n  yield all([\n    takeLatest(constants.CLIENTS_ON_GET_ALL_REQUESTED, clientsGetAll),\n  ]);\n}\n","import { all } from 'redux-saga/effects';\n\nimport { watchHours } from './hours.sagas';\nimport { watchProyects } from './proyects.sagas';\nimport { watchTickets, watchProducts, watchTareas, watchResources, watchClients } from './tickets.sagas';\n\nexport default function* rootSaga(): Generator {\n  yield all([watchHours(), watchTickets(), watchProducts(), watchTareas(), watchResources(), watchClients(), watchProyects()]);\n}\n","import { applyMiddleware, createStore, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { createLogger } from 'redux-logger';\n\nimport reducers from 'redux_folder/reducers';\nimport rootSaga from 'redux_folder/sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst loggerMiddleware = createLogger();\n\nexport const composeEnhancers =\n  (window && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\nconst store = createStore(\n  reducers,\n  /* preloadedState, */\n  composeEnhancers(\n    applyMiddleware(\n      sagaMiddleware,\n      loggerMiddleware,\n    ),\n  ),\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from 'redux_folder/store';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}