{"version":3,"sources":["components/Header/Header.tsx","components/SideBar/index.tsx","views/About/index.tsx","containers/AboutContainer.tsx","views/Home/index.tsx","hooks/useTypedSelector.ts","containers/HomeContainer.tsx","components/ListItem/index.tsx","redux_folder/constants/hours.constants.ts","redux_folder/actions/hours.actions.ts","components/EditHoursModal/index.tsx","components/HoursButtons/index.tsx","hooks/useInterval.js","redux_folder/constants/proyects.constants.ts","redux_folder/actions/proyects.actions.ts","components/AddTaskToHoursModal/index.tsx","views/Hours/index.tsx","containers/HoursContainer.tsx","views/Soporte/index.tsx","redux_folder/constants/tickets.constants.ts","redux_folder/actions/tickets.actions.ts","containers/SoporteContainer.tsx","components/Tabla/Tabla.tsx","views/Soporte/componentes/Descripcion.tsx","views/Soporte/Tickets/index.tsx","containers/TicketsContainer.tsx","components/Button/Button.tsx","views/Proyects/ProjectForm.tsx","views/Proyects/ProjectItem.tsx","views/Proyects/Projects.tsx","views/Proyects/index.tsx","containers/ProyectoContainer.tsx","App.tsx","reportWebVitals.ts","redux_folder/reducers/hours.reducer.ts","redux_folder/reducers/tickets.reducer.ts","redux_folder/reducers/proyects.reducer.ts","redux_folder/reducers/index.ts","services/api.ts","services/hours.services.ts","redux_folder/sagas/hours.sagas.ts","services/proyects.services.ts","redux_folder/sagas/proyects.sagas.ts","services/tickets.services.ts","redux_folder/sagas/tickets.sagas.ts","redux_folder/sagas/index.ts","redux_folder/store/index.ts","index.tsx"],"names":["Header","className","Sidebar","navigate","useNavigate","goTo","path","List","sx","width","maxWidth","bgcolor","borderColor","borderRadius","borderWidth","component","ListItemButton","onClick","ListItemText","primary","AboutView","to","AboutContainer","About","HomeView","props","onGetHours","useTypedSelector","useSelector","HomeContainer","useDispatch","hours","state","console","log","ListItem","item","task","children","nombre","note","HOURS_ON_GET_REQUESTED","HOURS_ON_GET_SUCCEEDED","HOURS_ON_GET_FAILED","HOURS_ON_CREATE_REQUESTED","HOURS_ON_CREATE_SUCCEEDED","HOURS_ON_CREATE_FAILED","HOURS_ON_EDIT_REQUESTED","HOURS_ON_EDIT_SUCCEEDED","HOURS_ON_EDIT_FAILED","HOURS_ON_DELETE_REQUESTED","HOURS_ON_DELETE_SUCCEEDED","HOURS_ON_DELETE_FAILED","onGetSucceeded","data","type","constants","onCreateHoursSucceeded","onHoursEdit","onHoursEditSucceeded","onHoursDeleteSucceeded","EditHoursModal","hour","handleClose","date","dispatch","useState","dateViewer","setDateViewer","useForm","handleSubmit","control","errors","formState","useEffect","onSubmit_","id","Box","position","top","left","transform","border","boxShadow","p","Typography","variant","onSubmit","style","display","flexDirection","justifyContent","marginTop","render","field","onChange","onBlur","value","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","label","newValue","format","renderInput","params","TextField","name","FormControl","margin","InputLabel","inputProps","maxLength","defaultValue","multiline","rows","Tooltip","title","textAlign","placeholder","rules","pattern","alignSelf","minutes","seconds","color","startIcon","endIcon","fontSize","HoursButtons","timerOn","setTimerOn","setSeconds","setMinutes","setHours","pause","setPause","play","setPlay","React","open","setOpen","callback","delay","savedCallback","useRef","current","setInterval","clearInterval","useInterval","m","h","extraSecondsCero","extraMinutesCero","time","Modal","onClose","IconButton","PROYECTS_ON_GET_ALL_REQUESTED","PROYECTS_ON_GET_ALL_SUCCEEDED","PROYECTS_ON_GET_ALL_FAILED","PROYECTS_ON_CREATE_REQUESTED","PROYECTS_ON_GET_TASKS_REQUESTED","PROYECTS_ON_GET_TASKS_SUCCEEDED","PROYECTS_ON_GET_TASKS_FAILED","PROYECTS_ON_GET_TASKS_BY_IDS_REQUESTED","PROYECTS_ON_GET_TASKS_BY_IDS_SUCCEEDED","PROYECTS_ON_GET_TASKS_BY_IDS_FAILED","onProyectsGetAll","onGetAllSucceeded","createProyectSucceeded","onGetTasksSucceeded","onGetTasksByIdsSucceeded","AddTaskToHoursModal","tasks","proyects","data_","user_id","day","onCreateHours","fullWidth","Select","labelId","minWidth","map","MenuItem","idTarea","idProyecto","required","right","bottom","task_id","HoursView","Date","setDate","actionSucceeded","loading","filters","ids","marginLeft","length","CircularProgress","height","opacity","fontFamily","fontStyle","fontWeight","find","HoursContainer","description","SoporteView","onGetTickets","Accordion","Item","eventKey","Body","TICKETS_ON_GET_ALL_REQUESTED","TICKETS_ON_GET_ALL_SUCCEEDED","TICKETS_ON_GET_ALL_FAILED","SoporteContainer","Tabla","tickets","onRowClick","Table","striped","bordered","hover","ticket","index","tipo","recurso","estado","cliente","fecha_limite","Descripcion","descripcion","severidad","fecha_creacion","creador","TicketsView","ticket_i","setTicketI","i","TicketsContainer","ticket_state","Button","text","ProjectForm","enteredNombre","setEnteredNombre","enteredDescripcion","setEnteredDescripcion","enteredFechaInicioReal","setEnteredFechaInicioReal","enteredFechaInicioEstimada","setEnteredFechaInicioEstimada","enteredFechaFinalReal","setEnteredFechaFinalReal","enteredFechaFinalEstimada","setEnteredFechaFinalEstimada","enteredFechaEntrega","setEnteredFechaEntrega","enteredHoras","setEnteredHoras","enteredEstado","setEnteredEstado","enteredPrioridad","setEnteredPrioridad","footer","icon","projectData","fechaInicioReal","fechaFinalizacionReal","fechaInicioEstimada","fechaFinalizacionEstimada","fechaEntregaComunicadaACliente","horasEstimadas","prioridad","setProject","onSave","horasChangeHandler","event","val","parseInt","target","header","visible","modal","onHide","setVisible","htmlFor","Input","e","toString","onKeyPress","onInput","ProjectItem","model","buttons","items","selectionMode","selection","selectedProject","onSelectionChange","setSelectedProject","proyectoDefault","Projects","proyecto","setProyecto","command","showSaveDialog","showEditDialog","delete_","projects","enteredProject","window","alert","ProyectsView","ProyectoContainer","proyectos","Proyects","App","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","defaultState","editSucceeded","deleteSucceeded","hoursReducer","action","ticketsReducer","proyectsReducer","rootReducer","combineReducers","api","axios","create","getOptions","a","options","headers","errorResponse","error","response","message","Error","get","url","getToken","post","patch","delete","getHours","url_","createHours","editHours","body","deleteHours","hoursGet","hoursCreate","hoursEdit","hoursDelete","watchHours","call","put","actions","all","takeLatest","getProyects","postProyects","getTasks","getTasksByIds","proyectsGetAll","proyectsCreate","tasksGet","tasksGetByIds","watchProyects","getTickets","ticketsGetAll","watchTickets","rootSaga","sagaMiddleware","createSagaMiddleware","loggerMiddleware","createLogger","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","run","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.db5c3f87.chunk.js","sourcesContent":["import React from 'react'\nimport \"./Header.css\";\n\nconst Header = () => {\n    return (\n        <div className=\"Header\"> \n            <h1 className=\"Title\">Psa-Tasks</h1>\n        </div>\n    )\n}\n\nexport default Header\n","import { List, ListItemButton, ListItemText, ListSubheader } from '@mui/material';\nimport React from 'react'\nimport './index.css';\nimport {useNavigate} from \"react-router-dom\";\n\nconst Sidebar = () => {\n    const navigate = useNavigate();\n\n    const goTo = (path:string) => {\n        navigate(path);\n    }\n      \n    return (\n    <List\n        sx={{ width: 175, maxWidth: 360, bgcolor: 'background.paper', borderColor: 'black', borderRadius: 2, borderWidth: 50 }}\n        component=\"nav\"\n        aria-labelledby=\"nested-list-subheader\"\n    >\n\n        <ListItemButton onClick={() => goTo(\"/\")}>\n            <ListItemText primary=\"Home\" />\n        </ListItemButton>  \n        \n        <ListItemButton>\n            <ListItemText primary=\"Tasks\" />\n        </ListItemButton>      \n\n        <ListItemButton onClick={() => goTo(\"/hours\")}>\n            <ListItemText primary=\"Hours\" />\n        </ListItemButton>\n\n        <ListItemButton onClick={() => goTo(\"/proyecto\")}>\n            <ListItemText primary=\"Proyectos\" />\n        </ListItemButton>  \n        \n        <ListItemButton onClick={() => goTo(\"/soporte\")}>\n            <ListItemText primary=\"Soporte\" />\n        </ListItemButton>\n    </List>\n    );\n}\n\nexport default Sidebar;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nconst AboutView = () => {\n    return (\n        <>\n      <main>\n        <h2>Who are we?</h2>\n        <p>\n          That feels like an existential question, don't you\n          think?\n        </p>\n      </main>\n      <nav>\n        <Link to=\"/\">Home</Link>\n      </nav>\n    </>\n    )\n}\n\nexport default AboutView;\n","import React from 'react'\nimport AboutView from 'views/About'\n\n\nconst AboutContainer = () => {\n    return (\n        <AboutView/>\n    )\n}\n\nexport default AboutContainer\n","import React from 'react'\nimport {Link} from \"react-router-dom\";\nimport Button from 'components/Button/Button';\nimport './index.css'\n\nconst HomeView = (props: any) => {\n  const {onGetHours} = props;\n\n  return (\n    <div className=\"Home\">\n      <main >\n        <h2>Welcome to the homepage!</h2>\n      </main>\n      <nav>\n        <Link to=\"/about\">About</Link>\n      </nav>\n    </div>\n    )\n}\n\nexport default HomeView;\n","import { TypedUseSelectorHook, useSelector } from 'react-redux';\nimport { IHoursDefaultState } from 'types/hours.types';\nimport { ITicketsDefaultState } from 'types/tickets.types';\n\ninterface IRootState {\n  proyects: any;\n  hours: IHoursDefaultState;\n  tickets: ITicketsDefaultState;\n}\n\nconst useTypedSelector: TypedUseSelectorHook<IRootState> = useSelector;\n\nexport default useTypedSelector;\n","import React from 'react'\nimport HomeView from 'views/Home'\nimport {useDispatch} from 'react-redux'\nimport { onHoursGet } from 'redux_folder/actions/hours.actions';\nimport useTypedSelector from 'hooks/useTypedSelector';\n\nconst HomeContainer = () => {\n    \n    \n    const dispatch = useDispatch();\n\n    const hours = useTypedSelector((state) => state.hours.hours)\n    console.log(hours)\n\n    return (\n        <HomeView/>\n    )\n}\n\nexport default HomeContainer\n","import React from 'react'\nimport './index.css'\n\nconst ListItem = (props:any) => {\n    const {item, task, children} = props;\n    console.log(task)\n    return (\n        <div className=\"container\" >\n            <div className=\"columnDiv\" >\n                <p className=\"title2\"> {task?.nombre} </p>\n                <p className=\"description\"> {item.note} </p>\n            </div>\n            {children}\n        </div>\n    )\n}\n\nexport default ListItem\n","export const HOURS_ON_GET_REQUESTED = 'HOURS_ON_GET_REQUESTED';\nexport const HOURS_ON_GET_SUCCEEDED = 'HOURS_ON_GET_SUCCEEDED';\nexport const HOURS_ON_GET_FAILED = 'HOURS_ON_GET_FAILED';\n\nexport const HOURS_ON_CREATE_REQUESTED = 'HOURS_ON_CREATE_REQUESTED';\nexport const HOURS_ON_CREATE_SUCCEEDED = 'HOURS_ON_CREATE_SUCCEEDED';\nexport const HOURS_ON_CREATE_FAILED = 'HOURS_ON_CREATE_FAILED';\n\nexport const HOURS_ON_EDIT_REQUESTED = 'HOURS_ON_EDIT_REQUESTED';\nexport const HOURS_ON_EDIT_SUCCEEDED = 'HOURS_ON_EDIT_SUCCEEDED';\nexport const HOURS_ON_EDIT_FAILED = 'HOURS_ON_EDIT_FAILED';\n\nexport const HOURS_ON_DELETE_REQUESTED = 'HOURS_ON_DELETE_REQUESTED';\nexport const HOURS_ON_DELETE_SUCCEEDED = 'HOURS_ON_DELETE_SUCCEEDED';\nexport const HOURS_ON_DELETE_FAILED = 'HOURS_ON_DELETE_FAILED';\n","import * as constants from 'redux_folder/constants/hours.constants';\nimport {AnyAction} from 'redux'\n\n// HOURS_ON_GET\nexport const onHoursGet = (filters:any):  AnyAction => (\n  { type: constants.HOURS_ON_GET_REQUESTED, filters});\n\nexport const onGetSucceeded = (data: any): AnyAction => (\n  { type: constants.HOURS_ON_GET_SUCCEEDED, data });\n\nexport const onGetFailed = (error: unknown): AnyAction => (\n  { type: constants.HOURS_ON_GET_FAILED, error });\n\n// HOURS_ON_CREATE\nexport const onCreateHours = (data_:any):  AnyAction => (\n  { type: constants.HOURS_ON_CREATE_REQUESTED, data_});\n\nexport const onCreateHoursSucceeded = (data: any): AnyAction => (\n  { type: constants.HOURS_ON_CREATE_SUCCEEDED, data });\n\nexport const onCreateHoursFailed = (error: unknown): AnyAction => (\n  { type: constants.HOURS_ON_CREATE_FAILED, error });\n\n// HOURS_ON_EDIT\nexport const onHoursEdit = (data:any): AnyAction => (\n  { type: constants.HOURS_ON_EDIT_REQUESTED, data});\n\nexport const onHoursEditSucceeded = (data: any): AnyAction => (\n  { type: constants.HOURS_ON_EDIT_SUCCEEDED, data });\n\nexport const onHoursEditFailed = (error: unknown): AnyAction => (\n  { type: constants.HOURS_ON_EDIT_FAILED, error });\n\n// HOURS_ON_DELETE\n\nexport const onHoursDelete = (id:string): AnyAction => (\n  { type: constants.HOURS_ON_DELETE_REQUESTED, id});\n\nexport const onHoursDeleteSucceeded = (data: any): AnyAction => (\n  { type: constants.HOURS_ON_DELETE_SUCCEEDED, data });\n\nexport const onHoursDeleteFailed = (error: unknown): AnyAction => (\n  { type: constants.HOURS_ON_DELETE_FAILED, error });\n","import React, { useEffect, useState } from 'react'\nimport { Controller, useForm } from 'react-hook-form';\nimport { Alert, Box, Button, FormControl, InputLabel, MenuItem, Select, TextField, Tooltip, Typography  } from '@mui/material'\nimport { useDispatch } from 'react-redux';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { format, hoursToMilliseconds } from 'date-fns';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport DatePicker from '@mui/lab/DatePicker';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport { onHoursDelete, onHoursEdit, onHoursGet } from 'redux_folder/actions/hours.actions';\nimport DeleteOutlinedIcon from '@mui/icons-material/DeleteOutlined';\n\nconst EditHoursModal = (props: any) => {\n    const {hour, handleClose, date} = props;\n    const dispatch = useDispatch()\n\n    const [dateViewer, setDateViewer] = useState(date)\n    const {\n        handleSubmit, control, formState: { errors },\n      } = useForm();\n\n    useEffect(() => {\n    }, [])\n    \n    const style = {\n        position: 'absolute' as 'absolute',\n        top: '51%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        width: 400,\n        bgcolor: 'background.paper',\n        border: '2px solid #000',\n        boxShadow: '2px 2px darkcyan',\n        p: 4,\n      };\n\n    const onSubmit_ = (data:any) =>{\n        data = {\n            ...data,\n            id: hour.id,\n        }\n        dispatch(onHoursEdit(data));\n        handleClose(true);\n    }\n\n    const handleDelete = () => {\n        console.log(hour)\n        dispatch(onHoursDelete(hour.id));\n        handleClose(true);\n    }\n    return (\n        <Box sx={style}>\n            <Typography id=\"title\" variant=\"h6\" component=\"h2\">\n                Aca poner el nombre de la tarea\n            </Typography>\n            <form onSubmit={handleSubmit(onSubmit_)} style={{display: 'flex', flexDirection:'column', justifyContent:'center', marginTop: 20}}>\n            <Controller\n                control={control}\n                render={({field: {onChange, onBlur, value}}) => {\n                    return(\n                        <LocalizationProvider dateAdapter={AdapterDateFns}>\n                            <DatePicker\n                                label=\"Date\"\n                                value={dateViewer}\n                                onChange={(newValue) => {onChange(format(newValue, 'yyyy-MM-dd')); setDateViewer(newValue)}}\n                                renderInput={(params) => <TextField {...params} />}\n                            />\n                        </LocalizationProvider>\n                    )\n                }} \n                name=\"day\"\n            />\n            <Controller\n                control={control}\n                render={({ field: { onChange, onBlur, value } }) => {\n                return (\n                    <FormControl style={{margin: '40px 0px'}}>\n                        <InputLabel id=\"note\"/> \n                        <TextField id=\"note\" inputProps={{ maxLength: 100 }} defaultValue={hour.note} label='Note' multiline rows={4} variant=\"outlined\" onChange={onChange}/>\n                    </FormControl>\n                        \n                    )}}\n                    name=\"note\"\n                />\n                <div style={{display: 'flex' , justifyContent: 'center'}}>\n                            \n                    <Controller\n                        control={control}\n                        render={({ field: { onChange, onBlur, value } }) => {\n                            return (\n                                <Tooltip title=\"Hours\">\n                                    <TextField id=\"hours\"  inputProps={{style: {textAlign: 'center', width: 70}}} defaultValue={hour.hours} placeholder='00'  variant=\"standard\" onChange={onChange}/>\n                                </Tooltip>\n                                    \n                                \n                            )}}\n                        name=\"hours\"\n                        rules={{pattern: /^((?:[0-9]|1[0-9]|2[0-3])(?:.\\d{1,2})?|23(?:.00?)?)$/}}\n                    />\n                    <p style={{alignSelf: 'center', margin: 10}}>:</p>\n                        \n                    <Controller\n                        control={control}\n                        render={({ field: { onChange, onBlur, value } }) => {\n                            return (\n                                <Tooltip title=\"Minutes\">\n                                    <TextField id=\"minutes\"  inputProps={{style: {textAlign: 'center', width: 70}}} defaultValue={hour.minutes} placeholder='00'  variant=\"standard\" onChange={onChange}/>\n                                </Tooltip>\n                                )}}\n                        name=\"minutes\"\n                        rules={{pattern: /^((?:[0-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9])(?:.\\d{1,2})?|59(?:.00?)?)$/}}\n                    />\n                    <p style={{alignSelf: 'center', margin: 10}}>:</p>\n                    <Controller\n                        control={control}\n                        render={({ field: { onChange, onBlur, value } }) => {\n                            return (\n                                <Tooltip title=\"Seconds\">\n                                    <TextField id=\"seconds\"  inputProps={{style: {textAlign: 'center', width: 70}}} defaultValue={hour.seconds} placeholder='00'  variant=\"standard\" onChange={onChange}/>\n                                </Tooltip>\n                                )}}\n                        name=\"seconds\"\n                        rules={{pattern: /^((?:[0-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9])(?:.\\d{1,2})?|59(?:.00?)?)$/ }}\n                    />\n                            \n                </div>\n                <div style={{display:'flex', flexDirection:'row', justifyContent:'space-between', marginTop: 30}}>\n                    <Button variant=\"outlined\" color=\"error\" startIcon={<DeleteOutlinedIcon />} onClick={handleDelete}>\n                        Delete\n                    </Button>\n                    <Button endIcon={<EditIcon/>} variant=\"contained\" onClick={handleSubmit(onSubmit_)}>\n                        Edit\n                    </Button>\n\n                </div>\n                \n                </form>\n                {errors?.hours?.type === 'pattern' && <p style={{color: 'red', fontSize: 10}}>Enter a valid number</p>}\n                {errors?.minutes?.type === 'pattern' && <p style={{color: 'red', fontSize: 10}}>Enter a valid number</p>}\n                {errors?.seconds?.type === 'pattern' && <p style={{color: 'red', fontSize: 10}}>Pls enter a valid number</p>}\n            </Box>\n    )\n}\n\nexport default EditHoursModal\n","import { useInterval } from 'hooks/useInterval';\nimport React, { useEffect, useState } from 'react'\nimport PauseCircleIcon from '@mui/icons-material/PauseCircle';\nimport PlayCircleIcon from '@mui/icons-material/PlayCircle';\nimport StopCircleIcon from '@mui/icons-material/StopCircle';\nimport './index.css'\nimport { useDispatch } from 'react-redux';\nimport { Button, IconButton, Modal } from '@mui/material';\nimport {BiEdit} from 'react-icons/bi'\nimport AddTaskToHoursModal from 'components/AddTaskToHoursModal';\nimport EditHoursModal from 'components/EditHoursModal';\nimport { onHoursEdit } from 'redux_folder/actions/hours.actions';\n\nconst HoursButtons = (props:any) => {\n    const {hour, date, timerOn, setTimerOn} = props\n    const [seconds, setSeconds] = useState(hour.seconds)\n    const [minutes, setMinutes] = useState(hour.minutes)\n    const [hours, setHours] = useState(hour.hours)\n\n    const [pause, setPause] = useState(false);\n    const [play, setPlay] = useState(false);\n    \n    const [open, setOpen] = React.useState(false);\n    const handleOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n\n    const handlePlay = () => {\n        if(!timerOn){\n            setPlay(true)\n            setTimerOn(true)\n        }\n    }\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if(play){\n            setPause(false)\n        }\n    }, [play])\n\n    useEffect(() => {\n        if(pause){\n            setPlay(false)\n            setTimerOn(false)\n            dispatch(onHoursEdit({hours,minutes,seconds, id:hour.id}))\n        }\n    }, [pause])\n\n    useInterval(() => {\n        if (play){\n            setSeconds(seconds + 1);\n        }\n      }, 1000);\n    \n    useEffect(() => {\n        if(seconds > 59){\n            setMinutes((m: number) => m + 1)\n            setSeconds(0)\n        }\n    }, [seconds])\n    \n    useEffect(() => {\n        if(minutes > 59){\n            setHours((h: number) => h + 1)\n            setMinutes(0)\n        }\n    }, [minutes])\n\n    \n    useEffect(() => {\n        if(hours >= 24){\n            setHours(23)\n            setMinutes(59)\n            setSeconds(59)\n            setPause(true)\n        }\n    }, [hours])\n\n    const extraSecondsCero = (seconds < 10) ? '0' : '';\n    const extraMinutesCero = (minutes < 10) ? '0' : '';\n    const extraHoursCero = (hours < 10) ? '0' : '';\n    \n    const time = ` ${extraHoursCero}${hours}:${extraMinutesCero}${minutes}:${extraSecondsCero}${seconds}`\n    return (\n        <div className='container2'>\n            <Modal\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <EditHoursModal hour={hour} handleClose={handleClose} date={date}/>\n            </Modal>\n            <div className='time'>{time}</div>\n            <IconButton style={{alignSelf: 'center'}} onClick={() => {(play) ? setPause(true) : handlePlay()}}>\n                    {(play) \n                    ? (<PauseCircleIcon style={{color: 'darkcyan' }}/>) \n                    : <PlayCircleIcon style={{color: 'darkcyan' }}/>}\n            </IconButton >\n                \n            <IconButton style={{alignSelf: 'center'}} onClick={handleOpen}>\n                <BiEdit />\n            </IconButton>\n                \n        </div>\n    )\n}\n\nexport default HoursButtons\n","import { useEffect, useRef } from  'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    let id = setInterval(() => {\n      savedCallback.current();\n    }, delay);\n    return () => clearInterval(id);\n  }, [delay]);\n}","export const PROYECTS_ON_GET_ALL_REQUESTED = 'PROYECTS_ON_GET_ALL_REQUESTED';\nexport const PROYECTS_ON_GET_ALL_SUCCEEDED = 'PROYECTS_ON_GET_ALL_SUCCEEDED';\nexport const PROYECTS_ON_GET_ALL_FAILED = 'PROYECTS_ON_GET_ALL_FAILED';\n\nexport const PROYECTS_ON_CREATE_REQUESTED = 'PROYECTS_ON_CREATE_REQUESTED';\nexport const PROYECTS_ON_CREATE_SUCCEEDED = 'PROYECTS_ON_CREATE_SUCCEEDED';\nexport const PROYECTS_ON_CREATE_FAILED = 'PROYECTS_ON_CREATE_FAILED';\n\nexport const PROYECTS_ON_GET_TASKS_REQUESTED = 'PROYECTS_ON_GET_TASKS_REQUESTED';\nexport const PROYECTS_ON_GET_TASKS_SUCCEEDED = 'PROYECTS_ON_GET_TASKS_SUCCEEDED';\nexport const PROYECTS_ON_GET_TASKS_FAILED = 'PROYECTS_ON_GET_TASKS_FAILED';\n\nexport const PROYECTS_ON_GET_TASKS_BY_IDS_REQUESTED = 'PROYECTS_ON_GET_TASKS_BY_IDS_REQUESTED';\nexport const PROYECTS_ON_GET_TASKS_BY_IDS_SUCCEEDED = 'PROYECTS_ON_GET_TASKS_BY_IDS_SUCCEEDED';\nexport const PROYECTS_ON_GET_TASKS_BY_IDS_FAILED = 'PROYECTS_ON_GET_TASKS_BY_IDS_FAILED';","import * as constants from 'redux_folder/constants/proyects.constants';\nimport {AnyAction} from 'redux'\n//funcion que devuelve un objeto a despachar.\n// PROYECTS_ON_GET_ALL\nexport const onProyectsGetAll = ():  AnyAction => (\n  { type: constants.PROYECTS_ON_GET_ALL_REQUESTED});\n  \nexport const onGetAllSucceeded = (data: any): AnyAction => (\n  { type: constants.PROYECTS_ON_GET_ALL_SUCCEEDED, data });\n\nexport const onGetAllFailed = (error: unknown): AnyAction => (\n  { type: constants.PROYECTS_ON_GET_ALL_FAILED, error });\n  \n\nexport const createProyect = (data: any):  AnyAction => (\n    { type: constants.PROYECTS_ON_CREATE_REQUESTED, data});\n  \nexport const createProyectSucceeded = (data: any): AnyAction => (\n    { type: constants.PROYECTS_ON_CREATE_SUCCEEDED, data });\n  \nexport const createProyectFailed = (error: unknown): AnyAction => (\n  { type: constants.PROYECTS_ON_CREATE_FAILED, error });\n\n\nexport const onGetTasks = (): AnyAction => (\n{type: constants.PROYECTS_ON_GET_TASKS_REQUESTED});\n\nexport const onGetTasksSucceeded = (data: any): AnyAction => (\n  { type: constants.PROYECTS_ON_GET_TASKS_SUCCEEDED, data });\n\nexport const onGetTasksFailed = (error: unknown): AnyAction => (\n  { type: constants.PROYECTS_ON_GET_TASKS_FAILED, error });\n  \n\nexport const onGetTasksByIds = (ids: string[]): AnyAction => (\n  {type: constants.PROYECTS_ON_GET_TASKS_BY_IDS_REQUESTED, ids});\n\nexport const onGetTasksByIdsSucceeded = (data: any): AnyAction => (\n  { type: constants.PROYECTS_ON_GET_TASKS_BY_IDS_SUCCEEDED, data });\n\nexport const onGetTasksByIdsFailed = (error: unknown): AnyAction => (\n  { type: constants.PROYECTS_ON_GET_TASKS_BY_IDS_FAILED, error });","import { Alert, Box, Button, FormControl, InputLabel, MenuItem, Select, TextField, Typography  } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport { format } from 'date-fns';\nimport useTypedSelector from 'hooks/useTypedSelector';\nimport React, { useEffect } from 'react'\nimport './index.css'\nimport { Controller, useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { onCreateHours } from 'redux_folder/actions/hours.actions';\nimport { onGetTasks } from 'redux_folder/actions/proyects.actions';\n\nconst AddTaskToHoursModal = (props: any) => {\n\n    const {date, handleClose} = props;\n\n    const {\n        handleSubmit, control, formState: { errors },\n      } = useForm();\n    \n    const dispatch = useDispatch()\n    const tasks = useTypedSelector((state) => state.proyects.tasks)\n    console.log(tasks)\n    useEffect(() => {\n        dispatch(onGetTasks())\n    }, [])\n    \n    const style = {\n        position: 'absolute' as 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        width: 400,\n        bgcolor: 'background.paper',\n        border: '2px solid #000',\n        boxShadow: '2px 2px darkcyan',\n        p: 4,\n      };\n    \n    const onSubmit = (data:any)=>{\n        let data_ = {\n            ...data,\n            user_id: 106226,\n            day: format(date, 'yyyy-MM-dd'),\n        }\n        if(!data.note){\n            data_ = {\n                ...data_,\n                note: '',\n            }\n        }\n\n        if(!data.hours){\n            data_ = {\n                ...data_,\n                hours: '0',\n            }\n        }\n        if(!data.minutes){\n            data_ = {\n                ...data_,\n                minutes: '0',\n            }\n        }\n        if(!data.seconds){\n            data_ = {\n                ...data_,\n                seconds: '0',\n            }\n        }\n        dispatch(onCreateHours(data_))\n        handleClose()\n        \n\n    }\n    return(\n        <Box sx={style}>\n                <Typography id=\"title\" variant=\"h6\" component=\"h2\">\n                    New time entry for {format(date,'eeee dd/MM/yyyy')}\n                </Typography>\n                <form onSubmit={handleSubmit(onSubmit)} style={{display: 'flex', flexDirection:'column', justifyContent:'center'}}>\n                <Controller\n                    control={control}\n                    render={({ field: { onChange, onBlur, value } }) => {\n                        return (\n                            <FormControl fullWidth style={{marginTop: 40}}>\n                                <InputLabel id=\"tasks\"> Tasks </InputLabel>\n                                <Select\n                                    labelId=\"tasks\"\n                                    id=\"tasks\"\n                                    value={value}\n                                    label=\"Tasks\"\n                                    onChange={onChange}\n                                    style={{minWidth: '80%'}}\n                                >\n                                    {tasks.map((task) => <MenuItem value={task.idTarea}> {task.nombre} from {task.idProyecto.nombre}</MenuItem>)}\n                                </Select>\n                            </FormControl>\n                        )}}\n                    name=\"task_id\"\n                    rules={{ required: true }}\n                />\n                <Controller\n                    control={control}\n                    render={({ field: { onChange, onBlur, value } }) => {\n                        return (\n                            <FormControl style={{margin: '40px 0px'}}>\n                                <InputLabel id=\"note\"/> \n                                <TextField id=\"note\"  label='Note' multiline rows={4} variant=\"outlined\" onChange={onChange}/>\n                            </FormControl>\n\n\n                        )}}\n                    name=\"note\"\n                />\n                <div style={{display: 'flex' , justifyContent: 'center'}}>\n                            \n                    <Controller\n                        control={control}\n                        render={({ field: { onChange, onBlur, value } }) => {\n                            return (\n                                <>\n                                    <TextField id=\"hours\"   inputProps={{style: {textAlign: 'center', width: 70}}} placeholder='00'  variant=\"standard\" onChange={onChange}/>\n                                </>\n                            )}}\n                        name=\"hours\"\n                        rules={{pattern: /^((?:[0-9]|1[0-9]|2[0-3])(?:.\\d{1,2})?|23(?:.00?)?)$/}}\n                    />\n                    <p style={{alignSelf: 'center', margin: 10}}>:</p>\n                        \n                    <Controller\n                        control={control}\n                        render={({ field: { onChange, onBlur, value } }) => {\n                            return (\n                                <>\n                                    <TextField id=\"minutes\"  inputProps={{style: {textAlign: 'center', width: 70}}} placeholder='00'  variant=\"standard\" onChange={onChange}/>\n                                </>\n                                )}}\n                        name=\"minutes\"\n                        rules={{pattern: /^((?:[0-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9])(?:.\\d{1,2})?|59(?:.00?)?)$/}}\n                    />\n                    <p style={{alignSelf: 'center', margin: 10}}>:</p>\n                    <Controller\n                        control={control}\n                        render={({ field: { onChange, onBlur, value } }) => {\n                            return (\n                                <>\n                                    <TextField id=\"seconds\"   inputProps={{style: {textAlign: 'center', width: 70}}} placeholder='00'  variant=\"standard\" onChange={onChange}/>\n                                </>\n                                )}}\n                        name=\"seconds\"\n                        rules={{pattern: /^((?:[0-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9])(?:.\\d{1,2})?|59(?:.00?)?)$/ }}\n                    />\n                            \n                </div>  \n\n                <Button style={{margin:'10px 0px',right: '0px', bottom:'0px', alignSelf: 'flex-end'}} endIcon={<AddIcon/>} variant=\"contained\" onClick={handleSubmit(onSubmit)}>\n                    Add\n                </Button>\n                </form>\n                {errors?.hours?.type === 'pattern' && <p style={{color: 'red', fontSize: 10}}>Please enter a valid number</p>}\n                {errors?.minutes?.type === 'pattern' && <p style={{color: 'red', fontSize: 10}}>Please enter a valid number</p>}\n                {errors?.seconds?.type === 'pattern' && <p style={{color: 'red', fontSize: 10}}>Please enter a valid number</p>}\n                {errors?.task_id?.type === 'required' && <p style={{color: 'red', fontSize: 10}}>Task Required</p>}  \n            </Box>\n    )\n}\n\nexport default AddTaskToHoursModal;","import React, { useEffect, useState } from 'react'\nimport './index.css';\nimport TextField from '@mui/material/TextField';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport DatePicker from '@mui/lab/DatePicker';\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\nimport ListItem from 'components/ListItem';\nimport HoursButtons from 'components/HoursButtons';\nimport AddIcon from '@mui/icons-material/Add';\nimport Button from '@mui/material/Button';\nimport { CircularProgress, IconButton, Modal } from '@mui/material';\nimport AddTaskToHoursModal from 'components/AddTaskToHoursModal';\nimport { onHoursGet } from 'redux_folder/actions/hours.actions';\nimport { useDispatch } from 'react-redux';\nimport useTypedSelector from 'hooks/useTypedSelector';\nimport { format } from 'date-fns';\nimport AssignmentIcon from '@mui/icons-material/Assignment';\nimport { onGetTasksByIds } from 'redux_folder/actions/proyects.actions';\n\n\n\nconst HoursView = (props:any) => {\n    const [date, setDate] = useState(new Date());\n    const [open, setOpen] = React.useState(false);\n    const handleOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n\n    const [timerOn, setTimerOn] = useState(false);\n\n    const dispatch = useDispatch()\n    const actionSucceeded = useTypedSelector((state) => state.hours.actionSucceeded)\n    const loading = useTypedSelector((state) => state.hours.loading)\n\n    useEffect(() => {\n        if(actionSucceeded){\n            dispatch(onHoursGet({day:format(date, 'yyyy-MM-dd'), user_id: '106226'}))\n        }\n    }, [actionSucceeded, date, dispatch])\n\n    const hours = useTypedSelector((state) => state.hours.hours)\n\n    useEffect(() => {\n        dispatch(onGetTasksByIds(hours.map((hour) => hour.task_id)))\n    }, [hours, dispatch])\n\n\n\n\n    const tasks = useTypedSelector((state) => state.proyects.tasks)\n\n    \n    return (\n        <div className=\"hoursView\">\n            <div className=\"rowDiv\">\n                <h1 className='title'>\n                    Area personal\n                </h1>\n                <div className=\"rowDiv\">\n                    <div className=\"calendar\">\n                        <LocalizationProvider dateAdapter={AdapterDateFns}>\n                            <DatePicker\n                                label=\"Date\"\n                                value={date}\n                                onChange={(newValue) => {if(newValue){setDate(newValue)}}}\n                                renderInput={(params) => <TextField {...params} />}\n                            />\n                        </LocalizationProvider>\n                    </div>\n                    \n                </div>\n            </div>\n            <Button style={{marginLeft: 40}} startIcon={<AddIcon/>} onClick={handleOpen}>\n                Add task\n            </Button>\n            <Modal\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <AddTaskToHoursModal date={date } handleClose={handleClose}/>\n            </Modal>\n            \n            \n            <div className=\"listBox\" >\n                {((hours.length === 0) \n                    ? (loading)\n                        ? <CircularProgress style={{top: '50%', left: '50%',}}/>\n                        :<div style={{display: 'flex', flexDirection: 'column'}}>\n                            <AssignmentIcon style={{alignSelf: 'center', width: 100, height: 100, color: 'grey', opacity: '0.5'}} />\n                            <p style={{alignSelf: 'center', color: 'grey', fontSize:20, fontFamily:'Courier New, Courier, monospace', fontStyle:'italic', fontWeight:'500'}} >No hours yet</p> \n                        </div>\n                    :<div className=\"hoursList\">\n                        <ul className='list'>\n                            {hours.map((hour:any) => (\n                                <div>\n                                    <ListItem item={hour} task={tasks.find((task) => `${task.idTarea}` === hour.task_id)}>\n                                        <HoursButtons hour={hour} date={date} timerOn={timerOn} setTimerOn={setTimerOn} />\n                                    </ListItem>\n                                </div>\n                            )) }\n                        </ul>\n                    </div>)}\n            </div>\n        </div>\n    )\n}\n\nexport default HoursView\n\n","import React from 'react'\nimport HoursView from 'views/Hours';\n\nconst HoursContainer = () => {\n    \n    const hours = [\n        {\n            name: 'Task 1',\n            description: 'Description 1',\n            minutes: 0,\n            hours: 0,\n            seconds: 0,\n        },\n        {\n            \n            name: 'Task 2',\n            description: 'Description 2',\n            minutes: 58,\n            hours: 0,\n            seconds: 55,\n        }\n    ]\n    return (\n        <HoursView hours={hours}/>    \n    )\n}\n\nexport default HoursContainer;\n","import React from 'react'\nimport {Link} from \"react-router-dom\";\n//import Button from 'components/Button/Button';\nimport './index.css'\nimport {Button, Accordion} from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst SoporteView = (props: any) => {\n  const {onGetTickets} = props;\n//  const {tickets}      = props;\n\n  return (\n    <>\n      <div className='body'>\n            \n            <div className='d-flex flex-row' id=\"titulo\">{/* Lo pongo a la izquierda y que ocupe todo el ancho  */}\n                <h2>Productos</h2>\n        \n            </div>\n            \n            <Accordion className='productos'>\n                {/* Aca deberiamos mostrar lo del get de productos y versiones */}\n                <Accordion.Item eventKey=\"0\">\n                    <Accordion.Header>Siu Guarani</Accordion.Header>\n                    <Accordion.Body>\n                        <Link to=\"/soporte/tickets\">\n                            <span onClick={onGetTickets}>Version 1.0</span>\n                        </Link>\n                    </Accordion.Body>\n                </Accordion.Item>\n                <Accordion.Item eventKey=\"1\">\n                    <Accordion.Header>Proyecto 2</Accordion.Header>\n                    <Accordion.Body>Version 2.0</Accordion.Body>\n                </Accordion.Item>\n            </Accordion>\n\n            <Button onClick={onGetTickets} className='btn-primary boton_tickets_consola'>Ver tickets creados</Button>\n            \n\n        </div>\n    </>\n    )\n}\n\nexport default SoporteView;\n","export const TICKETS_ON_GET_ALL_REQUESTED = 'TICKETS_ON_GET_ALL_REQUESTED';\nexport const TICKETS_ON_GET_ALL_SUCCEEDED = 'TICKETS_ON_GET_ALL_SUCCEEDED';\nexport const TICKETS_ON_GET_ALL_FAILED = 'TICKETS_ON_GET_ALL_FAILED';\n","import * as constants from 'redux_folder/constants/tickets.constants';\nimport {AnyAction} from 'redux'\n\n// TICKETS_ON_GET_ALL\nexport const onTicketsGetAll = ():  AnyAction => (\n  { type: constants.TICKETS_ON_GET_ALL_REQUESTED});\n\nexport const onGetAllSucceeded = (data: any): AnyAction => (\n  { type: constants.TICKETS_ON_GET_ALL_SUCCEEDED, data });\n\nexport const onGetAllFailed = (error: unknown): AnyAction => (\n  { type: constants.TICKETS_ON_GET_ALL_FAILED, error });\n","import React from 'react'\nimport SoporteView from 'views/Soporte'\nimport {useDispatch} from 'react-redux'\nimport { onTicketsGetAll } from 'redux_folder/actions/tickets.actions';\nimport useTypedSelector from 'hooks/useTypedSelector';\n\nconst SoporteContainer = () => {\n    \n    \n    const dispatch = useDispatch();\n\n    const onGetTickets = () => {\n        dispatch(onTicketsGetAll());\n    }\n    return (<SoporteView onGetTickets={onGetTickets}/>);\n}\n\nexport default SoporteContainer\n","import React from 'react'\n//import './Table.css'\nimport Table from 'react-bootstrap/Table'\n\nconst Tabla = (props:any) => {\n    const {tickets} = props;\n    const {onRowClick} = props;\n    return (\n        <Table striped bordered hover>\n                        <thead>\n                            <tr>\n                                <th>Nombre</th>\n                                <th>Tipo</th>\n                                <th>Recurso</th>\n                                <th>Estado</th>\n                                <th>Cliente</th>\n                                <th>Deadline</th> \n                            </tr>\n                        </thead>\n                        <tbody>\n                            {tickets.map((ticket: { nombre: string; tipo: string; recurso: string; estado: string; cliente: string; fecha_limite: string;}, index:number)=> (\n                            <tr onClick={()=>{onRowClick(index)}}>\n                                <td>{ticket.nombre}</td>\n                                <td>{ticket.tipo}</td>\n                                <td>{ticket.recurso}</td>\n                                <td>{ticket.estado}</td>\n                                <td>{ticket.cliente}</td>\n                                <td>{ticket.fecha_limite}</td>\n                            </tr>\n                            ))}\n                        </tbody>\n                    </Table>\n    )\n}\n\nexport default Tabla","import React from 'react'\n\nconst Descripcion = (props:any) => {\n    let {ticket} = props;\n    return (\n        <div className='info'>\n            <h6>{ticket?.nombre}</h6>\n            <div>\n                <p className='subtitulo margen_chico'>Descripción:</p>\n                <p className='margen_chico descripcion'>{ticket?.descripcion}</p>\n            </div>\n            <div className='d-flex flex-row justify-content-around info_item'>\n                <div>\n                    <p className='subtitulo margen_chico'>Tipo:</p>\n                    <p className='margen_chico'>{ticket?.tipo}</p>\n                </div>\n                <div>\n                    <p className='subtitulo margen_chico'>Severidad:</p>\n                    <p className='margen_chico'>{ticket?.severidad}</p>\n                </div>\n            </div>\n            <div className='d-flex flex-row justify-content-evenly'>\n                <div>\n                    <p className='subtitulo margen_chico'>Fecha creación:</p>\n                    <p className='margen_chico'>{ticket?.fecha_creacion}</p>\n                </div>\n                <div>\n                    <p className='subtitulo margen_chico'>Fecha límite:</p>\n                    <p className='margen_chico'>{ticket?.fecha_limite}</p>\n                </div>\n            </div>\n            <div className='d-flex flex-row justify-content-around'>\n                <div>\n                    <p className='subtitulo margen_chico'>Cliente:</p>\n                    <p className='margen_chico'>{ticket?.cliente}</p>\n                </div>\n                <div>\n                    <p className='subtitulo margen_chico'>Creador:</p>\n                    <p className='margen_chico'>{ticket?.creador}</p>\n                </div>\n            </div>\n            <div className='d-flex flex-row justify-content-center'>\n                <p className='subtitulo margen_chico margen_derecho'>Recurso:</p>\n                <p className='margen_chico'>{ticket?.recurso}</p>\n            </div>\n\n            <div className='d-flex flex-column align-items-center'>\n                <p className='btn btn-link boton_tareas'>Ver tareas asociadas</p>\n                <p className='btn btn-secondary boton_accion'>Eliminar</p>\n                <p className='btn btn-dark boton_accion'>Modificar</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Descripcion","import React, { useState } from 'react';\nimport {Button, Accordion} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Link } from 'react-router-dom';\nimport Tabla from 'components/Tabla/Tabla'\nimport './index.css'\nimport Descripcion from '../componentes/Descripcion';\n\n\n\nconst TicketsView = (props: any) => {\n    const {tickets} = props;\n    console.log(tickets);\n    const [ ticket_i, setTicketI ] = useState(0);\n    function onRowClick(i:number){\n        setTicketI(i)\n        console.log(i)\n    }\n\n    return (\n      <>\n        <div className='body'>\n            <div  className='d-flex flex-row justify-content-between titulo'>\n                <div>\n                    <h2>Tickets</h2>\n                </div>\n\n                <div>\n                    <h4>Proyecto: SIU Guarani</h4>\n                    <h5>Versión: 1.0</h5>\n                </div>\n            </div>\n            <div className='d-flex flex-row justify-content-evenly tabla_aside'>\n                <div className='d-flex flex-column justify-content-between tabla'>\n                    \n                    <Tabla tickets={tickets} onRowClick={onRowClick} />\n\n                    <div className='d-flex flex-row justify-content-between'>\n                        <Link to='/soporte' className='btn btn-secondary boton_pie_pagina'>\n                            Volver a Productos\n                        </Link>\n                        <p className='btn btn-dark boton_pie_pagina'>Crear nuevo ticket</p>\n                    </div>\n                </div>\n\n                <div className='aside shadow bg-white rounded'>\n                    <Descripcion ticket={tickets[ticket_i]}/>\n                    \n                </div>\n            </div>\n            \n        </div>\n      </>\n      )\n  }\n\n  export default TicketsView;","import React from 'react'\nimport TicketsView from 'views/Soporte/Tickets'\nimport {useDispatch} from 'react-redux'\nimport { onTicketsGetAll } from 'redux_folder/actions/tickets.actions';\nimport useTypedSelector from 'hooks/useTypedSelector';\n\nconst TicketsContainer = () => {\n\n\n\n    const ticket_state = useTypedSelector((state) => state.tickets);\n\n    if(ticket_state.loading){\n        return (\n            <h2>Loading...</h2>\n        )\n    }\n    return (\n        <TicketsView tickets={ticket_state.tickets} />\n    )\n}\n\nexport default TicketsContainer","import React from 'react'\nimport './Button.css'\n\nconst Button = (props:any) => {\n    const {text, onClick} = props;\n    return (\n        <button onClick={onClick} className=\"Button\">{text}</button>\n    )\n}\n\nexport default Button\n","import React, { useState } from 'react'\n\nimport { Dialog } from 'primereact/dialog';\nimport { InputText } from 'primereact/inputtext';\nimport Button from 'components/Button/Button';\nimport { Box, FormControl, Input, InputLabel, MenuItem, Select } from '@mui/material';\n\nconst ProjectForm = (props: any) => {\n    const [enteredNombre, setEnteredNombre] = useState('');\n    const [enteredDescripcion, setEnteredDescripcion] = useState('');\n    const [enteredFechaInicioReal, setEnteredFechaInicioReal] = useState('');\n    const [enteredFechaInicioEstimada, setEnteredFechaInicioEstimada] = useState('');\n    const [enteredFechaFinalReal, setEnteredFechaFinalReal] = useState('');\n    const [enteredFechaFinalEstimada, setEnteredFechaFinalEstimada] = useState('');\n    const [enteredFechaEntrega, setEnteredFechaEntrega] = useState('');\n    const [enteredHoras, setEnteredHoras] = useState(0);\n    const [enteredEstado, setEnteredEstado] = useState('');\n    const [enteredPrioridad, setEnteredPrioridad] = useState('');\n\n    const estados = [\n        { value: 'No iniciada', label: 'No iniciada' },\n        { value: 'En desarrollo', label: 'En desarrollo' },\n        { value: 'Completada', label: 'Completada' }\n    ]\n\n    const prioridades = [\n        { value: 'Urgente!', label: 'Urgente!' },\n        { value: 'Importante', label: 'Importante' },\n        { value: 'Media', label: 'Media' },\n        { value: 'Baja', label: 'Baja' }\n    ]\n\n\n    const footer = (\n        <div>\n            <Button text=\"Guardar\" icon=\"pi pi-check\" onClick={() => {\n                const projectData = {\n                    nombre: enteredNombre,\n                    descripcion: enteredDescripcion,\n                    fechaInicioReal: enteredFechaInicioReal,\n                    fechaFinalizacionReal: enteredFechaFinalReal,\n                    fechaInicioEstimada: enteredFechaInicioEstimada,\n                    fechaFinalizacionEstimada: enteredFechaFinalEstimada,\n                    fechaEntregaComunicadaACliente: enteredFechaEntrega,\n                    horasEstimadas: enteredHoras,\n                    prioridad: enteredPrioridad,\n                    estado: enteredEstado\n                }\n                debugger;\n                console.log(projectData);\n                props.setProject(projectData);\n                props.onSave(projectData);\n                //console.log(projectData)\n                setEnteredNombre('');\n                setEnteredDescripcion('');\n                setEnteredFechaInicioReal('');\n                setEnteredFechaInicioEstimada('');\n                setEnteredFechaFinalReal('');\n                setEnteredFechaFinalEstimada('');\n                setEnteredFechaEntrega('');\n                setEnteredHoras(0);\n                setEnteredEstado('');\n                setEnteredPrioridad('');\n            }} />\n        </div>\n    );\n\n    const fechaInicioRealChangeHandler = (event) => {\n        let val = event.target.value.toString();\n        setEnteredFechaInicioReal(val);\n        // props.setProject((prevProject: { proyecto: any; }) => {\n        //     let proyecto = Object.assign({}, props.project);\n        //     return { proyecto };\n        // })\n    };\n    const fechaFinalizacionRealChangeHandler = (event) => {\n        let val = event.target.value.toString();\n        setEnteredFechaFinalReal(val);\n        // props.setProject((prevProject: { proyecto: any; }) => {\n        //     let proyecto = Object.assign({}, props.project);\n        //     proyecto.fechaFinalizacionReal = val;\n        //     return { proyecto };\n        // })\n    };\n    const fechaInicionEstimadoChangeHandler = (event) => {\n        let val = event.target.value.toString();\n        setEnteredFechaInicioEstimada(val);\n        // props.setProject((prevProject: { proyecto: any; }) => {\n        //     let proyecto = Object.assign({}, props.project);\n        //     return { proyecto };\n        // })\n\n    };\n    const fechaFinalizacionEstimadoChangeHandler = (event) => {\n        let val = event.target.value.toString();\n        setEnteredFechaFinalEstimada(val);\n        // props.setProject((prevProject: { proyecto: any; }) => {\n        //     let proyecto = Object.assign({}, props.project);\n        //     proyecto.fechaFinalizacionEstimado = val;\n        //     return { proyecto };\n        // })\n        // console.log(props.project);\n    };\n    const fechaEntregaChangeHandler = (event) => {\n        let val = event.target.value.toString();\n        setEnteredFechaEntrega(val);\n        // props.setProject((prevProject: { proyecto: any; }) => {\n        //     let proyecto = Object.assign({}, props.project);\n        //     proyecto.fechaEntregaComunicadaACliente = val;\n        //     return { proyecto };\n        // })\n        // console.log(props.project);\n    };\n    const horasChangeHandler = (event) => {\n        let val = parseInt(event.target.value);\n        setEnteredHoras(val);\n        // props.setProject(() => {\n        //     let proyecto = Object.assign({}, props.project);\n        //     proyecto.descripcion = val;\n        //     console.log(proyecto.horasEstimadas);\n        //     return { proyecto };\n        // })\n    }\n    const estadoChangeHandler = (event) => {\n        let val = event.target.value;\n        setEnteredEstado(val);\n        // props.setProject((prevProject: { proyecto: any; }) => {\n        //     let proyecto = Object.assign({}, props.project);\n        //     proyecto.estado = val;\n        //     return { proyecto };\n        // })\n        // console.log(val);\n    };\n    const prioridadChangeHandler = (event) => {\n        let val = event.target.value;\n        setEnteredPrioridad(val);\n        // props.setProject((prevProject: { proyecto: any; }) => {\n        //     let proyecto = Object.assign({}, props.project);\n        //     proyecto.prioridad = val;\n        //     return { proyecto };\n        // })\n        // console.log(val);\n    };\n\n    return (\n        <div>\n            <Dialog header={props.title} visible={props.visible} style={{ width: '400px' }} footer={footer} modal={true} onHide={() => props.setVisible(false)}>\n                <form id=\"proyecto-form\">\n                    <span className=\"p-float-label\">\n                        <label htmlFor=\"nombre\">Nombre</label>\n                        <Input type='text' name='nombre' value={enteredNombre} style={{ width: '100%' }} id=\"nombre\" onChange={(e: any) => {\n                            let val = e.target.value;\n                            setEnteredNombre(val);\n                            // props.setProject((prevProject: { proyecto: any; }) => {\n                            //     let proyecto = Object.assign({}, props.project);\n                            //     proyecto.nombre = val;\n                            //     // console.log(proyecto.nombre);\n                            //     return { proyecto };\n                            // })\n                            console.log(enteredNombre);\n                        }\n                        } />\n                    </span>\n                    <br />\n                    <span className=\"p-float-label\">\n                        <label htmlFor=\"descripcion\">Descripción</label>\n                        <Input type='text' value={enteredDescripcion} style={{ width: '100%' }} id=\"descripcion\" onChange={(e: any) => {\n                            let val = e.target.value;\n                            setEnteredDescripcion(val);\n                            // props.setProject((prevProject: { proyecto: any; }) => {\n                            //     let proyecto = Object.assign({}, props.project);\n                            //     proyecto.descripcion = val;\n                            //    // console.log(proyecto.descripcion);\n                            //     return { proyecto };\n                            // })\n                        }\n                        } />\n                    </span>\n                    <br />\n                    <label htmlFor=\"fechaInicioReal\">Fecha Inicio Real</label>\n                    <span className=\"p-float-label\">\n                        <Input type='date' data-data-format='YYYY-MM-DD' value={enteredFechaInicioReal} onChange={fechaInicioRealChangeHandler} />\n                    </span>\n                    <br />\n                    <label htmlFor=\"fechaFinalizacionReal\">Fecha Finalización Real</label>\n                    <span className=\"p-float-label\">\n                        <Input type='date' data-data-format='YYYY-MM-DD' value={enteredFechaFinalReal} onChange={fechaFinalizacionRealChangeHandler} />\n                    </span>\n                    <br />\n                    <label htmlFor=\"fechaInicioEstimada\">Fecha Inicio Estimada</label>\n                    <span className=\"p-float-label\">\n                        <Input type='date' data-data-format='YYYY-MM-DD' value={enteredFechaInicioEstimada} onChange={fechaInicionEstimadoChangeHandler} />\n                    </span>\n                    <br />\n                    <label htmlFor=\"fechaFinalizacionEstimada\">Fecha Finalización Estimada</label>\n                    <span className=\"p-float-label\">\n                        <Input type='date' data-data-format='YYYY-MM-DD' value={enteredFechaFinalEstimada} onChange={fechaFinalizacionEstimadoChangeHandler} />\n                    </span>\n                    <br />\n                    <label htmlFor=\"fechaEntregaComunicadaACliente\">Fecha de Entrega</label>\n                    <span className=\"p-float-label\">\n                        <Input type='date' data-data-format='YYYY-MM-DD' value={enteredFechaEntrega} onChange={fechaEntregaChangeHandler} />\n                    </span>\n                    <br />\n                    <span className=\"p-float-label\">\n                        <InputText type={'number'} value={enteredHoras} style={{ width: '100%' }} id=\"horasEstimadas\" onKeyPress={horasChangeHandler} onInput={horasChangeHandler} />\n                        <label htmlFor=\"HorasEstimadas\">Horas estimadas</label>\n                    </span>\n                    <br />\n                    <span className=\"p-float-label\">\n                        <Box sx={{ minWidth: 120 }}>\n                            <FormControl fullWidth>\n                                <InputLabel id='prioridad'>Prioridad</InputLabel>\n                                <Select labelId='prioridad' id=\"prioridades\" label='Prioridad' onChange={prioridadChangeHandler} value={enteredPrioridad}\n                                >\n                                    <MenuItem value={'Urgente!'}>Urgente!</MenuItem>\n                                    <MenuItem value={'Importante'}>Importante</MenuItem>\n                                    <MenuItem value={'Media'}>Media</MenuItem>\n                                    <MenuItem value={'Baja'}>Baja</MenuItem>\n                                </Select>\n                            </FormControl>\n                        </Box>\n                    </span>\n                    <br />\n                    <span className=\"p-float-label\">\n                        <Box sx={{ minWidth: 120 }}>\n                            <FormControl fullWidth>\n                                <InputLabel id='estado'>Estado</InputLabel>\n                                <Select labelId='Estado' id=\"estados\" label='Estado' onChange={estadoChangeHandler} value={enteredEstado}\n                                >\n                                    <MenuItem value={'No iniciada'}>No iniciada</MenuItem>\n                                    <MenuItem value={'En desarrollo'}>En desarrollo</MenuItem>\n                                    <MenuItem value={'En prueba'}>En prueba</MenuItem>\n                                    <MenuItem value={'Completada'}>Completada</MenuItem>\n                                </Select>\n                            </FormControl>\n                        </Box>\n                    </span>\n\n                </form>\n            </Dialog>\n        </div>\n    )\n}\n\nexport default ProjectForm;","import { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Panel } from 'primereact/panel'\nimport { Menubar } from 'primereact/menubar'\n\n\nconst ProjectItem = (props: any) => {\n\n\n    return (\n        <div>\n            <Menubar model={props.buttons}></Menubar>\n            <br></br>\n            <Panel header=\"PSA - Proyectos\" >\n                <DataTable value={props.items} selectionMode=\"single\" selection={props.selectedProject} onSelectionChange={(e: any) => props.setSelectedProject(e.value)}>\n                    <Column field=\"idProyecto\" header=\"Id Proyecto\"></Column>\n                    <Column field=\"nombre\" header=\"Nombre\"></Column>\n                    <Column field=\"descripcion\" header=\"Descripcion\"></Column>\n                    <Column field=\"fechaInicioReal\" header=\"Fecha inicio Real\"></Column>\n                    <Column field=\"fechaFinalizacionReal\" header=\"Fecha fin Real\"></Column>\n                    <Column field=\"fechaInicioEstimada\" header=\"Fecha inicio Estimada\"></Column>\n                    <Column field=\"fechaFinalizacionEstimada\" header=\"Fecha fin Estimada\"></Column>\n                    <Column field=\"fechaEntregaComunicadaACliente\" header=\"Fecha de Entrega\"></Column>\n                    <Column field=\"horasEstimadas\" header=\"Horas estimadas\"></Column>\n                    <Column field=\"estado\" header=\"Estado\"></Column>\n                    <Column field=\"prioridad\" header=\"Prioridad\"></Column>\n                    <Column field=\"idLegajo\" header=\"Responsable\"></Column>\n                </DataTable>\n            </Panel>\n        </div>\n    )\n}\n\nexport default ProjectItem;","import React, { useEffect, useState } from 'react';\nimport ProjectForm from './ProjectForm';\nimport ProjectItem from './ProjectItem';\nimport { useDispatch } from 'react-redux';\nimport { createProyect, onProyectsGetAll } from 'redux_folder/actions/proyects.actions';\n\n\nconst proyectoDefault = {\n    idProyecto: null,\n    nombre: '',\n    descripcion: '',\n    fechaInicioReal: '',\n    fechaFinalizacionReal: '',\n    fechaInicioEstimada: '',\n    fechaFinalizacionEstimada: '',\n    fechaEntregaComunicadaACliente: '',\n    horasEstimadas: 0,\n    prioridad: '',\n    estado: ''\n}\n\nconst Projects = (props: any) => {\n\n    const [visible, setVisible] = useState(false)\n    const [selectedProject, setSelectedProject] = useState(proyectoDefault)\n    const [proyecto, setProyecto] = useState(proyectoDefault)\n    const dispatch = useDispatch();\n\n    const buttons = [\n        {\n            label: 'Nuevo',\n            icon: 'pi pi-fw pi-plus',\n            command: () => { showSaveDialog() }\n        },\n        {\n            label: 'Editar',\n            icon: 'pi pi-fw pi-pencil',\n            command: () => { showEditDialog() }\n        },\n        {\n            label: 'Eliminar',\n            icon: 'pi pi-fw pi-trash',\n            command: () => { delete_() }\n        }\n    ];\n\n    const showSuccess = () => {\n        window.alert('Proyecto creado con exito.')\n    }\n\n    const save = (enteredProject) => {\n        debugger;\n        console.log(enteredProject);\n        //SQUAD 9 HACER EL FLUJO DEL DISPATCH COMO EL GET, PARA EL POST\n\n        dispatch(createProyect(enteredProject));\n\n        setVisible(false);\n        showSuccess();\n        //vuelvo a llamar al registro\n        dispatch(onProyectsGetAll());\n    }\n\n    const delete_ = () => {\n\n        //SQUAD 9 HACER EL FLUJO DEL DISPATCH COMO EL GET, PARA EL DELETE\n\n        /*if(window.confirm(\"¿Desea elminar el registro?\")){\n            dispatch(onProjectDelete(selectedProyecto.idProyecto))\n            //alert('el registro fue borrado');\n            showSuccess();\n            dispatch(onProyectsGetAll());\n      \n          });\n        }*/\n    }\n    const showSaveDialog = () => {\n        setVisible(true)\n        setProyecto(proyectoDefault)\n        //document.getElementById('proyecto-form').reset();\n    }\n\n    const showEditDialog = () => {\n        setVisible(true)\n        setProyecto(selectedProject)\n    }\n\n    const setTitle = () => {\n        return (null == proyecto.idProyecto ? 'Crear Proyecto' : 'Editar Proyecto: ' + proyecto.idProyecto)\n    }\n\n    return (\n        <div>\n            <ProjectItem\n                items={props.projects}\n                buttons={buttons}\n                selectedProject={selectedProject}\n                setSelectedProject={setSelectedProject}\n            />\n            <ProjectForm\n                title={setTitle}\n                onSave={save}\n                visible={visible}\n                setVisible={setVisible}\n                setProject={setProyecto}></ProjectForm>\n        </div >\n    )\n}\nexport default Projects;","import React from 'react'\n\n\nimport ProjectForm from './ProjectForm';\nimport Projects from './Projects';\n\nconst proyectoDefault = {\n  idProyecto: null,\n  nombre: null,\n  descripcion: null,\n  fechaInicioReal: null,\n  fechaFinalizacionReal: null,\n  fechaInicioEstimada: null,\n  fechaFinalizacionEstimada: null,\n  idLegajo: null\n}\n\nconst ProyectsView = (props: any) => {\n\n  return (\n    <div style={{ width: '80%', margin: '0 auto', marginTop: '20px' }} >\n      <Projects\n       projects = {props.projects}\n      />\n    </div>\n  );\n}\n\nexport default ProyectsView\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\n//estilos css\nimport 'primereact/resources/themes/nova/theme.css'\nimport 'primereact/resources/primereact.min.css'\nimport 'primeicons/primeicons.css'\nimport { onProyectsGetAll , createProyect } from 'redux_folder/actions/proyects.actions';\nimport useTypedSelector from 'hooks/useTypedSelector';\nimport ProyectsView from 'views/Proyects';\n\nconst ProyectoContainer = (props: any) => {\n  const dispatch = useDispatch();\n  const proyectos = useTypedSelector((state) => state.proyects.proyects);\n\n  useEffect(() => {\n\n    dispatch(onProyectsGetAll());\n\n  }, [])\n\n  \n  return (\n    <div>\n      <ProyectsView\n        projects={proyectos}\n        />\n    </div>\n  )\n}\n\nexport default ProyectoContainer;","\nimport Header from 'components/Header/Header';\nimport SideBar from 'components/SideBar';\nimport AboutContainer from 'containers/AboutContainer';\nimport HomeContainer from 'containers/HomeContainer';\nimport HoursContainer from 'containers/HoursContainer';\nimport SoporteContainer from 'containers/SoporteContainer';\nimport TicketsContainer from 'containers/TicketsContainer';\nimport React from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport './App.css';\nimport ProyectoContainer from 'containers/ProyectoContainer';\n\nfunction App() {\n  \n  return (\n        <div className=\"App\">\n          <Header/>\n          <div className=\"rowView\">\n            <SideBar />\n            <div className='contentView'>\n              <Routes>\n                <Route path=\"/\" element={<HomeContainer />}/>\n                < Route path=\"/about\" element={<AboutContainer />} />\n                < Route path=\"/hours\" element={<HoursContainer />} />\n                <Route path=\"/soporte\" element={<SoporteContainer />} />\n                <Route path=\"/soporte/tickets\" element={<TicketsContainer />} />\n                <Route path=\"/proyecto\" element={<ProyectoContainer />} />\n              </Routes>\n            </div>\n          </div>\n        </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Reducer } from 'redux';\nimport * as constants from 'redux_folder/constants/hours.constants';\nimport { IHoursDefaultState } from 'types/hours.types';\n\nconst defaultState: IHoursDefaultState = {\n  loading: false,\n  hours: [],\n  actionSucceeded: false,\n  editSucceeded: false,\n  deleteSucceeded: false,\n};\n\n// eslint-disable-next-line default-param-last\nconst hoursReducer: Reducer = (state = defaultState, action) => {\n  const { data, type } = action;\n  switch (type) {\n    case constants.HOURS_ON_GET_REQUESTED:\n      return {\n        ...state,\n        loading: true,\n        hours: [],\n      };\n    case constants.HOURS_ON_GET_SUCCEEDED:\n      return {\n        ...state,\n        loading: false,\n        hours: data.data.hours,\n      }\n    case constants.HOURS_ON_GET_FAILED:\n      return {\n        ...state,\n        loading:false,\n        hours:[],\n      }\n    case constants.HOURS_ON_CREATE_REQUESTED:\n    case constants.HOURS_ON_EDIT_REQUESTED:\n      case constants.HOURS_ON_DELETE_REQUESTED:\n      return {\n        ...state,\n        loading:true,\n        actionSucceeded:false,\n      }\n      case constants.HOURS_ON_CREATE_SUCCEEDED:\n      case constants.HOURS_ON_EDIT_SUCCEEDED:\n      case constants.HOURS_ON_DELETE_SUCCEEDED:\n        return {\n          ...state,\n          loading:false,\n          actionSucceeded:true,\n        }\n      case constants.HOURS_ON_CREATE_FAILED:\n        case constants.HOURS_ON_EDIT_FAILED:\n        case constants.HOURS_ON_DELETE_FAILED:\n        return {\n          ...state,\n          loading:false,\n          actionSucceeded:false,\n        }\n    default:\n      return state;\n  }\n};\n\nexport default hoursReducer;\n","import { Reducer } from 'redux';\nimport * as constants from 'redux_folder/constants/tickets.constants';\nimport { ITicketsDefaultState } from 'types/tickets.types';\n\nconst defaultState: ITicketsDefaultState = {\n  loading: false,\n  tickets: [],\n};\n\n// eslint-disable-next-line default-param-last\nconst ticketsReducer: Reducer = (state = defaultState, action) => {\n  const { data, type } = action;\n  switch (type) {\n    case constants.TICKETS_ON_GET_ALL_REQUESTED:\n      return {\n        ...state,\n        loading: true,\n        tickets: [],\n      };\n    case constants.TICKETS_ON_GET_ALL_SUCCEEDED:\n      return {\n        ...state,\n        loading: false,\n        tickets: data.data,\n      }\n    case constants.TICKETS_ON_GET_ALL_FAILED:\n      return {\n        ...state,\n        loading:false,\n        tickets:[],\n      }\n    default:\n      return state;\n  }\n};\n\nexport default ticketsReducer;\n","import { Reducer } from 'redux';\nimport * as constants from 'redux_folder/constants/proyects.constants';\n\nconst defaultState  = {\n  loading: false,\n  proyects: [],\n  tasks: [],\n};\n\n// eslint-disable-next-line default-param-last\nconst proyectsReducer: Reducer = (state = defaultState, action) => {\n  const { data, type } = action;\n  switch (type) {\n    case constants.PROYECTS_ON_GET_ALL_REQUESTED:\n      return {\n        ...state,\n        loading: true,\n        proyects: [],\n      };\n\n    case constants.PROYECTS_ON_GET_TASKS_REQUESTED:\n    case constants.PROYECTS_ON_GET_TASKS_BY_IDS_REQUESTED:\n      return {\n        ...state,\n        loading: true,\n        tasks: [],\n      };\n    case constants.PROYECTS_ON_GET_ALL_SUCCEEDED:\n      return {\n        ...state,\n        loading: false,\n        proyects: data.data,\n      }\n    case constants.PROYECTS_ON_GET_TASKS_SUCCEEDED:\n    case constants.PROYECTS_ON_GET_TASKS_BY_IDS_SUCCEEDED:\n      return {\n        ...state,\n        loading: false,\n        tasks: data.data,\n      }\n    case constants.PROYECTS_ON_GET_ALL_FAILED:\n      return {\n        ...state,\n        loading:false,\n        proyects:[],\n      }\n    case constants.PROYECTS_ON_GET_TASKS_FAILED:\n    case constants.PROYECTS_ON_GET_TASKS_BY_IDS_FAILED:\n      return {\n        ...state,\n        loading:false,\n        tasks:[],\n      }\n    default:\n      return state;\n  }\n};\n\nexport default proyectsReducer;","import { combineReducers } from 'redux';\n\nimport hoursReducer from 'redux_folder/reducers/hours.reducer';\nimport ticketsReducer from 'redux_folder/reducers/tickets.reducer';\nimport proyectsReducer from './proyects.reducer';\n\nconst rootReducer = combineReducers({\n  hours: hoursReducer,\n  tickets: ticketsReducer,\n  proyects: proyectsReducer,\n});\n\nexport default rootReducer;\n","import axios, { AxiosResponse } from 'axios';\n\n\nconst api = axios.create();\n\nasync function getOptions() {\n  const options = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n  return options;\n}\n\nfunction errorResponse(error: any) {\n  const { response } = error;\n  let message = error;\n  if (response) {\n    const { data } = response;\n    message = data.message;\n  }\n  return new Error(message);\n}\n\nexport async function get(url: string, headers = {}): Promise<AxiosResponse> {\n  try {\n    const getToken = await getOptions();\n    const options = { ...getToken, ...headers };\n    const response = await api.get(url, options);\n    return response;\n  } catch (error: any) {\n    throw errorResponse(error);\n  }\n}\n\nexport async function post(url: string, params = {}, headers = {}): Promise<any> {\n  try {\n    const getToken = await getOptions();\n    const options = { ...getToken, ...headers };\n    const response = await api.post(url, params, options);\n    return response;\n  } catch (error: any) {\n    throw errorResponse(error);\n  }\n}\n\nexport async function put(url: string, params = {}, headers = {}): Promise<any> {\n  try {\n    const getToken = await getOptions();\n    const options = { ...getToken, ...headers };\n    const { data } = await api.put(url, params, options);\n    return data;\n  } catch (error) {\n    throw errorResponse(error);\n  }\n}\n\nexport async function patch(url: string, params = {}, headers = {}): Promise<any> {\n  try {\n    const getToken = await getOptions();\n    const options = { ...getToken, ...headers };\n    const { data } = await api.patch(url, params, options);\n    return data;\n  } catch (error) {\n    throw errorResponse(error);\n  }\n}\n\nexport async function delete_(url: string, headers = {}): Promise<any> {\n  try {\n    const getToken = await getOptions();\n    const options = { ...getToken, ...headers };\n    const { data } = await api.delete(url, options);\n    return data;\n  } catch (error) {\n    throw errorResponse(error);\n  }\n}\n","import { get, patch, post, delete_ } from 'services/api';\n\nconst url = 'https://psa-tribu2-recursos.herokuapp.com'\n\nexport async function getHours(filters:any): Promise<any> {\n  let url_ = `${url}/hours?limit=50&offset=0`;\n\n  if(filters.day){\n    url_ += `&day=${filters.day}`\n  }\n\n  if(filters.user_id){\n    url_ += `&user_id=${filters.user_id}`\n  }\n\n  if(filters.task_id){\n    url_ += `&task_id=${filters.task_id}`\n  }\n  const response = await get(url_);\n  return response;\n}\n\n\nexport async function createHours(data_:any): Promise<any> {\n  const response = await post(`${url}/hours`, data_);\n  return response;\n}\nexport async function editHours(data: any): Promise<any> {\n  let body = {}\n\n  if( data.day ){\n    body = {\n      ...body,\n      day: data.day\n    }\n  }\n  \n  if( data.note ){\n    body = {\n      ...body,\n      note: data.note\n    }\n  }\n  if( data.hours ){\n    body = {\n      ...body,\n      hours: data.hours\n    }\n  }\n  if( data.minutes ){\n    body = {\n      ...body,\n      minutes: data.minutes\n    }\n  }\n  if( data.seconds ){\n    body = {\n      ...body,\n      seconds: data.seconds\n    }\n  }\n  const response = await patch(`${url}/hours/${data.id}`, body)\n  return response;\n}\n\nexport async function deleteHours(id:string): Promise<any> {\n\n  const response = await delete_(`${url}/hours/${id}`);\n  return response;\n}\n","import {\n  all, call, put, takeLatest,\n} from 'redux-saga/effects';\n\nimport * as constants from 'redux_folder/constants/hours.constants';\nimport * as actions from 'redux_folder/actions/hours.actions';\n\nimport { createHours, deleteHours, editHours, getHours } from 'services/hours.services';\n\nexport function* hoursGet(action:any) {\n  try {\n    const data: unknown = yield call(getHours,action.filters);\n    yield put(actions.onGetSucceeded(data));\n  } catch (error) {\n    yield put(actions.onGetFailed(error));\n  }\n}\nexport function* hoursCreate(action: any) {\n  try {\n    const data: unknown = yield call(createHours, action.data_);\n    yield put(actions.onCreateHoursSucceeded(data));\n  } catch (error) {\n    yield put(actions.onCreateHoursFailed(error));\n  }\n}\nexport function* hoursEdit(action: any) {\n  try {\n    const data: unknown = yield call(editHours, action.data);\n    yield put(actions.onHoursEditSucceeded(data));\n  } catch (error) {\n    yield put(actions.onHoursEditFailed(error));\n  }\n}\nexport function* hoursDelete(action: any) {\n  try {\n    const data: unknown = yield call(deleteHours, action.id);\n    yield put(actions.onHoursDeleteSucceeded(data));\n  } catch (error) {\n    yield put(actions.onHoursDeleteFailed(error));\n  }\n}\nexport function* watchHours() {\n  yield all([\n    takeLatest(constants.HOURS_ON_GET_REQUESTED, hoursGet),\n    takeLatest(constants.HOURS_ON_CREATE_REQUESTED,hoursCreate),\n    takeLatest(constants.HOURS_ON_EDIT_REQUESTED,hoursEdit),\n    takeLatest(constants.HOURS_ON_DELETE_REQUESTED,hoursDelete),\n  ]);\n}\n","import axios from 'axios';\nimport { get , post, delete_} from 'services/api';\n\nconst url = 'https://psa-tribu2-proyectos.herokuapp.com'\n\nexport async function getProyects(): Promise<any> {\n  const response = await get(`${url}/proyectos`);\n  return response;\n}\n\nexport async function postProyects(proyecto: any): Promise<any> {\n  const response = await post(`${url}/proyectos`, proyecto.data);\n  return response;\n}\n\nexport async function saveProyects(): Promise<any> {\n  const response = await get(`${url}/proyectos`);\n  return response;\n}\n export async function deleteProyects(id): Promise<any> {\n   const response = await delete_(`${url}/proyectos/${id}`);\n   return response;\n }\n\nexport async function getTasks(): Promise<any> {\n  const response = await get(`${url}/tareas`);\n  return response;\n}\n\nexport async function getTasksByIds(ids: string[]): Promise<any> {\n  console.log(`${url}/tareas?ids=${ids}`);\n  \n  const response = await get(`${url}/tareas?ids=${ids}`);\n  return response;\n}","import {\n    all, call, put, takeLatest,\n  } from 'redux-saga/effects';\n  \n  import * as constants from 'redux_folder/constants/proyects.constants';\n  import * as actions from 'redux_folder/actions/proyects.actions';\n  \n  import { getProyects , getTasks, getTasksByIds, postProyects } from 'services/proyects.services';\n  \n  export function* proyectsGetAll() {\n    try {\n      const data: unknown = yield call(getProyects);\n      yield put(actions.onGetAllSucceeded(data));\n    } catch (error) {\n      yield put(actions.onGetAllFailed(error));\n    }\n  }\n  \n  export function* proyectsCreate(data_:any) {\n    try {\n      const data: unknown = yield call(postProyects,data_);\n      yield put(actions.createProyectSucceeded(data));\n    } catch (error) {\n      yield put(actions.createProyectFailed(error));\n    }\n  }\n\n  export function* tasksGet() {\n    try {\n      const data: unknown = yield call(getTasks);\n      yield put(actions.onGetTasksSucceeded(data));\n    } catch (error) {\n      yield put(actions.onGetTasksFailed(error));\n    }\n  }\n  export function* tasksGetByIds(action:any) {\n    try {\n      const data: unknown = yield call(getTasksByIds, action.ids);\n      yield put(actions.onGetTasksByIdsSucceeded(data));\n    } catch (error) {\n      yield put(actions.onGetTasksByIdsFailed(error));\n    }\n  }\n\n  \n  export function* watchProyects() {\n    yield all([\n      takeLatest(constants.PROYECTS_ON_GET_ALL_REQUESTED, proyectsGetAll),\n      takeLatest(constants.PROYECTS_ON_CREATE_REQUESTED, proyectsCreate),\n      takeLatest(constants.PROYECTS_ON_GET_TASKS_REQUESTED, tasksGet),\n      takeLatest(constants.PROYECTS_ON_GET_TASKS_BY_IDS_REQUESTED, tasksGetByIds),\n\n    ]);\n  }\n  ","import { get } from 'services/api';\n\nconst url = 'https://shielded-shelf-11253.herokuapp.com'\n\nexport async function getTickets(): Promise<any> {\n  const response = await get(`${url}/tickets`);\n  return response;\n}\n\n","import {\n  all, call, put, takeLatest,\n} from 'redux-saga/effects';\n\nimport * as constants from 'redux_folder/constants/tickets.constants';\nimport * as actions from 'redux_folder/actions/tickets.actions';\n\nimport { getTickets } from 'services/tickets.services';\n\nexport function* ticketsGetAll() {\n  try {\n    const data: unknown = yield call(getTickets);\n    yield put(actions.onGetAllSucceeded(data));\n  } catch (error) {\n    yield put(actions.onGetAllFailed(error));\n  }\n}\n\n\nexport function* watchTickets() {\n  yield all([\n    takeLatest(constants.TICKETS_ON_GET_ALL_REQUESTED, ticketsGetAll),\n  ]);\n}\n","import { all } from 'redux-saga/effects';\n\nimport { watchHours } from './hours.sagas';\nimport { watchProyects } from './proyects.sagas';\nimport { watchTickets } from './tickets.sagas';\n\nexport default function* rootSaga(): Generator {\n  yield all([watchHours(), watchTickets(), watchProyects()]);\n}\n","import { applyMiddleware, createStore, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { createLogger } from 'redux-logger';\n\nimport reducers from 'redux_folder/reducers';\nimport rootSaga from 'redux_folder/sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst loggerMiddleware = createLogger();\n\nexport const composeEnhancers =\n  (window && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\nconst store = createStore(\n  reducers,\n  /* preloadedState, */\n  composeEnhancers(\n    applyMiddleware(\n      sagaMiddleware,\n      loggerMiddleware,\n    ),\n  ),\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from 'redux_folder/store';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}