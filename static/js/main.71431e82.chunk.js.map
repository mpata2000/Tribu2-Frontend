{"version":3,"sources":["components/Header/Header.tsx","components/SideBar/index.tsx","views/About/index.tsx","containers/AboutContainer.tsx","views/Home/index.tsx","hooks/useTypedSelector.ts","containers/HomeContainer.tsx","components/ListItem/index.tsx","redux_folder/constants/hours.constants.ts","redux_folder/actions/hours.actions.ts","components/EditHoursModal/index.tsx","components/HoursButtons/index.tsx","hooks/useInterval.js","redux_folder/constants/proyects.constants.ts","redux_folder/actions/proyects.actions.ts","components/AddTaskToHoursModal/index.tsx","views/Hours/index.tsx","containers/HoursContainer.tsx","views/Soporte/index.tsx","redux_folder/constants/tickets.constants.ts","redux_folder/actions/tickets.actions.ts","containers/SoporteContainer.tsx","components/Tabla/Tabla.tsx","views/Soporte/componentes/Descripcion.tsx","views/Soporte/Tickets/index.tsx","containers/TicketsContainer.tsx","services/api.ts","components/FormularioCrear/FormularioCrear.tsx","views/Soporte/FormularioTickets/index.tsx","containers/FormularioTicketsContainer.tsx","components/FormularioEliminar/FormularioEliminar.tsx","views/Soporte/FormularioEliminarTicket/index.tsx","containers/EliminarTicketsContainer.tsx","components/FormularioModificar/FormularioModificar.tsx","views/Soporte/FormularioModificarTicket/index.tsx","containers/ModificarTicketsContainer.tsx","components/Button/Button.tsx","views/Proyects/Proyectos/ProjectForm.tsx","redux_folder/constants/tareas.constants.ts","redux_folder/actions/tareas.actions.ts","views/Proyects/Proyectos/ProjectItem.tsx","views/Proyects/Proyectos/ProjectEditForm.tsx","views/Proyects/Proyectos/Projects.tsx","views/Proyects/index.tsx","containers/ProyectoContainer.tsx","views/Proyects/Tareas/TareaItem.tsx","views/Proyects/Tareas/TareasEditForm.tsx","views/Proyects/Tareas/TareasForm.tsx","views/Proyects/Tareas/Tareas.tsx","containers/TareasContainer.tsx","App.tsx","reportWebVitals.ts","redux_folder/reducers/hours.reducer.ts","redux_folder/reducers/tickets.reducer.ts","redux_folder/reducers/products.reducer.ts","redux_folder/reducers/tareas.reducer.ts","redux_folder/reducers/resources.reducer.ts","redux_folder/reducers/clients.reducer.ts","redux_folder/reducers/proyects.reducer.ts","redux_folder/reducers/index.ts","services/hours.services.ts","redux_folder/sagas/hours.sagas.ts","services/proyects.services.ts","redux_folder/sagas/proyects.sagas.ts","services/tareas.services.ts","services/tickets.services.ts","redux_folder/sagas/tareas.sagas.ts","redux_folder/sagas/tickets.sagas.ts","redux_folder/sagas/index.ts","redux_folder/store/index.ts","index.tsx"],"names":["Header","className","Sidebar","navigate","useNavigate","goTo","path","List","sx","width","maxWidth","bgcolor","borderColor","borderRadius","borderWidth","component","ListItemButton","onClick","ListItemText","primary","AboutView","to","AboutContainer","About","HomeView","props","onGetHours","useTypedSelector","useSelector","HomeContainer","useDispatch","hours","state","console","log","ListItem","item","task","children","nombre","note","HOURS_ON_GET_REQUESTED","HOURS_ON_GET_SUCCEEDED","HOURS_ON_GET_FAILED","HOURS_ON_CREATE_REQUESTED","HOURS_ON_CREATE_SUCCEEDED","HOURS_ON_CREATE_FAILED","HOURS_ON_EDIT_REQUESTED","HOURS_ON_EDIT_SUCCEEDED","HOURS_ON_EDIT_FAILED","HOURS_ON_DELETE_REQUESTED","HOURS_ON_DELETE_SUCCEEDED","HOURS_ON_DELETE_FAILED","onHoursGet","filters","type","constants","onGetSucceeded","data","onCreateHoursSucceeded","onHoursEdit","onHoursEditSucceeded","onHoursDeleteSucceeded","EditHoursModal","hour","handleClose","date","dispatch","useState","dateViewer","setDateViewer","useForm","handleSubmit","control","errors","formState","useEffect","onSubmit_","id","Box","position","top","left","transform","border","boxShadow","p","Typography","variant","onSubmit","style","display","flexDirection","justifyContent","marginTop","render","field","onChange","onBlur","value","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","label","newValue","format","renderInput","params","TextField","name","FormControl","margin","InputLabel","inputProps","maxLength","defaultValue","multiline","rows","Tooltip","title","textAlign","placeholder","rules","pattern","alignSelf","minutes","seconds","color","startIcon","endIcon","fontSize","HoursButtons","timerOn","setTimerOn","setSeconds","setMinutes","setHours","pause","setPause","play","setPlay","React","open","setOpen","callback","delay","savedCallback","useRef","current","setInterval","clearInterval","useInterval","m","h","extraSecondsCero","extraMinutesCero","time","Modal","onClose","IconButton","PROYECTS_ON_GET_ALL_REQUESTED","PROYECTS_ON_GET_ALL_SUCCEEDED","PROYECTS_ON_GET_ALL_FAILED","PROYECTS_ON_CREATE_REQUESTED","PROYECTS_ON_PUT_REQUESTED","PROYECTS_ON_DELETE_REQUESTED","PROYECTS_ON_GET_TASKS_REQUESTED","PROYECTS_ON_GET_TASKS_SUCCEEDED","PROYECTS_ON_GET_TASKS_FAILED","PROYECTS_ON_GET_TASKS_BY_IDS_REQUESTED","PROYECTS_ON_GET_TASKS_BY_IDS_SUCCEEDED","PROYECTS_ON_GET_TASKS_BY_IDS_FAILED","putProyectSucceeded","deleteProyectSucceeded","onProyectsGetAll","onGetAllSucceeded","createProyectSucceeded","onGetTasksSucceeded","onGetTasksByIdsSucceeded","AddTaskToHoursModal","tasks","proyects","data_","user_id","day","onCreateHours","fullWidth","Select","labelId","minWidth","map","MenuItem","idTarea","idProyecto","required","right","bottom","task_id","HoursView","Date","setDate","actionSucceeded","loading","ids","marginLeft","length","CircularProgress","height","opacity","fontFamily","fontStyle","fontWeight","find","HoursContainer","description","SoporteView","products","Accordion","Object","entries","product","index","Item","eventKey","toString","Body","version","TICKETS_ON_GET_ALL_REQUESTED","TICKETS_ON_GET_ALL_SUCCEEDED","TICKETS_ON_GET_ALL_FAILED","PRODUCTS_ON_GET_ALL_REQUESTED","PRODUCTS_ON_GET_ALL_SUCCEEDED","PRODUCTS_ON_GET_ALL_FAILED","TAREAS_ON_GET_ALL_REQUESTED","TAREAS_ON_GET_ALL_SUCCEEDED","TAREAS_ON_GET_ALL_FAILED","RESOURCES_ON_GET_ALL_REQUESTED","RESOURCES_ON_GET_ALL_SUCCEEDED","RESOURCES_ON_GET_ALL_FAILED","CLIENTS_ON_GET_ALL_REQUESTED","CLIENTS_ON_GET_ALL_SUCCEEDED","CLIENTS_ON_GET_ALL_FAILED","onTicketsGetAllSucceeded","onProductsGetAllSucceeded","onTareasGetAll","onTareasGetAllSucceeded","onResourcesGetAllSucceeded","onClientsGetAllSucceeded","SoporteContainer","Tabla","tickets","onRowClick","Table","striped","bordered","hover","ticket","tipo","recurso","estado","cliente","moment","parseInt","fecha_limite","Descripcion","tareas","tareas_ticket","filter","tarea","includes","descripcion","severidad","fecha_creacion","creador","padding","ticketID","descrip","producto","TicketsView","ticket_i","setTicketI","search","setSearch","filtered_tickets","toLowerCase","event","target","i","TicketsContainer","useLocation","onTicketsGetAll","api","axios","create","getOptions","a","options","headers","errorResponse","error","response","message","Error","get","url","getToken","post","put","patch","delete_","delete","FormularioCrear","location","resources_state","resources","tareas_state","clients_state","clients","idTicket","formValues","setFormValues","handleChange","Form","Group","controlId","Label","Control","readOnly","client","resource","legajo","Nombre","Apellido","as","splice","indexOf","push","e","preventDefault","alert","FormularioTicketsView","FormularioTicketsContainer","FormularioTickets","FormularioEliminar","solicitarEliminacionDeTicket","FormularioEliminarTicketView","EliminarTicketsContainer","FormularioEliminarTicket","FormularioModificar","FormularioModificarTicketView","ModificarTicketsContainer","FormularioModificarTicket","Button","text","ProjectForm","enteredNombre","setEnteredNombre","enteredDescripcion","setEnteredDescripcion","enteredFechaInicioReal","setEnteredFechaInicioReal","enteredFechaInicioEstimada","setEnteredFechaInicioEstimada","enteredFechaFinalReal","setEnteredFechaFinalReal","enteredFechaFinalEstimada","setEnteredFechaFinalEstimada","enteredFechaEntrega","setEnteredFechaEntrega","enteredHoras","setEnteredHoras","enteredEstado","setEnteredEstado","enteredPrioridad","setEnteredPrioridad","footer","icon","projectData","fechaInicioReal","fechaFinalizacionReal","fechaInicioEstimada","fechaFinalizacionEstimada","fechaEntregaComunicadaACliente","horasEstimadas","prioridad","onSave","horasChangeHandler","val","estadoChangeHandler","header","visible","modal","onHide","setVisible","htmlFor","Input","onKeyPress","onInput","TAREAS_ON_GET_REQUESTED","TAREAS_ON_GET_SUCCEEDED","TAREAS_ON_GET_FAILED","TAREAS_ON_POST_REQUESTED","TAREAS_ON_DELETE_REQUESTED","getTareasSucceeded","onPostTareaSucceeded","onDeleteTarea","onDeleteTareaSucceeded","ProjectItem","model","buttons","items","selectionMode","selection","selectedProject","onSelectionChange","setSelectedProject","onRowDoubleClick","sortable","ProjectEditForm","onEdit","onSetEditedProject","prevProject","proyecto","assign","projectSelected","fechaHorasEstimadas","fechaFinaliazacionEstimada","proyectoDefault","Projects","toast","document","createElement","visibleSave","setVisibleSave","visibleEdit","setVisibleEdit","proyectos","command","showSaveDialog","showEditDialog","projectDelete","showSuccess","msje","show","severity","summary","detail","life","showWarn","window","confirm","deletedMessage","ref","enteredProject","createdMessage","editedMessage","ProyectsView","projects","ProyectoContainer","Proyects","TareaItem","selectedTarea","setSelectedTarea","TareasEditForm","TareasForm","enteredFechaFinalizacionReal","setEnteredFechaFinalizacionReal","enteredHorasEstimadas","setenteredHorasEstimadas","enteredIdTicket","tareaData","tareaDefault","idLegajoEmpleado","horasTrabajadas","Tareas","setTarea","tareasDelete","enteredTarea","TareasContainer","App","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","defaultState","editSucceeded","deleteSucceeded","hoursReducer","action","ticketsReducer","productsReducer","tareasReducer","constantsTareas","resourcesReducer","clientsReducer","proyectsReducer","rootReducer","combineReducers","getHours","url_","createHours","editHours","body","deleteHours","hoursGet","hoursCreate","hoursEdit","hoursDelete","watchHours","call","actions","all","takeLatest","getProyects","postProyects","putProyects","deleteProyects","getTasks","getTasksByIds","proyectsGetAll","proyectsCreate","proyectsPut","proyectsDelete","tasksGet","tasksGetByIds","watchProyects","onGetTareasByprojectId","onPostTarea","proyectos_url","recursos_url","getTickets","getProducts","getTareas","getResources","getClients","getTareasForProject","postTareasForProject","deleteTareasForProject","tareasGetAll","watchTareas","actionsTickets","constantsTickets","ticketsGetAll","productsGetAll","resourcesGetAll","clientsGetAll","watchTickets","watchProducts","watchResources","watchClients","rootSaga","sagaMiddleware","createSagaMiddleware","loggerMiddleware","createLogger","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","run","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.71431e82.chunk.js","sourcesContent":["import React from 'react'\nimport \"./Header.css\";\n\nconst Header = () => {\n    return (\n        <div className=\"Header\"> \n            <h1 className=\"Title\">Psa-Tasks</h1>\n        </div>\n    )\n}\n\nexport default Header\n","import { List, ListItemButton, ListItemText, ListSubheader } from '@mui/material';\nimport React from 'react'\nimport './index.css';\nimport {useNavigate} from \"react-router-dom\";\n\nconst Sidebar = () => {\n    const navigate = useNavigate();\n\n    const goTo = (path:string) => {\n        navigate(path);\n    }\n      \n    return (\n    <List\n        sx={{ width: 175, maxWidth: 360, bgcolor: 'background.paper', borderColor: 'black', borderRadius: 2, borderWidth: 50 }}\n        component=\"nav\"\n        aria-labelledby=\"nested-list-subheader\"\n    >\n\n        <ListItemButton onClick={() => goTo(\"/\")}>\n            <ListItemText primary=\"Home\" />\n        </ListItemButton>      \n\n        <ListItemButton onClick={() => goTo(\"/hours\")}>\n            <ListItemText primary=\"Horas\" />\n        </ListItemButton>\n\n        <ListItemButton onClick={() => goTo(\"/proyecto\")}>\n            <ListItemText primary=\"Proyectos\" />\n        </ListItemButton>  \n        \n        <ListItemButton onClick={() => goTo(\"/soporte\")}>\n            <ListItemText primary=\"Soporte\" />\n        </ListItemButton>\n    </List>\n    );\n}\n\nexport default Sidebar;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nconst AboutView = () => {\n    return (\n        <>\n      <main>\n        <h2>Who are we?</h2>\n        <p>\n          That feels like an existential question, don't you\n          think?\n        </p>\n      </main>\n      <nav>\n        <Link to=\"/\">Home</Link>\n      </nav>\n    </>\n    )\n}\n\nexport default AboutView;\n","import React from 'react'\nimport AboutView from 'views/About'\n\n\nconst AboutContainer = () => {\n    return (\n        <AboutView/>\n    )\n}\n\nexport default AboutContainer\n","import React from 'react'\nimport {Link} from \"react-router-dom\";\nimport Button from 'components/Button/Button';\nimport './index.css'\n\nconst HomeView = (props: any) => {\n  const {onGetHours} = props;\n\n  return (\n    <div className=\"Home\">\n      <main >\n        <h2>Welcome to the homepage!</h2>\n      </main>\n      <nav>\n        <Link to=\"/about\">About</Link>\n      </nav>\n    </div>\n    )\n}\n\nexport default HomeView;\n","import { TypedUseSelectorHook, useSelector } from 'react-redux';\nimport { IHoursDefaultState } from 'types/hours.types';\nimport { ITicketsDefaultState, IProductsDefaultState, ITareasDefaultState, IResourcesDefaultState, IClientsDefaultState } from 'types/tickets.types';\n\ninterface IRootState {\n  proyects: any;\n  hours: IHoursDefaultState;\n  tickets: ITicketsDefaultState;\n  tareas: ITareasDefaultState;\n  products: IProductsDefaultState;\n  resources: IResourcesDefaultState;\n  clients: IClientsDefaultState;\n}\n\nconst useTypedSelector: TypedUseSelectorHook<IRootState> = useSelector;\n\nexport default useTypedSelector;\n","import React from 'react'\nimport HomeView from 'views/Home'\nimport {useDispatch} from 'react-redux'\nimport { onHoursGet } from 'redux_folder/actions/hours.actions';\nimport useTypedSelector from 'hooks/useTypedSelector';\n\nconst HomeContainer = () => {\n    \n    \n    const dispatch = useDispatch();\n\n    const hours = useTypedSelector((state) => state.hours.hours)\n    console.log(hours)\n\n    return (\n        <HomeView/>\n    )\n}\n\nexport default HomeContainer\n","import React from 'react'\nimport './index.css'\n\nconst ListItem = (props:any) => {\n    const {item, task, children} = props;\n    console.log(task)\n    return (\n        <div className=\"container\" >\n            <div className=\"columnDiv\" >\n                <p className=\"title2\"> {task?.nombre} </p>\n                <p className=\"description\"> {item.note} </p>\n            </div>\n            {children}\n        </div>\n    )\n}\n\nexport default ListItem\n","export const HOURS_ON_GET_REQUESTED = 'HOURS_ON_GET_REQUESTED';\nexport const HOURS_ON_GET_SUCCEEDED = 'HOURS_ON_GET_SUCCEEDED';\nexport const HOURS_ON_GET_FAILED = 'HOURS_ON_GET_FAILED';\n\nexport const HOURS_ON_CREATE_REQUESTED = 'HOURS_ON_CREATE_REQUESTED';\nexport const HOURS_ON_CREATE_SUCCEEDED = 'HOURS_ON_CREATE_SUCCEEDED';\nexport const HOURS_ON_CREATE_FAILED = 'HOURS_ON_CREATE_FAILED';\n\nexport const HOURS_ON_EDIT_REQUESTED = 'HOURS_ON_EDIT_REQUESTED';\nexport const HOURS_ON_EDIT_SUCCEEDED = 'HOURS_ON_EDIT_SUCCEEDED';\nexport const HOURS_ON_EDIT_FAILED = 'HOURS_ON_EDIT_FAILED';\n\nexport const HOURS_ON_DELETE_REQUESTED = 'HOURS_ON_DELETE_REQUESTED';\nexport const HOURS_ON_DELETE_SUCCEEDED = 'HOURS_ON_DELETE_SUCCEEDED';\nexport const HOURS_ON_DELETE_FAILED = 'HOURS_ON_DELETE_FAILED';\n","import * as constants from 'redux_folder/constants/hours.constants';\nimport {AnyAction} from 'redux'\n\n// HOURS_ON_GET\nexport const onHoursGet = (filters:any):  AnyAction => (\n  { type: constants.HOURS_ON_GET_REQUESTED, filters});\n\nexport const onGetSucceeded = (data: any): AnyAction => (\n  { type: constants.HOURS_ON_GET_SUCCEEDED, data });\n\nexport const onGetFailed = (error: unknown): AnyAction => (\n  { type: constants.HOURS_ON_GET_FAILED, error });\n\n// HOURS_ON_CREATE\nexport const onCreateHours = (data_:any):  AnyAction => (\n  { type: constants.HOURS_ON_CREATE_REQUESTED, data_});\n\nexport const onCreateHoursSucceeded = (data: any): AnyAction => (\n  { type: constants.HOURS_ON_CREATE_SUCCEEDED, data });\n\nexport const onCreateHoursFailed = (error: unknown): AnyAction => (\n  { type: constants.HOURS_ON_CREATE_FAILED, error });\n\n// HOURS_ON_EDIT\nexport const onHoursEdit = (data:any): AnyAction => (\n  { type: constants.HOURS_ON_EDIT_REQUESTED, data});\n\nexport const onHoursEditSucceeded = (data: any): AnyAction => (\n  { type: constants.HOURS_ON_EDIT_SUCCEEDED, data });\n\nexport const onHoursEditFailed = (error: unknown): AnyAction => (\n  { type: constants.HOURS_ON_EDIT_FAILED, error });\n\n// HOURS_ON_DELETE\n\nexport const onHoursDelete = (id:string): AnyAction => (\n  { type: constants.HOURS_ON_DELETE_REQUESTED, id});\n\nexport const onHoursDeleteSucceeded = (data: any): AnyAction => (\n  { type: constants.HOURS_ON_DELETE_SUCCEEDED, data });\n\nexport const onHoursDeleteFailed = (error: unknown): AnyAction => (\n  { type: constants.HOURS_ON_DELETE_FAILED, error });\n","import React, { useEffect, useState } from 'react'\nimport { Controller, useForm } from 'react-hook-form';\nimport { Alert, Box, Button, FormControl, InputLabel, MenuItem, Select, TextField, Tooltip, Typography  } from '@mui/material'\nimport { useDispatch } from 'react-redux';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { format, hoursToMilliseconds } from 'date-fns';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport DatePicker from '@mui/lab/DatePicker';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport { onHoursDelete, onHoursEdit, onHoursGet } from 'redux_folder/actions/hours.actions';\nimport DeleteOutlinedIcon from '@mui/icons-material/DeleteOutlined';\n\nconst EditHoursModal = (props: any) => {\n    const {hour, handleClose, date} = props;\n    const dispatch = useDispatch()\n\n    const [dateViewer, setDateViewer] = useState(date)\n    const {\n        handleSubmit, control, formState: { errors },\n      } = useForm();\n\n    useEffect(() => {\n    }, [])\n    \n    const style = {\n        position: 'absolute' as 'absolute',\n        top: '51%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        width: 400,\n        bgcolor: 'background.paper',\n        border: '2px solid #000',\n        boxShadow: '2px 2px darkcyan',\n        p: 4,\n      };\n\n    const onSubmit_ = (data:any) =>{\n        data = {\n            ...data,\n            id: hour.id,\n        }\n        dispatch(onHoursEdit(data));\n        handleClose(true);\n    }\n\n    const handleDelete = () => {\n        console.log(hour)\n        dispatch(onHoursDelete(hour.id));\n        handleClose(true);\n    }\n    return (\n        <Box sx={style}>\n            <Typography id=\"title\" variant=\"h6\" component=\"h2\">\n                Aca poner el nombre de la tarea\n            </Typography>\n            <form onSubmit={handleSubmit(onSubmit_)} style={{display: 'flex', flexDirection:'column', justifyContent:'center', marginTop: 20}}>\n            <Controller\n                control={control}\n                render={({field: {onChange, onBlur, value}}) => {\n                    return(\n                        <LocalizationProvider dateAdapter={AdapterDateFns}>\n                            <DatePicker\n                                label=\"Fecha\"\n                                value={dateViewer}\n                                onChange={(newValue) => {onChange(format(newValue, 'yyyy-MM-dd')); setDateViewer(newValue)}}\n                                renderInput={(params) => <TextField {...params} />}\n                            />\n                        </LocalizationProvider>\n                    )\n                }} \n                name=\"day\"\n            />\n            <Controller\n                control={control}\n                render={({ field: { onChange, onBlur, value } }) => {\n                return (\n                    <FormControl style={{margin: '40px 0px'}}>\n                        <InputLabel id=\"note\"/> \n                        <TextField id=\"note\" inputProps={{ maxLength: 100 }} defaultValue={hour.note} label='Nota' multiline rows={4} variant=\"outlined\" onChange={onChange}/>\n                    </FormControl>\n                        \n                    )}}\n                    name=\"note\"\n                />\n                <div style={{display: 'flex' , justifyContent: 'center'}}>\n                            \n                    <Controller\n                        control={control}\n                        render={({ field: { onChange, onBlur, value } }) => {\n                            return (\n                                <Tooltip title=\"Hora\">\n                                    <TextField id=\"hours\"  inputProps={{style: {textAlign: 'center', width: 70}}} defaultValue={hour.hours} placeholder='00'  variant=\"standard\" onChange={onChange}/>\n                                </Tooltip>\n                                    \n                                \n                            )}}\n                        name=\"hours\"\n                        rules={{pattern: /^((?:[0-9]|1[0-9]|2[0-3])(?:.\\d{1,2})?|23(?:.00?)?)$/}}\n                    />\n                    <p style={{alignSelf: 'center', margin: 10}}>:</p>\n                        \n                    <Controller\n                        control={control}\n                        render={({ field: { onChange, onBlur, value } }) => {\n                            return (\n                                <Tooltip title=\"Minutos\">\n                                    <TextField id=\"minutes\"  inputProps={{style: {textAlign: 'center', width: 70}}} defaultValue={hour.minutes} placeholder='00'  variant=\"standard\" onChange={onChange}/>\n                                </Tooltip>\n                                )}}\n                        name=\"minutes\"\n                        rules={{pattern: /^((?:[0-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9])(?:.\\d{1,2})?|59(?:.00?)?)$/}}\n                    />\n                    <p style={{alignSelf: 'center', margin: 10}}>:</p>\n                    <Controller\n                        control={control}\n                        render={({ field: { onChange, onBlur, value } }) => {\n                            return (\n                                <Tooltip title=\"Segundos\">\n                                    <TextField id=\"seconds\"  inputProps={{style: {textAlign: 'center', width: 70}}} defaultValue={hour.seconds} placeholder='00'  variant=\"standard\" onChange={onChange}/>\n                                </Tooltip>\n                                )}}\n                        name=\"seconds\"\n                        rules={{pattern: /^((?:[0-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9])(?:.\\d{1,2})?|59(?:.00?)?)$/ }}\n                    />\n                            \n                </div>\n                <div style={{display:'flex', flexDirection:'row', justifyContent:'space-between', marginTop: 30}}>\n                    <Button variant=\"outlined\" color=\"error\" startIcon={<DeleteOutlinedIcon />} onClick={handleDelete}>\n                        Borrar\n                    </Button>\n                    <Button endIcon={<EditIcon/>} variant=\"contained\" onClick={handleSubmit(onSubmit_)}>\n                        Editar\n                    </Button>\n\n                </div>\n                \n                </form>\n                {errors?.hours?.type === 'pattern' && <p style={{color: 'red', fontSize: 10}}>Enter a valid number</p>}\n                {errors?.minutes?.type === 'pattern' && <p style={{color: 'red', fontSize: 10}}>Enter a valid number</p>}\n                {errors?.seconds?.type === 'pattern' && <p style={{color: 'red', fontSize: 10}}>Pls enter a valid number</p>}\n            </Box>\n    )\n}\n\nexport default EditHoursModal\n","import { useInterval } from 'hooks/useInterval';\nimport React, { useEffect, useState } from 'react'\nimport PauseCircleIcon from '@mui/icons-material/PauseCircle';\nimport PlayCircleIcon from '@mui/icons-material/PlayCircle';\nimport StopCircleIcon from '@mui/icons-material/StopCircle';\nimport './index.css'\nimport { useDispatch } from 'react-redux';\nimport { Button, IconButton, Modal } from '@mui/material';\nimport {BiEdit} from 'react-icons/bi'\nimport AddTaskToHoursModal from 'components/AddTaskToHoursModal';\nimport EditHoursModal from 'components/EditHoursModal';\nimport { onHoursEdit } from 'redux_folder/actions/hours.actions';\n\nconst HoursButtons = (props:any) => {\n    const {hour, date, timerOn, setTimerOn} = props\n    const [seconds, setSeconds] = useState(hour.seconds)\n    const [minutes, setMinutes] = useState(hour.minutes)\n    const [hours, setHours] = useState(hour.hours)\n\n    const [pause, setPause] = useState(false);\n    const [play, setPlay] = useState(false);\n    \n    const [open, setOpen] = React.useState(false);\n    const handleOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n\n    const handlePlay = () => {\n        if(!timerOn){\n            setPlay(true)\n            setTimerOn(true)\n        }\n    }\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if(play){\n            setPause(false)\n        }\n    }, [play])\n\n    useEffect(() => {\n        if(pause){\n            setPlay(false)\n            setTimerOn(false)\n            dispatch(onHoursEdit({hours,minutes,seconds, id:hour.id}))\n        }\n    }, [pause])\n\n    useInterval(() => {\n        if (play){\n            setSeconds(seconds + 1);\n        }\n      }, 1000);\n    \n    useEffect(() => {\n        if(seconds > 59){\n            setMinutes((m: number) => m + 1)\n            setSeconds(0)\n        }\n    }, [seconds])\n    \n    useEffect(() => {\n        if(minutes > 59){\n            setHours((h: number) => h + 1)\n            setMinutes(0)\n        }\n    }, [minutes])\n\n    \n    useEffect(() => {\n        if(hours >= 24){\n            setHours(23)\n            setMinutes(59)\n            setSeconds(59)\n            setPause(true)\n        }\n    }, [hours])\n\n    const extraSecondsCero = (seconds < 10) ? '0' : '';\n    const extraMinutesCero = (minutes < 10) ? '0' : '';\n    const extraHoursCero = (hours < 10) ? '0' : '';\n    \n    const time = ` ${extraHoursCero}${hours}:${extraMinutesCero}${minutes}:${extraSecondsCero}${seconds}`\n    return (\n        <div className='container2'>\n            <Modal\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <EditHoursModal hour={hour} handleClose={handleClose} date={date}/>\n            </Modal>\n            <div className='time'>{time}</div>\n            <IconButton style={{alignSelf: 'center'}} onClick={() => {(play) ? setPause(true) : handlePlay()}}>\n                    {(play) \n                    ? (<PauseCircleIcon style={{color: 'darkcyan' }}/>) \n                    : <PlayCircleIcon style={{color: 'darkcyan' }}/>}\n            </IconButton >\n                \n            <IconButton style={{alignSelf: 'center'}} onClick={handleOpen}>\n                <BiEdit />\n            </IconButton>\n                \n        </div>\n    )\n}\n\nexport default HoursButtons\n","import { useEffect, useRef } from  'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    let id = setInterval(() => {\n      savedCallback.current();\n    }, delay);\n    return () => clearInterval(id);\n  }, [delay]);\n}","export const PROYECTS_ON_GET_ALL_REQUESTED = 'PROYECTS_ON_GET_ALL_REQUESTED';\nexport const PROYECTS_ON_GET_ALL_SUCCEEDED = 'PROYECTS_ON_GET_ALL_SUCCEEDED';\nexport const PROYECTS_ON_GET_ALL_FAILED = 'PROYECTS_ON_GET_ALL_FAILED';\n\nexport const PROYECTS_ON_CREATE_REQUESTED = 'PROYECTS_ON_CREATE_REQUESTED';\nexport const PROYECTS_ON_CREATE_SUCCEEDED = 'PROYECTS_ON_CREATE_SUCCEEDED';\nexport const PROYECTS_ON_CREATE_FAILED = 'PROYECTS_ON_CREATE_FAILED';\n\nexport const PROYECTS_ON_PUT_REQUESTED = 'PROYECTS_ON_PUT_REQUESTED';\nexport const PROYECTS_ON_PUT_SUCCEEDED = 'PROYECTS_ON_PUT_SUCCEEDED';\nexport const PROYECTS_ON_PUT_FAILED = 'PROYECTS_ON_PUT_FAILED';\n\nexport const PROYECTS_ON_DELETE_REQUESTED = 'PROYECTS_ON_DELETE_REQUESTED';\nexport const PROYECTS_ON_DELETE_SUCCEEDED = 'PROYECTS_ON_DELETE_SUCCEEDED';\nexport const PROYECTS_ON_DELETE_FAILED = 'PROYECTS_ON_DELETE_FAILED';\n\nexport const PROYECTS_ON_GET_TASKS_REQUESTED = 'PROYECTS_ON_GET_TASKS_REQUESTED';\nexport const PROYECTS_ON_GET_TASKS_SUCCEEDED = 'PROYECTS_ON_GET_TASKS_SUCCEEDED';\nexport const PROYECTS_ON_GET_TASKS_FAILED = 'PROYECTS_ON_GET_TASKS_FAILED';\n\nexport const PROYECTS_ON_GET_TASKS_BY_IDS_REQUESTED = 'PROYECTS_ON_GET_TASKS_BY_IDS_REQUESTED';\nexport const PROYECTS_ON_GET_TASKS_BY_IDS_SUCCEEDED = 'PROYECTS_ON_GET_TASKS_BY_IDS_SUCCEEDED';\nexport const PROYECTS_ON_GET_TASKS_BY_IDS_FAILED = 'PROYECTS_ON_GET_TASKS_BY_IDS_FAILED';\n","import * as constants from 'redux_folder/constants/proyects.constants';\nimport { AnyAction } from 'redux'\n//funcion que devuelve un objeto a despachar.\n// PROYECTS_ON_GET_ALL\n\n// PROYECT POST\nexport const putProyect = (data: any): AnyAction => (\n    { type: constants.PROYECTS_ON_PUT_REQUESTED, data });\n\nexport const putProyectSucceeded = (data: any): AnyAction => (\n    { type: constants.PROYECTS_ON_PUT_SUCCEEDED, data });\n\nexport const putProyectFailed = (error: unknown): AnyAction => (\n    { type: constants.PROYECTS_ON_PUT_FAILED, error });\n\n//DELETE\nexport const deleteProyects = (id:string): AnyAction => (\n    { type: constants.PROYECTS_ON_DELETE_REQUESTED, id });\n\nexport const deleteProyectSucceeded = (data: any): AnyAction => (\n    { type: constants.PROYECTS_ON_DELETE_SUCCEEDED, data });\n\nexport const deleteProyectFailed = (error: unknown): AnyAction => (\n    { type: constants.PROYECTS_ON_DELETE_FAILED, error });\n//funcion que devuelve un objeto a despachar.\n// PROYECTS_ON_GET_ALL\nexport const onProyectsGetAll = ():  AnyAction => (\n  { type: constants.PROYECTS_ON_GET_ALL_REQUESTED});\n  \nexport const onGetAllSucceeded = (data: any): AnyAction => (\n  { type: constants.PROYECTS_ON_GET_ALL_SUCCEEDED, data });\n\nexport const onGetAllFailed = (error: unknown): AnyAction => (\n  { type: constants.PROYECTS_ON_GET_ALL_FAILED, error });\n  \n\nexport const createProyect = (data: any):  AnyAction => (\n    { type: constants.PROYECTS_ON_CREATE_REQUESTED, data});\n  \nexport const createProyectSucceeded = (data: any): AnyAction => (\n    { type: constants.PROYECTS_ON_CREATE_SUCCEEDED, data });\n  \nexport const createProyectFailed = (error: unknown): AnyAction => (\n  { type: constants.PROYECTS_ON_CREATE_FAILED, error });\n\n\nexport const onGetTasks = (): AnyAction => (\n{type: constants.PROYECTS_ON_GET_TASKS_REQUESTED});\n\nexport const onGetTasksSucceeded = (data: any): AnyAction => (\n  { type: constants.PROYECTS_ON_GET_TASKS_SUCCEEDED, data });\n\nexport const onGetTasksFailed = (error: unknown): AnyAction => (\n  { type: constants.PROYECTS_ON_GET_TASKS_FAILED, error });\n  \n\nexport const onGetTasksByIds = (ids: string[]): AnyAction => (\n  {type: constants.PROYECTS_ON_GET_TASKS_BY_IDS_REQUESTED, ids});\n\nexport const onGetTasksByIdsSucceeded = (data: any): AnyAction => (\n  { type: constants.PROYECTS_ON_GET_TASKS_BY_IDS_SUCCEEDED, data });\n\nexport const onGetTasksByIdsFailed = (error: unknown): AnyAction => (\n  { type: constants.PROYECTS_ON_GET_TASKS_BY_IDS_FAILED, error });\n","import { Alert, Box, Button, FormControl, InputLabel, MenuItem, Select, TextField, Typography, Tooltip  } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport { format } from 'date-fns';\nimport useTypedSelector from 'hooks/useTypedSelector';\nimport React, { useEffect } from 'react'\nimport './index.css'\nimport { Controller, useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { onCreateHours } from 'redux_folder/actions/hours.actions';\nimport { onGetTasks } from 'redux_folder/actions/proyects.actions';\n\nconst AddTaskToHoursModal = (props: any) => {\n\n    const {date, handleClose} = props;\n\n    const {\n        handleSubmit, control, formState: { errors },\n      } = useForm();\n    \n    const dispatch = useDispatch()\n    const tasks = useTypedSelector((state) => state.proyects.tasks)\n    console.log(tasks)\n    useEffect(() => {\n        dispatch(onGetTasks())\n    }, [])\n    \n    const style = {\n        position: 'absolute' as 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        width: 400,\n        bgcolor: 'background.paper',\n        border: '2px solid #000',\n        boxShadow: '2px 2px darkcyan',\n        p: 4,\n      };\n    \n    const onSubmit = (data:any)=>{\n        let data_ = {\n            ...data,\n            user_id: 106226,\n            day: format(date, 'yyyy-MM-dd'),\n        }\n        if(!data.note){\n            data_ = {\n                ...data_,\n                note: '',\n            }\n        }\n\n        if(!data.hours){\n            data_ = {\n                ...data_,\n                hours: '0',\n            }\n        }\n        if(!data.minutes){\n            data_ = {\n                ...data_,\n                minutes: '0',\n            }\n        }\n        if(!data.seconds){\n            data_ = {\n                ...data_,\n                seconds: '0',\n            }\n        }\n        dispatch(onCreateHours(data_))\n        handleClose()\n        \n\n    }\n    return(\n        <Box sx={style}>\n                <Typography id=\"title\" variant=\"h6\" component=\"h2\">\n                    New time entry for {format(date,'eeee dd/MM/yyyy')}\n                </Typography>\n                <form onSubmit={handleSubmit(onSubmit)} style={{display: 'flex', flexDirection:'column', justifyContent:'center'}}>\n                <Controller\n                    control={control}\n                    render={({ field: { onChange, onBlur, value } }) => {\n                        return (\n                            <FormControl fullWidth style={{marginTop: 40}}>\n                                <InputLabel id=\"tasks\"> Tareas </InputLabel>\n                                <Select\n                                    labelId=\"tasks\"\n                                    id=\"tasks\"\n                                    value={value}\n                                    label=\"Tareas\"\n                                    onChange={onChange}\n                                    style={{minWidth: '80%'}}\n                                >\n                                    {tasks.map((task) => <MenuItem value={task.idTarea}> {task.nombre} from {task.idProyecto.nombre}</MenuItem>)}\n                                </Select>\n                            </FormControl>\n                        )}}\n                    name=\"task_id\"\n                    rules={{ required: true }}\n                />\n                <Controller\n                    control={control}\n                    render={({ field: { onChange, onBlur, value } }) => {\n                        return (\n                            <FormControl style={{margin: '40px 0px'}}>\n                                <InputLabel id=\"note\"/> \n                                <TextField id=\"note\"  label='Nota' multiline rows={4} variant=\"outlined\" onChange={onChange}/>\n                            </FormControl>\n\n\n                        )}}\n                    name=\"note\"\n                />\n                <div style={{display: 'flex' , justifyContent: 'center'}}>\n                            \n                    <Controller\n                        control={control}\n                        render={({ field: { onChange, onBlur, value } }) => {\n                            return (\n                                <Tooltip title=\"Hora\">\n                                    <TextField id=\"hours\"   inputProps={{style: {textAlign: 'center', width: 70}}} placeholder='00'  variant=\"standard\" onChange={onChange}/>\n                                </Tooltip>\n                            )}}\n                        name=\"hours\"\n                        rules={{pattern: /^((?:[0-9]|1[0-9]|2[0-3])(?:.\\d{1,2})?|23(?:.00?)?)$/}}\n                    />\n                    <p style={{alignSelf: 'center', margin: 10}}>:</p>\n                        \n                    <Controller\n                        control={control}\n                        render={({ field: { onChange, onBlur, value } }) => {\n                            return (\n                                <Tooltip title=\"Minutos\">\n                                    <TextField id=\"minutes\"  inputProps={{style: {textAlign: 'center', width: 70}}} placeholder='00'  variant=\"standard\" onChange={onChange}/>\n                                </Tooltip>\n                                )}}\n                        name=\"minutes\"\n                        rules={{pattern: /^((?:[0-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9])(?:.\\d{1,2})?|59(?:.00?)?)$/}}\n                    />\n                    <p style={{alignSelf: 'center', margin: 10}}>:</p>\n                    <Controller\n                        control={control}\n                        render={({ field: { onChange, onBlur, value } }) => {\n                            return (\n                                <Tooltip title=\"Segundos\">\n                                    <TextField id=\"seconds\"   inputProps={{style: {textAlign: 'center', width: 70}}} placeholder='00'  variant=\"standard\" onChange={onChange}/>\n                                </Tooltip>\n                                )}}\n                        name=\"seconds\"\n                        rules={{pattern: /^((?:[0-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9])(?:.\\d{1,2})?|59(?:.00?)?)$/ }}\n                    />\n                            \n                </div>  \n\n                <Button style={{margin:'10px 0px',right: '0px', bottom:'0px', alignSelf: 'flex-end'}} endIcon={<AddIcon/>} variant=\"contained\" onClick={handleSubmit(onSubmit)}>\n                    Añadir\n                </Button>\n                </form>\n                {errors?.hours?.type === 'pattern' && <p style={{color: 'red', fontSize: 10}}>Please enter a valid number</p>}\n                {errors?.minutes?.type === 'pattern' && <p style={{color: 'red', fontSize: 10}}>Please enter a valid number</p>}\n                {errors?.seconds?.type === 'pattern' && <p style={{color: 'red', fontSize: 10}}>Please enter a valid number</p>}\n                {errors?.task_id?.type === 'required' && <p style={{color: 'red', fontSize: 10}}>Task Required</p>}  \n            </Box>\n    )\n}\n\nexport default AddTaskToHoursModal;","import React, { useEffect, useState } from 'react'\nimport './index.css';\nimport TextField from '@mui/material/TextField';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport DatePicker from '@mui/lab/DatePicker';\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\nimport ListItem from 'components/ListItem';\nimport HoursButtons from 'components/HoursButtons';\nimport AddIcon from '@mui/icons-material/Add';\nimport Button from '@mui/material/Button';\nimport { CircularProgress, IconButton, Modal } from '@mui/material';\nimport AddTaskToHoursModal from 'components/AddTaskToHoursModal';\nimport { onHoursGet } from 'redux_folder/actions/hours.actions';\nimport { useDispatch } from 'react-redux';\nimport useTypedSelector from 'hooks/useTypedSelector';\nimport { format } from 'date-fns';\nimport AssignmentIcon from '@mui/icons-material/Assignment';\nimport { onGetTasksByIds } from 'redux_folder/actions/proyects.actions';\n\n\n\nconst HoursView = (props:any) => {\n    const [date, setDate] = useState(new Date());\n    const [open, setOpen] = React.useState(false);\n    const handleOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n\n    const [timerOn, setTimerOn] = useState(false);\n\n    const dispatch = useDispatch()\n    const actionSucceeded = useTypedSelector((state) => state.hours.actionSucceeded)\n    const loading = useTypedSelector((state) => state.hours.loading)\n\n    useEffect(() => {\n        dispatch(onHoursGet({day:format(date, 'yyyy-MM-dd'), user_id: '106226'}))\n    }, [])\n    \n    useEffect(() => {\n        if(actionSucceeded){\n            dispatch(onHoursGet({day:format(date, 'yyyy-MM-dd'), user_id: '106226'}))\n        }\n    }, [actionSucceeded, date, dispatch])\n\n    const hours = useTypedSelector((state) => state.hours.hours)\n\n    useEffect(() => {\n        dispatch(onGetTasksByIds(hours.map((hour) => hour.task_id)))\n    }, [hours, dispatch])\n\n\n\n\n    const tasks = useTypedSelector((state) => state.proyects.tasks)\n\n    \n    return (\n        <div className=\"hoursView\">\n            <div className=\"rowDiv\">\n                <h1 className='title'>\n                    Area personal\n                </h1>\n                <div className=\"rowDiv\">\n                    <div className=\"calendar\">\n                        <LocalizationProvider dateAdapter={AdapterDateFns}>\n                            <DatePicker\n                                label=\"Date\"\n                                value={date}\n                                onChange={(newValue) => {if(newValue){setDate(newValue)}}}\n                                renderInput={(params) => <TextField {...params} />}\n                            />\n                        </LocalizationProvider>\n                    </div>\n                    \n                </div>\n            </div>\n            <Button style={{marginLeft: 40}} startIcon={<AddIcon/>} onClick={handleOpen}>\n                Añadir entrada\n            </Button>\n            <Modal\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <AddTaskToHoursModal date={date } handleClose={handleClose}/>\n            </Modal>\n            \n            \n            <div className=\"listBox\" >\n                {((hours.length === 0) \n                    ? (loading)\n                        ? <CircularProgress style={{top: '50%', left: '50%',}}/>\n                        :<div style={{display: 'flex', flexDirection: 'column'}}>\n                            <AssignmentIcon style={{alignSelf: 'center', width: 100, height: 100, color: 'grey', opacity: '0.5'}} />\n                            <p style={{alignSelf: 'center', color: 'grey', fontSize:20, fontFamily:'Courier New, Courier, monospace', fontStyle:'italic', fontWeight:'500'}} >No hay entradas todavia</p> \n                        </div>\n                    :<div className=\"hoursList\">\n                        <ul className='list'>\n                            {hours.map((hour:any) => (\n                                <div>\n                                    <ListItem item={hour} task={tasks.find((task) => `${task.idTarea}` === hour.task_id)}>\n                                        <HoursButtons hour={hour} date={date} timerOn={timerOn} setTimerOn={setTimerOn} />\n                                    </ListItem>\n                                </div>\n                            )) }\n                        </ul>\n                    </div>)}\n            </div>\n        </div>\n    )\n}\n\nexport default HoursView\n\n","import React from 'react'\nimport HoursView from 'views/Hours';\n\nconst HoursContainer = () => {\n    \n    const hours = [\n        {\n            name: 'Task 1',\n            description: 'Description 1',\n            minutes: 0,\n            hours: 0,\n            seconds: 0,\n        },\n        {\n            \n            name: 'Task 2',\n            description: 'Description 2',\n            minutes: 58,\n            hours: 0,\n            seconds: 55,\n        }\n    ]\n    return (\n        <HoursView hours={hours}/>    \n    )\n}\n\nexport default HoursContainer;\n","import React from 'react'\nimport {Link} from \"react-router-dom\";\n//import Button from 'components/Button/Button';\nimport './index.css'\nimport {Button, Accordion} from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport useTypedSelector from 'hooks/useTypedSelector';\n\nconst SoporteView = (props: any) => {\n  const state = useTypedSelector((state) => state.products);\n    if(state.loading){\n        return (\n            <h2>Loading...</h2>\n        )\n    }\n  return (\n    <>\n      <div className='body'>\n            \n            <div className='d-flex flex-row' id=\"titulo\">{/* Lo pongo a la izquierda y que ocupe todo el ancho  */}\n                <h2>Productos</h2>\n            </div>\n            \n            <Accordion className='productos'>\n                {Object.entries(state.products).map((product: any, index:number)=> (\n                    <Accordion.Item eventKey={index.toString()}>\n                        <Accordion.Header>{product[0]}</Accordion.Header>\n                        <Accordion.Body>\n                        {product[1].map((version: string, index:number)=> (\n                            <div>\n                                <Link to=\"/soporte/tickets\" state={{ product: product[0], version: version }}>\n                                    <span>{version}</span>\n                                </Link>\n                            </div>\n                        ))}\n                        </Accordion.Body>\n                    </Accordion.Item>\n                ))}\n            </Accordion>\n\n        </div>\n    </>\n    )\n}\n\nexport default SoporteView;","export const TICKETS_ON_GET_ALL_REQUESTED = 'TICKETS_ON_GET_ALL_REQUESTED';\nexport const TICKETS_ON_GET_ALL_SUCCEEDED = 'TICKETS_ON_GET_ALL_SUCCEEDED';\nexport const TICKETS_ON_GET_ALL_FAILED = 'TICKETS_ON_GET_ALL_FAILED';\n\nexport const PRODUCTS_ON_GET_ALL_REQUESTED = 'PRODUCTS_ON_GET_ALL_REQUESTED';\nexport const PRODUCTS_ON_GET_ALL_SUCCEEDED = 'PRODUCTS_ON_GET_ALL_SUCCEEDED';\nexport const PRODUCTS_ON_GET_ALL_FAILED = 'PRODUCTS_ON_GET_ALL_FAILED';\n\nexport const TAREAS_ON_GET_ALL_REQUESTED = 'TAREAS_ON_GET_ALL_REQUESTED';\nexport const TAREAS_ON_GET_ALL_SUCCEEDED = 'TAREAS_ON_GET_ALL_SUCCEEDED';\nexport const TAREAS_ON_GET_ALL_FAILED = 'TAREAS_ON_GET_ALL_FAILED';\n\nexport const RESOURCES_ON_GET_ALL_REQUESTED = 'RESOURCES_ON_GET_ALL_REQUESTED';\nexport const RESOURCES_ON_GET_ALL_SUCCEEDED = 'RESOURCES_ON_GET_ALL_SUCCEEDED';\nexport const RESOURCES_ON_GET_ALL_FAILED = 'RESOURCES_ON_GET_ALL_FAILED';\n\nexport const CLIENTS_ON_GET_ALL_REQUESTED = 'CLIENTS_ON_GET_ALL_REQUESTED';\nexport const CLIENTS_ON_GET_ALL_SUCCEEDED = 'CLIENTS_ON_GET_ALL_SUCCEEDED';\nexport const CLIENTS_ON_GET_ALL_FAILED = 'CLIENTS_ON_GET_ALL_FAILED';","import * as constants from 'redux_folder/constants/tickets.constants';\nimport {AnyAction} from 'redux'\n\n// TICKETS_ON_GET_ALL\nexport const onTicketsGetAll = (producto:string, version:string):  AnyAction => (\n  { type: constants.TICKETS_ON_GET_ALL_REQUESTED, producto: producto, version: version});\n\nexport const onTicketsGetAllSucceeded = (data: any): AnyAction => (\n  { type: constants.TICKETS_ON_GET_ALL_SUCCEEDED, data });\n\nexport const onTicketsGetAllFailed = (error: unknown): AnyAction => (\n  { type: constants.TICKETS_ON_GET_ALL_FAILED, error });\n\n\n// PRODUCTS_ON_GET_ALL\nexport const onProductsGetAll = ():  AnyAction => (\n  { type: constants.PRODUCTS_ON_GET_ALL_REQUESTED});\n\nexport const onProductsGetAllSucceeded = (data: any): AnyAction => (\n  { type: constants.PRODUCTS_ON_GET_ALL_SUCCEEDED, data });\n\nexport const onProductsGetAllFailed = (error: unknown): AnyAction => (\n  { type: constants.PRODUCTS_ON_GET_ALL_FAILED, error });\n\n// TAREAS_ON_GET_ALL\nexport const onTareasGetAll = ():  AnyAction => (\n  { type: constants.TAREAS_ON_GET_ALL_REQUESTED});\n\nexport const onTareasGetAllSucceeded = (data: any): AnyAction => (\n  { type: constants.TAREAS_ON_GET_ALL_SUCCEEDED, data });\n\nexport const onTareasGetAllFailed = (error: unknown): AnyAction => (\n  { type: constants.TAREAS_ON_GET_ALL_FAILED, error });\n\n// RESOURCES_ON_GET_ALL\nexport const onResourcesGetAll = ():  AnyAction => (\n  { type: constants.RESOURCES_ON_GET_ALL_REQUESTED});\n\nexport const onResourcesGetAllSucceeded = (data: any): AnyAction => (\n  { type: constants.RESOURCES_ON_GET_ALL_SUCCEEDED, data });\n\nexport const onResourcesGetAllFailed = (error: unknown): AnyAction => (\n  { type: constants.RESOURCES_ON_GET_ALL_FAILED, error });\n\n// CLIENTS_ON_GET_ALL\nexport const onClientsGetAll = ():  AnyAction => (\n  { type: constants.CLIENTS_ON_GET_ALL_REQUESTED});\n\nexport const onClientsGetAllSucceeded = (data: any): AnyAction => (\n  { type: constants.CLIENTS_ON_GET_ALL_SUCCEEDED, data });\n\nexport const onClientsGetAllFailed = (error: unknown): AnyAction => (\n  { type: constants.CLIENTS_ON_GET_ALL_FAILED, error });\n","import React, { useState } from 'react';\nimport SoporteView from 'views/Soporte'\nimport {useDispatch} from 'react-redux'\nimport { onTicketsGetAll, onProductsGetAll} from 'redux_folder/actions/tickets.actions';\nimport useTypedSelector from 'hooks/useTypedSelector';\n\nconst SoporteContainer = () => {\n    \n    \n    const dispatch = useDispatch();\n    \n    const products = [{\"name\":\"Siu Guaraniii\",\"versions\":[\"1.0.0\"]},{\"name\":\"Proyecto 2\",\"versions\":[\"2.0\",\"2.1\",\"2.1.1\"]}];\n    dispatch(onProductsGetAll());\n\n    return (<SoporteView products ={products} />);\n}\n\nexport default SoporteContainer\n","import React from 'react'\n//import './Table.css'\nimport Table from 'react-bootstrap/Table'\nimport moment from 'moment'\n\nconst Tabla = (props:any) => {\n    const {tickets} = props;\n    const {onRowClick} = props;\n    return (\n        <Table striped bordered hover style={{'height': '350px','overflow': 'scroll', 'display': 'block'}}>\n                        <thead>\n                            <tr>\n                                <th>Nombre</th>\n                                <th>Tipo</th>\n                                <th>Recurso</th>\n                                <th>Estado</th>\n                                <th>Cliente</th>\n                                <th>Deadline</th> \n                            </tr>\n                        </thead>\n                        <tbody >\n                            {tickets.map((ticket: { nombre: string; tipo: string; recurso: string; estado: string; cliente: string; fecha_limite: string;}, index:number)=> (\n                            <tr onClick={()=>{onRowClick(index)}}>\n                                <td>{ticket.nombre}</td>\n                                <td>{ticket.tipo}</td>\n                                <td>{ticket.recurso}</td>\n                                <td>{ticket.estado}</td>\n                                <td>{ticket.cliente}</td>\n                                <td>{moment(new Date(parseInt(ticket.fecha_limite))).format(\"DD/MM/YYYY\")}</td>\n                            </tr>\n                            ))}\n                        </tbody>\n                    </Table>\n    )\n}\n\nexport default Tabla","import React from 'react'\nimport moment from 'moment'\nimport './Descripcion.css'\nimport Button from 'react-bootstrap/Button'\nimport { AnyRecord } from 'dns';\nimport {Link} from 'react-router-dom';\nimport { List, ListItem, ListItemText} from '@mui/material';\nimport useTypedSelector from 'hooks/useTypedSelector';\n\nconst Descripcion = (props:any) => {\n    let {ticket} = props;\n    // let {product} = props;\n    // let {version} = props;\n    const state = useTypedSelector((state) => state.tareas);\n    const tareas = state.tareas;\n    if(!ticket){\n        return (<div></div>)\n    }\n    const tareas_ticket = tareas.filter((tarea:any) => {return ticket.tareas.includes(tarea.idTarea)});\n    if(state.loading){\n        return (\n            <h2>Loading...</h2>\n        )\n    }\n    return (\n        <div className='info'>\n            <h6>{ticket.nombre}</h6>\n            <div>\n                <p className='subtitulo margen_chico'>Descripción:</p>\n                <p className='margen_chico descripcion'>{ticket.descripcion}</p>\n            </div>\n            <div className='d-flex flex-row justify-content-around info_item'>\n                <div>\n                    <p className='subtitulo margen_chico'>Tipo:</p>\n                    <p className='margen_chico'>{ticket.tipo}</p>\n                </div>\n                <div>\n                    <p className='subtitulo margen_chico'>Severidad:</p>\n                    <p className='margen_chico'>{ticket.severidad}</p>\n                </div>\n            </div>\n            <div className='d-flex flex-row justify-content-evenly'>\n                <div>\n                    <p className='subtitulo margen_chico'>Fecha creación:</p>\n                    <p className='margen_chico'>{moment(new Date(parseInt(ticket.fecha_creacion))).format(\"DD/MM/YYYY\")}</p>\n                </div>\n                <div>\n                    <p className='subtitulo margen_chico'>Fecha límite:</p>\n                    <p className='margen_chico'>{moment(new Date(parseInt(ticket.fecha_limite))).format(\"DD/MM/YYYY\")}</p>\n                </div>\n            </div>\n            <div className='d-flex flex-row justify-content-around'>\n                <div>\n                    <p className='subtitulo margen_chico'>Cliente:</p>\n                    <p className='margen_chico'>{ticket.cliente}</p>\n                </div>\n                <div>\n                    <p className='subtitulo margen_chico'>Creador:</p>\n                    <p className='margen_chico'>{ticket.creador}</p>\n                </div>\n            </div>\n            <div className='d-flex flex-row justify-content-center'>\n                <p className='subtitulo margen_chico margen_derecho'>Recurso:</p>\n                <p className='margen_chico'>{ticket.recurso}</p>\n            </div>\n\n            <p className='subtitulo margen_chico margen_derecho'>Tareas:</p>\n            <ul style={{padding: '0px'}}>\n                {tareas_ticket.map((tarea:any) => (\n                        <li>{tarea.nombre}</li>\n                ))}\n            </ul>\n            <div className='d-flex flex-column align-items-center'>\n                \n                <Link to='/soporte/tickets/eliminar' \n                className='btn btn-secondary boton_accion'\n                state={{ ticketID: ticket.id,\n                 nombre : ticket.nombre ,\n                 descrip : ticket.descripcion,\n                 producto : ticket.producto,\n                 version : ticket.version,\n                 tareas : ticket.tareas,\n                 estado : ticket.estado\n                 }}>\n                    Eliminar\n                </Link>\n\n\n                <Link to='/soporte/tickets/modificar' \n                className='btn btn-dark boton_accion'\n                state={{ ticketID: ticket.id,\n                 nombre : ticket.nombre ,\n                 descrip : ticket.descripcion,\n                 severidad : ticket.severidad,\n                 estado : ticket.estado\n                 }}>\n                    Modificar\n                </Link>\n                \n            </div>\n        </div>\n    )\n}\n\nexport default Descripcion","import React, { useState } from 'react';\nimport {Button, Accordion} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Link} from 'react-router-dom';\nimport Tabla from 'components/Tabla/Tabla'\nimport './index.css'\nimport Descripcion from '../componentes/Descripcion';\nimport useTypedSelector from 'hooks/useTypedSelector';\nimport {useDispatch} from 'react-redux';\nimport { onTareasGetAll } from 'redux_folder/actions/tickets.actions';\n\n\n\nconst TicketsView = (props: any) => {\n    const state = useTypedSelector((state) => state.tickets);\n    const tickets = state.tickets;\n\n    const [ ticket_i, setTicketI ] = useState(0);\n\n\n    function onRowClick(i:number){\n        setTicketI(i)\n    }\n    \n    const {product} = props;\n    const {version} = props;\n\n    const [ search, setSearch ] = useState('');\n    const filter_name = (event:any) => {\n        setSearch(event.target.value);\n    }\n\n    let filtered_tickets = tickets.filter((ticket:any) => {return ticket.nombre.toLowerCase().includes(search.toLowerCase())});\n\n    if(state.loading){\n        return (\n            <h2>Loading...</h2>\n        )\n    }\n\n    return (\n      <>\n        <div className='body'>\n            <div  className='d-flex flex-row justify-content-between titulo'>\n                <div>\n                    <h2>Tickets</h2>\n                </div>\n\n                <div>\n                <label>\n                    Filtro nombre:\n                    <input type=\"text\" name=\"search\" onChange={filter_name}/>\n                </label>\n                </div>\n\n                <div>\n                    <h4>Proyecto: {product}</h4>\n                    <h5>Versión: {version}</h5>\n                </div>\n            </div>\n            <div className='d-flex flex-row justify-content-evenly tabla_aside'>\n                <div className='d-flex flex-column justify-content-between tabla'>\n                    \n                    <Tabla tickets={filtered_tickets} onRowClick={onRowClick} />\n\n                    <div className='d-flex flex-row justify-content-between'>\n                        <Link to='/soporte' className='btn btn-secondary boton_pie_pagina'>\n                            Volver a Productos\n                        </Link>\n                        <Link to='/soporte/tickets/crear' className='btn btn-dark boton_pie_pagina'\n                                                            state={{ \n                                                                producto: product,\n                                                                version : version\n                                                                }}>\n                            Crear nuevo ticket\n                        </Link>\n                    </div>\n                </div>\n                <div className='aside shadow bg-white rounded'>\n                    <Descripcion ticket={filtered_tickets ? filtered_tickets[ticket_i] : null}/>\n                </div>\n            </div>\n            \n        </div>\n      </>\n      )\n  }\n\n  export default TicketsView;","import React from 'react'\nimport TicketsView from 'views/Soporte/Tickets'\nimport {useDispatch} from 'react-redux'\nimport { onTicketsGetAll, onTareasGetAll } from 'redux_folder/actions/tickets.actions';\nimport { useLocation} from 'react-router-dom';\n\nconst TicketsContainer = () => {\n    const product = useLocation().state.product;\n    const version = useLocation().state.version;\n\n    const dispatch = useDispatch();\n    dispatch(onTicketsGetAll(product, version));\n    dispatch(onTareasGetAll());\n\n   \n    return (\n        <TicketsView product={product} version={version}/>\n    )\n}\n\nexport default TicketsContainer","import axios, { AxiosResponse } from 'axios';\n\n\nconst api = axios.create();\n\nasync function getOptions() {\n  const options = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n  return options;\n}\n\nfunction errorResponse(error: any) {\n  const { response } = error;\n  let message = error;\n  if (response) {\n    const { data } = response;\n    message = data.message;\n  }\n  return new Error(message);\n}\n\nexport async function get(url: string, headers = {}): Promise<AxiosResponse> {\n  try {\n    const getToken = await getOptions();\n    const options = { ...getToken, ...headers };\n    const response = await api.get(url, options);\n    return response;\n  } catch (error: any) {\n    throw errorResponse(error);\n  }\n}\n\nexport async function post(url: string, params = {}, headers = {}): Promise<any> {\n  try {\n    const getToken = await getOptions();\n    const options = { ...getToken, ...headers };\n    const response = await api.post(url, params, options);\n    return response;\n  } catch (error: any) {\n    throw errorResponse(error);\n  }\n}\n\n\nexport async function put(url: string, params = {}, headers = {}): Promise<any> {\n  try {\n    const getToken = await getOptions();\n    const options = { ...getToken, ...headers };\n    const { data } = await api.put(url, params, options);\n    return data;\n  } catch (error) {\n    throw errorResponse(error);\n  }\n}\n\nexport async function patch(url: string, params = {}, headers = {}): Promise<any> {\n  try {\n    const getToken = await getOptions();\n    const options = { ...getToken, ...headers };\n    const { data } = await api.patch(url, params, options);\n    return data;\n  } catch (error) {\n    throw errorResponse(error);\n  }\n}\n\nexport async function delete_(url: string, headers = {}): Promise<any> {\n  try {\n    const getToken = await getOptions();\n    const options = { ...getToken, ...headers };\n    const { data } = await api.delete(url, options);\n    return data;\n  } catch (error) {\n    throw errorResponse(error);\n  }\n}\n","import React, { useState } from 'react'\nimport './FormularioCrear.css'\nimport Form from 'react-bootstrap/Form'\nimport { FloatingLabel } from 'react-bootstrap'\nimport Button from 'react-bootstrap/Button'\nimport useTypedSelector from 'hooks/useTypedSelector';\nimport { post } from 'services/api';\nimport {useNavigate} from 'react-router-dom';\nimport {useLocation} from 'react-router-dom';\nimport FormControl from '@mui/material/FormControl';\nimport ListItemText from '@mui/material/ListItemText';\nimport Select from '@mui/material/Select';\nimport Checkbox from '@mui/material/Checkbox';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport MenuItem from '@mui/material/MenuItem';\n\nconst FormularioCrear = (props:any) => {\n    const {tickets} = props;\n    const {onRowClick} = props;\n    const {handleSubmit} = props;\n    const navigate = useNavigate();\n\n    const location = useLocation();\n    const { producto } = location.state;\n    const {version} = location.state;\n\n    const resources_state = useTypedSelector((state) => state.resources);\n    const tareas_state = useTypedSelector((state) => state.tareas);\n    const clients_state = useTypedSelector((state) => state.clients);\n    const resources = resources_state.resources;\n    //console.log(tareas_state)\n    const tareas = tareas_state.tareas.filter((tarea:any) => {return tarea.idTicket == 0});\n    const clients = clients_state.clients;\n\n    const [formValues, setFormValues ] = useState({\n        nombre: '',\n        producto: producto,\n        version: version,\n        estado: 'Abierto',\n        tipo: 'consulta',\n        severidad: '1',\n        cliente: '',\n        recurso: '',\n        descripcion: '',\n        creador: '',\n        tareas: [] as string[],\n    })\n    const tareasAgregadas:string[] = [];\n\n    const handleChangeTarea = (event:any) => {\n        const target = event.target;\n        const name = target.name;\n        if(formValues.tareas.includes(target.value)){\n            formValues.tareas.splice(formValues.tareas.indexOf(target.value),1)\n        }\n        else{\n            formValues.tareas.push(target.value);\n        }\n        console.log(formValues.tareas)\n        setFormValues({...formValues, [name]: formValues.tareas})\n    };\n\n    const handleChange = (event:any) => {\n        const {name , value} = event.target\n        //console.log(name, value)\n        setFormValues({...formValues, [name]: value})\n    }\n\n    const enviar_solicitud_agregar = (e:any) => {\n        console.log(formValues.tareas)\n        e.preventDefault()\n        post(`https://shielded-shelf-11253.herokuapp.com/tickets`,formValues);\n        alert(\"Ticket correctamente creado\");\n        console.log(\"click\")\n        console.log(formValues);\n        navigate(-2);\n    }\n\n    const agregarTarea = () => {\n        formValues.tareas.map((tarea) => (\n           <ul>\n               <li>{tarea}</li>\n           </ul> \n        ))\n    }\n    \n\n    if(resources_state.loading || tareas_state.loading || clients_state.loading){\n        return (\n            <h2>Loading...</h2>\n        )\n    }\n    return (\n        <div className='d-flex justify-content-between'>\n            <Form className='d-flex flex-column justify-content-evenly formulario'>\n                <div className='d-flex flex-row justify-content-evenly'>\n                    <div className='d-flex flex-column justify-content-evenly'>\n\n                        <Form.Group className=\"d-flex flex-row justify-content-evenly margen\" controlId=\"formBasicEmail\">\n                            <Form.Label className='etiqueta'>Nombre</Form.Label>\n                            <Form.Control className='input_grande' type=\"text\" placeholder=\"Nombre del ticket\" name=\"nombre\" value={formValues.nombre} onChange={handleChange} />\n                            {/* <Form.Text className=\"text-muted\">\n                            We'll never share your email with anyone else.\n                        </Form.Text> */}\n                        </Form.Group>\n                        <div className=\"d-flex flex-row justify-content-evenly doble_input\">\n                            <Form.Group className='d-flex flex-row primer_input margen' controlId=\"floatingSelect\">\n                                <Form.Label className='etiqueta'>Proyectos</Form.Label>\n                                <Form.Control type=\"text\" className='input_chico' name=\"producto\" value={formValues.producto} readOnly={true}  />\n                            </Form.Group>\n                            <Form.Group className='d-flex flex-row primer_input margen' controlId=\"floatingSelect\">\n                                <Form.Label className='etiqueta'>Version</Form.Label>\n                                <Form.Control type=\"text\" className='input_chico' name=\"version\" value={formValues.version} readOnly={true} />\n                            </Form.Group>\n                        </div>\n\n                        <div className=\"d-flex flex-row justify-content-evenly\">\n                            <Form.Group className='d-flex flex-row primer_input margen' controlId=\"floatingSelect\">\n                                <Form.Label className='etiqueta'>Estado</Form.Label>\n                                <Form.Select className='input_chico' name=\"estado\" value={formValues.estado} onChange={handleChange}>\n                                    <option value=\"Abierto\">Abierto</option>\n                                    <option value=\"En proceso\">En Proceso</option>\n                                    <option value=\"A la espera de desarrollo\">A la espera de desarollo</option>\n                                    <option value=\"A la espera de cliente\">A la espera de cliente</option>\n                                    <option value=\"Cerrado\">Cerrado</option>\n                                </Form.Select>\n                            </Form.Group>\n                            <Form.Group className='d-flex flex-row primer_input margen' controlId=\"floatingSelect\">\n                                <Form.Label className='etiqueta'>Tipo</Form.Label>\n                                <Form.Select className='input_chico' name=\"tipo\" value={formValues.tipo} onChange={handleChange}>\n                                    <option value=\"consulta\">Consulta</option>\n                                    <option value=\"incidencia\">Incidencia</option>\n                                </Form.Select>\n                            </Form.Group>\n                        </div>\n\n                        <div className=\"d-flex flex-row justify-content-evenly\">\n                            <Form.Group className='d-flex flex-row primer_input margen' controlId=\"floatingSelect\">\n                                <Form.Label className='etiqueta'>Severidad</Form.Label>\n                                <Form.Select className='input_chico' name=\"severidad\" value={formValues.severidad} onChange={handleChange}>\n                                    <option value=\"1\">1</option>\n                                    <option value=\"2\">2</option>\n                                    <option value=\"3\">3</option>\n                                    <option value=\"4\">4</option>\n                                </Form.Select>\n                            </Form.Group>\n                            <Form.Group className='d-flex flex-row primer_input margen' controlId=\"floatingSelect\">\n                                <Form.Label className='etiqueta'>Cliente</Form.Label>\n                                <Form.Select className='input_chico' name=\"cliente\" value={formValues.cliente} onChange={handleChange}>\n                                <option value=\"\"></option>\n                                    {clients.map((client:any) =>(\n                                        <option value={client.id}>{client['razon social']}</option>\n                                        ))}\n                                </Form.Select>\n                            </Form.Group>\n                        </div>\n\n                        <Form.Group className=\"d-flex flex-row justify-content-evenly margen\" controlId=\"formBasicEmail\">\n                            <Form.Label className='etiqueta'>Creador</Form.Label>\n                            <Form.Control className='input_grande' type=\"text\" placeholder=\"Complete\" name=\"creador\" value={formValues.creador} onChange={handleChange}/>\n                            {/* <Form.Text className=\"text-muted\">\n                            We'll never share your email with anyone else.\n                        </Form.Text> */}\n                        </Form.Group>\n                        \n                        <Form.Group className='d-flex flex-row margen' controlId=\"floatingSelect\">\n                            <Form.Label className='etiqueta'>Recurso</Form.Label>\n                            <Form.Select className='input_grande' name=\"recurso\" value={formValues.recurso} onChange={handleChange}>\n                                <option value=\"\"></option>\n                                {resources.map((resource:any) =>(\n                                    <option value={resource.legajo}>{resource.Nombre + ' ' + resource.Apellido}</option>\n                                    ))}\n                            </Form.Select>\n                        </Form.Group>\n                        <div className=\"d-flex flex-row justify-content-evenly\">\n                            <Form.Group className='d-flex flex-row margen' controlId=\"formBasicEmail\">\n                                <Form.Label className='etiqueta'>Descripcion</Form.Label>\n                                <Form.Control\n                                    className='input_descripcion_crear'\n                                    as=\"textarea\"\n                                    placeholder=\"Descripción del ticket\"\n                                    name=\"descripcion\"\n                                    value={formValues.descripcion}\n                                    onChange={handleChange}\n                                    style={{ height: '100px' }}\n                                    />\n                            </Form.Group>\n                        </div>\n                    </div>\n                    <div className=\"mb-3\">\n                        <Form.Group className='d-flex flex-column margen' controlId=\"floatingSelect\">\n                            <Form.Label className='etiqueta'>Tareas</Form.Label>\n                            <Form.Select name=\"tareas\" value={formValues.tareas} onChange={handleChangeTarea}>\n                                <option value=\"\"></option>\n                                {tareas.map((tarea:any) =>(\n                                    <option value={tarea.idTarea}>{tarea.idTarea + ' : ' + tarea.nombre}</option>\n                                ))}\n                            </Form.Select>\n                            {/* <Button onClick={agregarTarea}>\n                                Agregar Tarea\n                            </Button> */}\n                        </Form.Group>\n                        {<div>\n                            <ul>\n                                {formValues.tareas.map((tarea:any) =>(<li>{tarea}</li>))}\n                            </ul>\n                        </div>}\n                        {/* {tareas.map((tarea:any) =>(\n                        <Form.Check \n                            type='checkbox'\n                            id={tarea.idTarea}\n                            label={tarea.idTarea + \":\" + tarea.nombre}\n                            value={formValues.tareas}\n                            name=\"tareas\"\n                            onChange={handleChangeTarea}\n                        />\n                        ))} */}\n                    </div>\n                </div>\n                        \n                <Button className='btn btn-dark' onClick={enviar_solicitud_agregar}>\n                    Crear ticket\n                </Button>\n            </Form>\n        </div>\n    )\n}\n\nexport default FormularioCrear","import React from 'react'\nimport {Link} from \"react-router-dom\";\n//import Button from 'components/Button/Button';\n//import './index.css'\nimport {Button, Accordion} from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport FormularioCrear from 'components/FormularioCrear/FormularioCrear';\nimport {post} from 'services/api';\n\nconst FormularioTicketsView = (props: any) => {\n\n  return (\n    <>\n      <div className='body'>\n            \n            <div className='d-flex flex-row' id=\"titulo\">{/* Lo pongo a la izquierda y que ocupe todo el ancho  */}\n                <h2>Crear ticket</h2>\n            </div>\n            \n            <FormularioCrear/>\n\n        </div>\n    </>\n    )\n}\n\nexport default FormularioTicketsView;\n","import React from 'react'\nimport FormularioTicketsView from 'views/Soporte/FormularioTickets'\nimport {useDispatch} from 'react-redux'\nimport { onResourcesGetAll, onTareasGetAll, onClientsGetAll } from 'redux_folder/actions/tickets.actions';\nconst FormularioTicketsContainer = () => {\n    const dispatch = useDispatch();\n    dispatch(onResourcesGetAll());\n    dispatch(onTareasGetAll());\n    dispatch(onClientsGetAll());\n\n    return (\n        <FormularioTicketsView />\n    )\n}\n\nexport default FormularioTicketsContainer","import React, { Component } from 'react';\nimport './FormularioEliminar.css';\nimport Form from 'react-bootstrap/Form';\nimport { FloatingLabel } from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button';\nimport { useLocation , Link} from 'react-router-dom';\nimport { AnyARecord } from 'dns';\nimport { delete_ } from 'services/api';\nimport { useNavigate } from 'react-router-dom';\n\n\n\nconst FormularioEliminar = (props:any) => {\n    \n    const navigate = useNavigate();\n    const location = useLocation();\n    const { ticketID } = location.state;\n    const {nombre} = location.state;\n    const {descrip} = location.state;\n    const {estado} = location.state;\n    //const navigate = useNavigate();\n    const {producto} = location.state;\n    const {version} = location.state;\n    const {tareas} = location.state;\n\n\n    function solicitarEliminacionDeTicket( id : any, estado : any) {\n    \n        if (estado === \"Cerrado\") {\n            const respuesta = delete_(`https://shielded-shelf-11253.herokuapp.com/tickets/${id}`);\n            alert(\"Ticket correctamente eliminado\");\n            navigate(-2);\n        }\n        else{\n            alert(\"El ticket debe estar cerrado para poder ser eliminado\");\n            navigate(-2); //va a la pagina previa\n            \n        }\n    }\n\n    //const {tickets} = props;\n\n    return (\n        <div className='d-flex justify-content-center'>\n            <Form className='d-flex flex-column justify-content-evenly formulario_eliminar'>\n\n                <Form.Group className=\"d-flex flex-row justify-content-evenly\" controlId=\"formBasicEmail\">\n                    <Form.Label className='etiqueta_eliminar'>ID del Ticket</Form.Label>\n                    <Form.Control value={ticketID} readOnly={true} className='input_grande_eliminar' type=\"text\" placeholder=\"Nombre del ticket\" />\n                </Form.Group>\n\n                <Form.Group className=\"d-flex flex-row justify-content-evenly\" controlId=\"formBasicEmail\">\n                    <Form.Label className='etiqueta_eliminar'>Nombre del Ticket</Form.Label>\n                    <Form.Control value={nombre} readOnly={true} className='input_grande_eliminar' type=\"text\" placeholder=\"Nombre del ticket\" />\n                </Form.Group>\n\n                <Form.Group className='d-flex flex-row' controlId=\"formBasicEmail\">\n                    <Form.Label  className='etiqueta_eliminar'>Descripcion</Form.Label>\n                    <Form.Control\n                        value={descrip}\n                        readOnly={true}\n                        className='input_grande_eliminar'\n                        as=\"textarea\"\n                        placeholder=\"Descripción del ticket\"\n                        style={{ height: '100px' }}\n                        />\n                </Form.Group>\n\n                <Form.Group className='d-flex flex-row justify-content-center' controlId=\"formBasicEmail\">\n                    {/* <Button className='btn btn-secondary' onClick={() =>solicitarEliminacionDeTicket(ticketID, estado, navigate) }>\n                        Eliminar ticket\n                    </Button> */}\n                    <Button onClick={() =>solicitarEliminacionDeTicket(ticketID, estado) } className='btn btn-secondary'>\n                        Eliminar ticket\n                    </Button>\n                    <Link to=\"/soporte/tickets\" className='btn btn-dark' state={{ product: producto, version: version, tareas: tareas }}>\n                        Cancelar\n                    </Link>\n                </Form.Group>\n\n            </Form>\n        </div>\n    )\n}\n\nexport default FormularioEliminar","import React from 'react'\nimport {Link} from \"react-router-dom\";\n//import Button from 'components/Button/Button';\n//import './index.css'\nimport {Button, Accordion} from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport FormularioEliminar from 'components/FormularioEliminar/FormularioEliminar';\n\nconst FormularioEliminarTicketView = (props: any) => {\n//  const {onGetTickets} = props;\n//  const {tickets}      = props;\n\n  return (\n    <>\n      <div className='body'>\n            \n            <div className='d-flex flex-row' id=\"titulo\">{/* Lo pongo a la izquierda y que ocupe todo el ancho  */}\n                <h2>Eliminar Ticket</h2>\n            </div>\n            \n            <FormularioEliminar/>\n\n        </div>\n    </>\n    )\n}\n\nexport default FormularioEliminarTicketView;\n","import React from 'react';\nimport FormularioEliminarTicketView from 'views/Soporte/FormularioEliminarTicket';\nimport {useDispatch} from 'react-redux';\n// import { onTicketsGetAll } from 'redux_folder/actions/tickets.actions';\nimport useTypedSelector from 'hooks/useTypedSelector';\n\nconst EliminarTicketsContainer = () => {\n\n\n\n    const ticket_state = useTypedSelector((state) => state.tickets);\n\n    return (\n        <FormularioEliminarTicketView />\n    )\n}\n\nexport default EliminarTicketsContainer","import React , { useState }from 'react'\nimport './FormularioModificar.css'\nimport Form from 'react-bootstrap/Form'\nimport { FloatingLabel } from 'react-bootstrap'\nimport Button from 'react-bootstrap/Button'\nimport {Link} from \"react-router-dom\";\nimport { useLocation } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport { allowedNodeEnvironmentFlags } from 'process';\nimport { put } from 'services/api';\n\nconst FormularioModificar = (props:any) => {\n    const location = useLocation();\n    const { ticketID } = location.state;\n    const {nombre} = location.state;\n    const {descrip} = location.state;\n    const navigate = useNavigate();\n    const {producto} = location.state;\n    const {version} = location.state;\n    const {tareas} = location.state;\n\n\n\n    const [formValues, setFormValues ] = useState({\n        estado: 'abierto',\n        severidad: '1',\n        descripcion: descrip,\n    })\n\n    const handleChange = (event:any) => {\n        const {name , value} = event.target;\n        //console.log(name, value);\n        setFormValues({...formValues, [name]: value});\n    }\n\n    const enviar_solicitud_modificar = (e:any) => {\n        e.preventDefault();\n        put(`https://shielded-shelf-11253.herokuapp.com/tickets/${ticketID}`, formValues);\n        alert(\"Ticket correctamente actualizado\");\n        //console.log(formValues);\n        navigate(-2);\n    }\n\n\n    return (\n        <div className='d-flex justify-content-center'>\n            <Form className='d-flex flex-column justify-content-evenly formulario_modificar'>\n\n            <Form.Group className=\"d-flex flex-row justify-content-evenly\" controlId=\"formBasicEmail\">\n                    <Form.Label className='etiqueta_modificar'>ID del Ticket</Form.Label>\n                    <Form.Control value={ticketID} readOnly={true} className='input_grande' type=\"text\" placeholder=\"Nombre del ticket\" />\n                </Form.Group>\n\n                <Form.Group className=\"d-flex flex-row justify-content-evenly\" controlId=\"formBasicEmail\">\n                    <Form.Label className='etiqueta_modificar'>Nombre del Ticket</Form.Label>\n                    <Form.Control value={nombre} readOnly={true} className='input_grande' type=\"text\"  onChange={handleChange} />\n                </Form.Group>\n                <br></br>\n                <br></br>\n                <h2 className=\"flex-row justify-content-evenly\" >Campos Modificables</h2>\n                <br></br>\n                <Form.Group className=\"d-flex flex-row justify-content-evenly\" controlId=\"formBasicEmail\" >\n                    <Form.Label className='etiqueta_modificar'>Severidad</Form.Label>\n                    <Form.Select className='input_grande' name=\"severidad\" value={formValues.severidad} onChange={handleChange}>\n                            <option value=\"1\">1</option>\n                            <option value=\"2\">2</option>\n                            <option value=\"3\">3</option>\n                            <option value=\"4\">4</option>\n                        </Form.Select>\n                </Form.Group>\n                <br></br>\n\n                <Form.Group className=\"d-flex flex-row justify-content-evenly\" controlId=\"formBasicEmail\">\n                    <Form.Label className='etiqueta_modificar'>Estado</Form.Label>\n                    <Form.Select className='input_grande' name=\"estado\" value={formValues.estado} onChange={handleChange}>\n                            <option value=\"Abierto\">Abierto</option>\n                            <option value=\"En Proceso\">En Proceso</option>\n                            <option value=\"A la espera de desarollo\">A la espera de desarollo</option>\n                            <option value=\"A la espera de cliente\">A la espera de cliente</option>\n                            <option value=\"Cerrado\">Cerrado</option>\n                        </Form.Select>\n                </Form.Group>\n                <br></br>\n                <div className=\"d-flex flex-row justify-content-evenly\">\n                    <Form.Group className='d-flex flex-row' controlId=\"formBasicEmail\">\n                        <Form.Label  className='etiqueta_modificar'>Descripcion</Form.Label>\n                        <Form.Control\n                            value={formValues.descripcion}\n                            name=\"descripcion\"\n                            onChange={handleChange}\n                            className='input_descripcion'\n                            as=\"textarea\"\n                            placeholder={descrip}\n                            style={{ height: '100px' }}\n                            />\n                    </Form.Group>\n                </div>\n\n                <div className=\"d-flex flex-row justify-content-evenly\">\n                    <Form.Group className='d-flex flex-row' controlId=\"formBasicEmail\">\n                    {/* <Button className='btn btn-dark' onClick={enviar_solicitud_modificar}>\n                        Modificar ticket\n                    </Button> */}\n                    <Link to=\"/soporte/tickets\" onClick={enviar_solicitud_modificar} className='btn btn-dark' state={{ product: producto, version: version, tareas: tareas }}>\n                        Modificar ticket\n                    </Link>\n                    <Button className='btn btn-dark' onClick={() => navigate(-2)} >\n                        Cancelar\n                    </Button>\n\n                    </Form.Group>\n                </div>\n\n            </Form>\n        </div>\n    )\n}\n\nexport default FormularioModificar","import React from 'react'\nimport {Link} from \"react-router-dom\";\n//import Button from 'components/Button/Button';\n//import './index.css'\nimport {Button, Accordion} from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport FormularioModificar from 'components/FormularioModificar/FormularioModificar';\n\nconst FormularioModificarTicketView = (props: any) => {\n//  const {onGetTickets} = props;\n//  const {tickets}      = props;\n\n  return (\n    <>\n      <div className='body'>\n            \n            <div className='d-flex flex-row' id=\"titulo\">{/* Lo pongo a la izquierda y que ocupe todo el ancho  */}\n                <h2>Modificar ticket</h2>\n            </div>\n            \n            <FormularioModificar/>\n\n        </div>\n    </>\n    )\n}\n\nexport default FormularioModificarTicketView;\n","import React from 'react';\nimport FormularioModificarTicketView from 'views/Soporte/FormularioModificarTicket';\nimport {useDispatch} from 'react-redux';\n// import { onTicketsGetAll } from 'redux_folder/actions/tickets.actions';\nimport useTypedSelector from 'hooks/useTypedSelector';\n\nconst ModificarTicketsContainer = () => {\n\n\n\n    const ticket_state = useTypedSelector((state) => state.tickets);\n\n    return (\n        <FormularioModificarTicketView />\n    )\n}\n\nexport default ModificarTicketsContainer","import React from 'react'\nimport './Button.css'\n\nconst Button = (props:any) => {\n    const {text, onClick} = props;\n    return (\n        <button onClick={onClick} className=\"Button\">{text}</button>\n    )\n}\n\nexport default Button\n","import React, { useState } from 'react'\n\nimport { Dialog } from 'primereact/dialog';\nimport { InputText } from 'primereact/inputtext';\nimport Button from 'components/Button/Button';\nimport { Box, FormControl, Input, InputLabel, MenuItem, Select } from '@mui/material';\nimport { Column } from 'primereact/column';\n\nconst ProjectForm = (props: any) => {\n    const [enteredNombre, setEnteredNombre] = useState('');\n    const [enteredDescripcion, setEnteredDescripcion] = useState('');\n    const [enteredFechaInicioReal, setEnteredFechaInicioReal] = useState('');\n    const [enteredFechaInicioEstimada, setEnteredFechaInicioEstimada] = useState('');\n    const [enteredFechaFinalReal, setEnteredFechaFinalReal] = useState('');\n    const [enteredFechaFinalEstimada, setEnteredFechaFinalEstimada] = useState('');\n    const [enteredFechaEntrega, setEnteredFechaEntrega] = useState('');\n    const [enteredHoras, setEnteredHoras] = useState(0);\n    const [enteredEstado, setEnteredEstado] = useState('');\n    const [enteredPrioridad, setEnteredPrioridad] = useState('');\n\n    const estados = [\n        { value: 'no iniciado', label: 'no iniciado' },\n        { value: 'iniciado', label: 'iniciado' },\n        { value: 'finalizado', label: 'finalizado' }\n    ]\n\n    const prioridades = [\n        { value: 'alta', label: 'alta' },\n        { value: 'media', label: 'media' },\n        { value: 'baja', label: 'baja' }\n    ]\n\n    const footer = (\n        <div>\n            <Button text=\"Guardar\" icon=\"pi pi-check\" onClick={() => {\n                const projectData = {\n                    nombre: enteredNombre,\n                    descripcion: enteredDescripcion,\n                    fechaInicioReal: enteredFechaInicioReal,\n                    fechaFinalizacionReal: enteredFechaFinalReal,\n                    fechaInicioEstimada: enteredFechaInicioEstimada,\n                    fechaFinalizacionEstimada: enteredFechaFinalEstimada,\n                    fechaEntregaComunicadaACliente: enteredFechaEntrega,\n                    horasEstimadas: enteredHoras,\n                    prioridad: enteredPrioridad,\n                    estado: enteredEstado\n                }\n                props.onSave(projectData);\n                setEnteredNombre('');\n                setEnteredDescripcion('');\n                setEnteredFechaInicioReal('');\n                setEnteredFechaInicioEstimada('');\n                setEnteredFechaFinalReal('');\n                setEnteredFechaFinalEstimada('');\n                setEnteredFechaEntrega('');\n                setEnteredHoras(0);\n                setEnteredEstado('');\n                setEnteredPrioridad('');\n            }} />\n        </div>\n    );\n\n    const nombreChangeHandler = (event) => {\n        let val = event.target.value;\n        setEnteredNombre(val);\n    }\n    const descripcionChangeHandler = (event) => {\n        let val = event.target.value;\n        setEnteredDescripcion(val);\n    }\n    const fechaInicioRealChangeHandler = (event) => {\n        let val = event.target.value.toString();\n        setEnteredFechaInicioReal(val);\n    };\n    const fechaFinalizacionRealChangeHandler = (event) => {\n        let val = event.target.value.toString();\n        setEnteredFechaFinalReal(val);\n    };\n    const fechaInicionEstimadoChangeHandler = (event) => {\n        let val = event.target.value.toString();\n        setEnteredFechaInicioEstimada(val);\n    };\n    const fechaFinalizacionEstimadoChangeHandler = (event) => {\n        let val = event.target.value.toString();\n        setEnteredFechaFinalEstimada(val);\n    };\n    const fechaEntregaChangeHandler = (event) => {\n        let val = event.target.value.toString();\n        setEnteredFechaEntrega(val);\n    };\n    const horasChangeHandler = (event) => {\n        let val = parseInt(event.target.value);\n        setEnteredHoras(val);\n    }\n    const estadoChangeHandler = (event) => {\n        let val = event.target.value;\n        setEnteredEstado(val);\n    };\n    const prioridadChangeHandler = (event) => {\n        let val = event.target.value;\n        setEnteredPrioridad(val);\n    };\n\n    return (\n        <div>\n            <Dialog header={'Crear Proyecto'} visible={props.visible} style={{ width: '40vw' }} footer={footer} modal={true} onHide={() => props.setVisible(false)}>\n                <form id=\"proyecto-form\"  style={{ width: '100%' }}>\n                    <br />\n                    <span className=\"p-float-label\">\n                        <InputText type='text' name='nombre' value={enteredNombre} style={{ width: '100%' }} id=\"nombre\" onChange={nombreChangeHandler} />\n                        <label htmlFor=\"nombre\">Nombre</label>\n                    </span>\n                    <br />\n                    <span className=\"p-float-label\">\n                        <InputText type='text' value={enteredDescripcion} style={{ width: '100%' }} id=\"descripcion\" onChange={descripcionChangeHandler} />\n                        <label htmlFor=\"descripcion\">Descripción</label>\n                    </span>\n                    <br />\n\n                    <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'space-between'}}>\n                        <label htmlFor=\"fechaInicioReal\">Fecha Inicio&nbsp;</label>\n                        <span className=\"p-float-label\">\n                            <Input type='date' data-data-format='YYYY-MM-DD' value={enteredFechaInicioReal} onChange={fechaInicioRealChangeHandler} />\n                        </span>\n                    \n                        <label htmlFor=\"fechaFinalizacionReal\">Fecha Finalización</label>\n                        <span className=\"p-float-label\">\n                            <Input type='date' data-data-format='YYYY-MM-DD' value={enteredFechaFinalReal} onChange={fechaFinalizacionRealChangeHandler} />\n                        </span>\n                    </div>\n\n                    <br />\n\n                    <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'space-between'}}>\n                        <label htmlFor=\"fechaInicioEstimada\">Fecha Inicio Estimada</label>\n                        <span className=\"p-float-label\">\n                            <Input type='date' data-data-format='YYYY-MM-DD' value={enteredFechaInicioEstimada} onChange={fechaInicionEstimadoChangeHandler} />\n                        </span>\n                        <br />\n                        <label htmlFor=\"fechaFinalizacionEstimada\">Fecha Finalización Estimada</label>\n                        <span className=\"p-float-label\">\n                            <Input type='date' data-data-format='YYYY-MM-DD' value={enteredFechaFinalEstimada} onChange={fechaFinalizacionEstimadoChangeHandler} />\n                        </span>\n                    </div>\n\n                    <br />\n\n                    <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'space-between'}}>\n                        <label htmlFor=\"fechaEntregaComunicadaACliente\">Fecha de Entrega</label>\n                        <span className=\"p-float-label\">\n                            <Input type='date' data-data-format='YYYY-MM-DD' value={enteredFechaEntrega} onChange={fechaEntregaChangeHandler} />\n                        </span>\n                        <br />\n                        <span className=\"p-float-label\">\n                            <InputText type={'number'} value={enteredHoras} style={{ width: '100%' }} id=\"horasEstimadas\" onKeyPress={horasChangeHandler} onInput={horasChangeHandler} />\n                            <label htmlFor=\"HorasEstimadas\">Horas estimadas</label>\n                        </span>\n                        <label>&nbsp;</label>\n                        <label>&nbsp;</label>\n\n                    </div>\n                    <br />\n                    <span className=\"p-float-label\">\n                        <Box sx={{ minWidth: 120 }}>\n                            <FormControl fullWidth>\n                                <InputLabel id='prioridad'>Prioridad</InputLabel>\n                                <Select labelId='prioridad' id=\"prioridades\" label='Prioridad' onChange={prioridadChangeHandler} value={enteredPrioridad}\n                                >\n                                    \n                                    <MenuItem value={'alta'}>Alta</MenuItem>\n                                    <MenuItem value={'media'}>Media</MenuItem>\n                                    <MenuItem value={'baja'}>Baja</MenuItem>\n                                </Select>\n                            </FormControl>\n                        </Box>\n                    </span>\n\n\n                    <br />\n                    <span className=\"p-float-label\">\n                        <Box sx={{ minWidth: 120 }}>\n                            <FormControl fullWidth>\n                                <InputLabel id='estado'>Estado</InputLabel>\n                                <Select labelId='Estado' id=\"estados\" label='Estado' onChange={estadoChangeHandler} value={enteredEstado}\n                                >\n                                    <MenuItem value={'no iniciada'}>No iniciada</MenuItem>\n                                    <MenuItem value={'iniciada'}>Iniciada</MenuItem>\n                                    <MenuItem value={'finalizada'}>Finalizada</MenuItem>\n                                    \n                                </Select>\n                            </FormControl>\n                        </Box>\n                    </span>\n                    <br />\n                    <span className=\"p-float-label\">\n                        <Box sx={{ minWidth: 120 }}>\n                            <FormControl fullWidth>\n                                <InputLabel id='responsable'>Responsable</InputLabel>\n                                <Select labelId='Responsable' id=\"responsables\" label='Responsable' onChange={estadoChangeHandler} value={enteredEstado}\n                                >\n                                    <MenuItem value={'Tomas Bruneleschi'}>Tomas Bruneleschi</MenuItem>\n                                    <MenuItem value={'Maximiliano Gantt'}>Maximiliano Gantt</MenuItem>\n                                    <MenuItem value={'Fernando Leonardez'}>Fernando Leonardez</MenuItem>\n                                    \n                                </Select>\n                            </FormControl>\n                        </Box>\n                    </span>\n                </form>\n            </Dialog>\n        </div>\n    )\n}\n\nexport default ProjectForm;","\nexport const TAREAS_ON_GET_REQUESTED ='TAREAS_ON_GET_REQUESTED';\nexport const TAREAS_ON_GET_SUCCEEDED = 'TAREAS_ON_GET_SUCCEEDED';\nexport const TAREAS_ON_GET_FAILED = 'TAREAS_ON_GET_FAILED';\n\nexport const TAREAS_ON_POST_REQUESTED = 'TAREAS_ON_POST_REQUESTED';\nexport const TAREAS_ON_POST_SUCCEEDED = 'TAREAS_ON_POST_SUCCEDED';\nexport const TAREAS_ON_POST_FAILED = 'TAREAS_ON_POST_FAILED';\n\nexport const TAREAS_ON_DELETE_REQUESTED = 'TAREAS_ON_DELETE_REQUESTED';\nexport const TAREAS_ON_DELETE_SUCCEEDED = 'TAREAS_ON_DELETE_SUCCEDED';\nexport const TAREAS_ON_DELETE_FAILED = 'TAREAS_ON_DELETE_FAILED';\n","import * as constants from 'redux_folder/constants/tareas.constants';\nimport { AnyAction } from 'redux'\n//funcion que devuelve un objeto a despachar.\n//TAREAS GET\nexport const onGetTareas = (id: string): AnyAction => (\n    { type: constants.TAREAS_ON_GET_REQUESTED, id });\n    \nexport const getTareasSucceeded = (data: any): AnyAction => (\n    { type: constants.TAREAS_ON_GET_SUCCEEDED, data });\n\nexport const getTareasFailed = (error: unknown): AnyAction => (\n    { type: constants.TAREAS_ON_GET_FAILED, error });\n\n//TAREAS POST\nexport const onCreateTarea = (data:any): AnyAction => (\n    { type: constants.TAREAS_ON_POST_REQUESTED,data });\n\nexport const onPostTareaSucceeded = (data: any): AnyAction => (\n    { type: constants.TAREAS_ON_POST_SUCCEEDED, data });\n\nexport const onPostTareaFailed = (error: unknown): AnyAction => (\n    { type: constants.TAREAS_ON_POST_FAILED, error });\n\n//TAREAS DELETE\nexport const onDeleteTarea = (id:string): AnyAction => (\n    { type: constants.TAREAS_ON_DELETE_REQUESTED,id });\n\nexport const onDeleteTareaSucceeded = (data: any): AnyAction => (\n    { type: constants.TAREAS_ON_DELETE_SUCCEEDED, data });\n\nexport const onDeleteTareaFailed = (error: unknown): AnyAction => (\n    { type: constants.TAREAS_ON_DELETE_FAILED, error });\n\n","import { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Panel } from 'primereact/panel'\nimport { Menubar } from 'primereact/menubar'\nimport './ProjectItem.css'\nimport { useDispatch } from 'react-redux';\nimport useTypedSelector from 'hooks/useTypedSelector';\nimport { onGetTareas } from 'redux_folder/actions/tareas.actions';\nimport {useNavigate} from \"react-router-dom\";\n\n\n\nconst ProjectItem = (props: any) => {\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    \n    const tareas = useTypedSelector((state) => state.tareas.tareas);\n    const showTareas = () => {\n            dispatch(onGetTareas(props.selectedProject.idProyecto.toString()));\n            navigate('/proyecto/tareas',{state:{tareas}});\n    }\n\n    return (\n        <div>\n            <Menubar model={props.buttons}></Menubar>\n            <br></br>\n            <Panel header=\"PSA - Proyectos\" >\n                <DataTable value={props.items} selectionMode=\"single\" selection={props.selectedProject} onSelectionChange={(e: any) => props.setSelectedProject(e.value)}\n                    onRowDoubleClick={showTareas}>\n                    {/* <Column selectionMode=\"single\" headerStyle={{ width: '3rem' }} exportable={false}></Column>  */}\n                    <Column field=\"idProyecto\" header=\"Id Proyecto\" sortable ></Column>\n                    <Column field=\"nombre\" header=\"Nombre\"></Column>\n                    <Column field=\"descripcion\" header=\"Descripcion\"></Column>\n                    <Column field=\"fechaInicioReal\" header=\"Fecha inicio\"></Column>\n                    <Column field=\"fechaFinalizacionReal\" header=\"Fecha fin\"></Column>\n                    <Column field=\"fechaInicioEstimada\" header=\"Fecha inicio Estimada\"></Column>\n                    <Column field=\"fechaFinalizacionEstimada\" header=\"Fecha fin Estimada\"></Column>\n                    <Column field=\"fechaEntregaComunicadaACliente\" header=\"Fecha de Entrega\"></Column>\n                    <Column field=\"horasEstimadas\" header=\"Horas estimadas\"></Column>\n                    <Column field=\"estado\" header=\"Estado\"></Column>\n                    <Column field=\"prioridad\" header=\"Prioridad\"></Column>\n                    <Column field=\"idLegajo\" header=\"Responsable\"></Column>\n                    {/* <Column body={showTareas} exportable={false} style={{ minWidth: '8rem' }}></Column> */}\n                </DataTable>\n            </Panel>\n        </div>\n    )\n}\n\nexport default ProjectItem;\n\n","import { Dialog } from 'primereact/dialog';\nimport { InputText } from 'primereact/inputtext';\nimport Button from 'components/Button/Button';\nimport { Box, FormControl, Input, InputLabel, MenuItem, Select } from '@mui/material';\n\nconst ProjectEditForm = (props: any) => {\n\n    const estados = [\n        { value: 'no iniciado', label: 'no iniciado' },\n        { value: 'iniciado', label: 'iniciado' },\n        { value: 'finalizado', label: 'finalizado' }\n    ]\n\n    const prioridades = [\n        { value: 'alta', label: 'alta' },\n        { value: 'media', label: 'media' },\n        { value: 'baja', label: 'baja' }\n    ]\n    \n    const footer = (\n        <div>\n            <Button text=\"Guardar\" icon=\"pi pi-check\" onClick={() => {\n                 const projectData = {\n                    // nombre: enteredNombre,\n                    // descripcion: enteredDescripcion,\n                    // fechaInicioReal: enteredFechaInicioReal,\n                    // fechaFinalizacionReal: enteredFechaFinalReal,\n                    // fechaInicioEstimada: enteredFechaInicioEstimada,\n                    // fechaFinalizacionEstimada: enteredFechaFinalEstimada,\n                    // fechaEntregaComunicadaACliente: enteredFechaEntrega,\n                    // horasEstimadas: enteredHoras,\n                    // prioridad: enteredPrioridad,\n                    // estado: enteredEstado\n                }\n                props.onEdit();\n            }} />\n        </div>\n    );\n\n    const nombreChangeHandler = (event) => {\n        let val = event.target.value;\n        props.onSetEditedProject(() => {\n            let proyecto = Object.assign({}, props.projectSelected);\n            proyecto.nombre = val;\n            return { proyecto };\n        })\n    }\n    const descripcionChangeHandler = (event) => {\n        let val = event.target.value;\n        // setEnteredDescripcion(val);\n        props.onSetEditedProject((prevProject: { proyecto: any; }) => {\n            let proyecto = Object.assign({}, props.projectSelected);\n            proyecto.descripcion = val;\n            return { proyecto };\n        })\n    }\n    const fechaInicioRealChangeHandler = (event) => {\n        let val = event.target.value.toString();\n        // setEnteredFechaInicioReal(val);\n        props.onSetEditedProject((prevProject: { proyecto: any; }) => {\n            let proyecto = Object.assign({}, props.projectSelected);\n            proyecto.fechaInicioReal = val;\n            return { proyecto };\n        })\n    };\n    const fechaFinalizacionRealChangeHandler = (event) => {\n        let val = event.target.value.toString();\n        // setEnteredFechaFinalReal(val);\n        props.onSetEditedProject((prevProject: { proyecto: any; }) => {\n            let proyecto = Object.assign({}, props.projectSelected);\n            proyecto.fechaFinalizacionReal = val;\n            return { proyecto };\n        })\n    };\n    const fechaInicionEstimadoChangeHandler = (event) => {\n        let val = event.target.value.toString();\n        // setEnteredFechaInicioEstimada(val);\n        props.onSetEditedProject((prevProject: { proyecto: any; }) => {\n            let proyecto = Object.assign({}, props.projectSelected);\n            proyecto.fechaInicioEstimada = val;\n            return { proyecto };\n        })\n    };\n    const fechaFinalizacionEstimadoChangeHandler = (event) => {\n        let val = event.target.value.toString();\n        // setEnteredFechaFinalEstimada(val);\n        props.onSetEditedProject((prevProject: { proyecto: any; }) => {\n            let proyecto = Object.assign({}, props.projectSelected);\n            proyecto.fechaFinalizacionEstimada = val;\n            return { proyecto };\n        })\n    };\n    const fechaEntregaChangeHandler = (event) => {\n        let val = event.target.value.toString();\n        // setEnteredFechaEntrega(val);\n        props.onSetEditedProject((prevProject: { proyecto: any; }) => {\n            let proyecto = Object.assign({}, props.projectSelected);\n            proyecto.fechaEntregaComunicadaACliente = val;\n            return { proyecto };\n        })\n    };\n    const horasChangeHandler = (event) => {\n        let val = parseInt(event.target.value);\n        // setEnteredHoras(val);\n        props.onSetEditedProject((prevProject: { proyecto: any; }) => {\n            let proyecto = Object.assign({}, props.projectSelected);\n            proyecto.fechaHorasEstimadas = val;\n            return { proyecto };\n        })\n    }\n    const estadoChangeHandler = (event) => {\n        let val = event.target.value;\n        // setEnteredEstado(val);\n        props.onSetEditedProject((prevProject: { proyecto: any; }) => {\n            let proyecto = Object.assign({}, props.projectSelected);\n            proyecto.estado = val;\n            return { proyecto };\n        })\n    };\n\n    const prioridadChangeHandler = (event) => {\n        let val = event.target.value;\n        // setEnteredPrioridad(val);\n        props.onSetEditedProject((prevProject: { proyecto: any; }) => {\n            let proyecto = Object.assign({}, props.projectSelected);\n            proyecto.prioridad = val;\n            return { proyecto };\n        })\n    };\n\n    return (\n        <div>\n            <Dialog header={'Editar Proyecto: ' + props.projectSelected.idProyecto} visible={props.visible} style={{ width: '40vw' }} footer={footer} modal={true} onHide={() => props.setVisible(false)}>\n                <form id=\"proyecto-form\">\n                    <br />\n                    <span className=\"p-float-label\">\n                        \n                        <InputText type='text' name='nombre' value={props.projectSelected.nombre} style={{ width: '100%' }} id=\"nombre\" onChange={nombreChangeHandler} />\n                        <label htmlFor=\"nombre\">Nombre</label>\n                    </span>\n                    <br />\n                    <span className=\"p-float-label\">\n                        \n                        <InputText type='text' value={props.projectSelected.descripcion} style={{ width: '100%' }} id=\"descripcion\" onChange={descripcionChangeHandler} />\n                        <label htmlFor=\"descripcion\">Descripción</label>\n                    </span>\n                    <br />\n\n                    <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'space-between'}}>\n                        <label htmlFor=\"fechaInicioReal\">Fecha Inicio Real&nbsp;</label>\n                        <span className=\"p-float-label\">\n                            <Input type='date' data-data-format='YYYY-MM-DD' value={props.projectSelected.fechaInicioReal} onChange={fechaInicioRealChangeHandler} />\n                        </span>\n                        <br />\n                        <label htmlFor=\"fechaFinalizacionReal\">Fecha Finalización Real</label>\n                        <span className=\"p-float-label\">\n                            <Input type='date' data-data-format='YYYY-MM-DD' value={props.projectSelected.fechaFinalizacionReal} onChange={fechaFinalizacionRealChangeHandler} />\n                        </span>\n                    </div>\n\n                    <br />\n\n                    <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'space-between'}}>\n                        <label htmlFor=\"fechaInicioEstimada\">Fecha Inicio Estimada</label>\n                        <span className=\"p-float-label\">\n                            <Input type='date' data-data-format='YYYY-MM-DD' value={props.projectSelected.fechaInicioEstimada} onChange={fechaInicionEstimadoChangeHandler} />\n                        </span>\n                        <br />\n                        <label htmlFor=\"fechaFinalizacionEstimada\">Fecha Finalización Estimada</label>\n                        <span className=\"p-float-label\">\n                            <Input type='date' data-data-format='YYYY-MM-DD' value={props.projectSelected.fechaFinaliazacionEstimada} onChange={fechaFinalizacionEstimadoChangeHandler} />\n                        </span>\n                    </div>\n\n                    <br />\n\n                    <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'space-between'}}>\n                        <label htmlFor=\"fechaEntregaComunicadaACliente\">Fecha de Entrega</label>\n                        <span className=\"p-float-label\">\n                            <Input type='date' data-data-format='YYYY-MM-DD' value={props.projectSelected.fechaEntregaComunicadaACliente} onChange={fechaEntregaChangeHandler} />\n                        </span>\n                        <br />\n                        <span className=\"p-float-label\">\n                            <InputText type={'number'} value={props.projectSelected.horasEstimadas} style={{ width: '100%' }} id=\"horasEstimadas\" onKeyPress={horasChangeHandler} onInput={horasChangeHandler} />\n                            <label htmlFor=\"HorasEstimadas\">Horas estimadas</label>\n                        </span>\n                        <label>&nbsp;</label>\n                        <label>&nbsp;</label>\n                    </div>\n\n                    <br />\n                    <span className=\"p-float-label\">\n                        <Box sx={{ minWidth: 120 }}>\n                            <FormControl fullWidth>\n                                <InputLabel id='prioridad'>Prioridad</InputLabel>\n                                <Select labelId='prioridad' id=\"prioridades\" label='Prioridad' onChange={prioridadChangeHandler} value={props.projectSelected.prioridad}\n                                >\n                                    <MenuItem value={'alta'}>Alta</MenuItem>\n                                    <MenuItem value={'media'}>Media</MenuItem>\n                                    <MenuItem value={'baja'}>Baja</MenuItem>\n                                </Select>\n                            </FormControl>\n                        </Box>\n                    </span>\n                    \n\n                    <br />\n                    <span className=\"p-float-label\">\n                        <Box sx={{ minWidth: 120 }}>\n                            <FormControl fullWidth>\n                                <InputLabel id='estado'>Estado</InputLabel>\n                                <Select labelId='Estado' id=\"estados\" label='Estado' onChange={estadoChangeHandler} value={props.projectSelected.estado}\n                                >\n                                    <MenuItem value={'no iniciada'}>No iniciada</MenuItem>\n                                    <MenuItem value={'iniciada'}>Iniciada</MenuItem>\n                                    <MenuItem value={'finalizada'}>Finalizada</MenuItem>\n                                </Select>\n                            </FormControl>\n                        </Box>\n                    </span>\n                </form>\n            </Dialog>\n        </div>\n    );\n\n}\n\nexport default ProjectEditForm;","import { useEffect, useRef, useState } from 'react';\n\nimport ProjectForm from './ProjectForm';\nimport ProjectItem from './ProjectItem';\nimport { useDispatch } from 'react-redux';\nimport { Toast } from 'primereact/toast';\nimport { createProyect, deleteProyects, onProyectsGetAll, putProyect } from 'redux_folder/actions/proyects.actions';\nimport ProjectEditForm from './ProjectEditForm';\nimport useTypedSelector from 'hooks/useTypedSelector';\nimport { putProyects } from 'services/proyects.services';\n\nconst proyectoDefault = {\n    idProyecto: 0,\n    nombre: '',\n    descripcion: '',\n    fechaInicioReal: '',\n    fechaFinalizacionReal: '',\n    fechaInicioEstimada: '',\n    fechaFinalizacionEstimada: '',\n    fechaEntregaComunicadaACliente: '',\n    horasEstimadas: 0,\n    prioridad: '',\n    estado: ''\n}\n\nconst Projects = (props: any) => {\n    const toast = useRef(document.createElement(\"div\") as any);\n    const [visibleSave, setVisibleSave] = useState(false)\n    const [visibleEdit, setVisibleEdit] = useState(false)\n    const [selectedProject, setSelectedProject] = useState(proyectoDefault)\n    // const [proyecto, setProyecto] = useState(proyectoDefault)\n    const proyectos = useTypedSelector((state) => state.proyects.proyects);\n    const dispatch = useDispatch();\n\n\n    const buttons = [\n        {\n            label: 'Nuevo',\n            icon: 'pi pi-fw pi-plus',\n            command: () => { showSaveDialog() }\n        },\n        {\n            label: 'Editar',\n            icon: 'pi pi-fw pi-pencil',\n            command: () => { showEditDialog() }\n        },\n        {\n            label: 'Eliminar',\n            icon: 'pi pi-fw pi-trash',\n            command: () => { projectDelete() }\n        }\n    ];\n\n    const showSuccess = (msje: any) => {\n        toast.current.show({ severity: 'success', summary: msje.title, detail: msje.description, life: 3000 });\n    }\n\n    const showInfo = (msje) => {\n        toast.current.show({ severity: 'info', summary: msje.title, detail: msje.description, life: 3000 });\n    }\n\n    const showWarn = (msje) => {\n        toast.current.show({ severity: 'warn', summary: msje.title, detail: msje.description, life: 3000 });\n    }\n\n    const showError = (msje) => {\n        toast.current.show({ severity: 'error', summary: msje.title, detail: msje.description, life: 3000 });\n    }\n\n\n    const save = (enteredProject) => {\n        //SQUAD 9 HACER EL FLUJO DEL DISPATCH COMO EL GET, PARA EL POST\n\n        dispatch(createProyect(enteredProject));\n        setVisibleSave(false);\n        const createdMessage = {\n            title: 'Pryecto agregado! ',\n            description: 'Se agrego correctamente el proyecto: ' + enteredProject.nombre\n        }\n        showSuccess(createdMessage);\n        //vuelvo a llamar a todos los proyectos.\n        dispatch(onProyectsGetAll());\n\n    }\n\n    const edit = () => {\n        console.log(selectedProject);\n        debugger;\n        if (0 !== selectedProject.idProyecto) {\n            setVisibleSave(false);\n            dispatch(putProyect(selectedProject))\n            const editedMessage = {\n                title: 'Proyecto editado! ',\n                description: 'Se edito correctamente el proyecto: ' + selectedProject.nombre\n            }\n            showSuccess(editedMessage);\n            //vuelvo a llamar a todos los proyectos.\n            dispatch(onProyectsGetAll());\n        } else {\n            const deletedWarningMessage = {\n                title: 'Atencion! ',\n                description: 'Debe seleccionar un proyecto para ser editado.'\n            }\n            showWarn(deletedWarningMessage);\n        }\n    }\n\n    const projectDelete = () => {\n        if (0 !== selectedProject.idProyecto) {\n            if (window.confirm(\"¿Desea eliminar Proyecto: \" + selectedProject.idProyecto + \"?\")) {\n\n                try {\n                    dispatch(deleteProyects(selectedProject.idProyecto.toString()));\n                    const deletedMessage = {\n                        title: 'Atencion! ',\n                        description: 'No se puede eliminar el proyecto: .' + selectedProject.idProyecto + ' puede contener tareas.'\n                    }\n                    showWarn(deletedMessage);\n\n                } catch (error: any) {\n                    const deletedMessage = {\n                        title: 'Atencion! ',\n                        description: 'No se puede eliminar el proyecto: .' + selectedProject.idProyecto + ' puede contener tareas.'\n                    }\n                    showWarn(deletedMessage);\n                };\n            }\n            //vuelvo a llamar para actualizar el numero de proyectos.\n            dispatch(onProyectsGetAll());\n        } else {\n            const deletedWarningMessage = {\n                title: 'Atencion! ',\n                description: 'Debe seleccionar un proyecto para ser eliminado.'\n            }\n            showWarn(deletedWarningMessage);\n        }\n    }\n\n    const showSaveDialog = () => {\n        setVisibleSave(true)\n        //setProyecto(proyectoDefault)\n        //document.getElementById('proyecto-form').reset();\n    }\n\n    const showEditDialog = () => {\n        if (0 !== selectedProject.idProyecto) {\n            setVisibleEdit(true)\n            // setProyecto(selectedProject)\n        } else {\n            const deletedWarningMessage = {\n                title: 'Atencion! ',\n                description: 'Debe seleccionar un proyecto para ser editado.'\n            }\n            showWarn(deletedWarningMessage);\n        }\n    }\n\n    return (\n        <div>\n            <Toast ref={toast} />\n            <ProjectItem\n                items={proyectos}\n                buttons={buttons}\n                selectedProject={selectedProject}\n                setSelectedProject={setSelectedProject}\n            />\n            <ProjectForm\n                onSave={save}\n                visible={visibleSave}\n                setVisible={setVisibleSave}\n            />\n            <ProjectEditForm\n                projectSelected={selectedProject}\n                onEdit={edit}\n                onSetEditedProject={setSelectedProject}\n                visible={visibleEdit}\n                setVisible={setVisibleEdit}\n            />\n\n        </div >\n    )\n}\nexport default Projects;\n\n","import Projects from './Proyectos/Projects';\n\nconst ProyectsView = (props: any) => {\n\n  return (\n    <div >\n      <Projects\n       projects = {props.projects}\n      />\n    </div>\n  );\n}\n\nexport default ProyectsView\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\n//estilos css\nimport 'primereact/resources/themes/nova/theme.css'\nimport 'primereact/resources/primereact.min.css'\nimport 'primeicons/primeicons.css'\nimport { onProyectsGetAll , createProyect } from 'redux_folder/actions/proyects.actions';\nimport useTypedSelector from 'hooks/useTypedSelector';\nimport ProyectsView from 'views/Proyects';\n\nconst ProyectoContainer = (props: any) => {\n  const dispatch = useDispatch();\n  const proyectos = useTypedSelector((state) => state.proyects.proyects);\n\n  useEffect(() => {\n\n    dispatch(onProyectsGetAll());\n\n  }, [])\n\n  \n  return (\n    <div>\n      <ProyectsView\n        projects={proyectos}\n        />\n    </div>\n  )\n}\n\nexport default ProyectoContainer;","import { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Panel } from 'primereact/panel'\nimport { Menubar } from 'primereact/menubar'\nimport React, { useEffect } from 'react';\nimport { Button } from 'primereact/button';\n\nconst TareaItem = (props: any) => {\n    //props.items[0].idProyecto (tengo)\n    const botones = () => { }\n    console.log(props.items);\n    const getIdProject=()=>{\n        if(0 === props.items.length){\n            return\"\"\n        }\n        else{\n            return props.items[0].idProyecto.idProyecto;\n        }\n    }\n    return (\n        <div className=\"card\">\n            <Menubar model={props.buttons}></Menubar>\n            <br></br>\n            <Panel header={\"Proyecto \"+ getIdProject() + \" - Tareas\"} >\n                <DataTable value={props.items} selectionMode=\"single\" selection={props.selectedTarea} onSelectionChange={(e: any) => props.setSelectedTarea(e.value)}>\n                    {/* <Column selectionMode=\"single\" headerStyle={{ width: '3rem' }} exportable={false}></Column>  */}\n                    <Column field=\"idTarea\" header=\"Id Tarea\" sortable ></Column>\n                    <Column field=\"nombre\" header=\"Nombre\"></Column>\n                    <Column field=\"descripcion\" header=\"Descripcion\"></Column>\n                    <Column field=\"fechaInicioReal\" header=\"Fecha inicio\"></Column>\n                    <Column field=\"fechaFinalizacionReal\" header=\"Fecha fin\"></Column>\n                    <Column field=\"horasEstimadas\" header=\"Horas estimadas\"></Column>\n                    <Column field=\"horasTrabajadas\" header=\"Horas trabajadas\"></Column>\n                    <Column field=\"idTicket\" header=\"Ticket\"></Column>\n                    <Column field=\"prioridad\" header=\"Prioridad\"></Column>\n                    <Column field=\"estado\" header=\"Estado\"></Column>\n                </DataTable>\n            </Panel>\n        </div>\n    );\n}\n\nexport default TareaItem;\n\n","const TareasEditForm = () => {\n    return (\n        <div></div>\n    );\n}\n\nexport default TareasEditForm;","import { useState } from \"react\";\n\nimport Button from 'components/Button/Button';\nimport { Box, FormControl, Input, InputLabel, MenuItem, Select } from '@mui/material';\nimport { Dialog } from 'primereact/dialog';\nimport { InputText } from \"primereact/inputtext\";\n\nconst TareasForm = (props: any) => {\n    const [enteredNombre, setEnteredNombre] = useState('');\n    const [enteredDescripcion, setEnteredDescripcion] = useState('');\n    const [enteredIdLegajoEmpleado, setEnteredIdLegajoEmpleado] = useState(0);\n    const [enteredFechaInicioReal, setEnteredFechaInicioReal] = useState('');\n    const [enteredFechaFinalizacionReal, setEnteredFechaFinalizacionReal] = useState('');\n    const [enteredHorasEstimadas, setenteredHorasEstimadas] = useState(0);\n    const [enteredHorasTrabajadas, setEnteredHorasTrabajadas] = useState(0);\n    const [enteredIdTicket, setEnteredIdTicket] = useState(0);\n    const [enteredEstado, setEnteredEstado] = useState('');\n    const [enteredPrioridad, setEnteredPrioridad] = useState('');\n    const estados = [\n        { value: 'no iniciado', label: 'no iniciado' },\n        { value: 'iniciado', label: 'iniciado' },\n        { value: 'finalizado', label: 'finalizado' }\n    ]\n\n    const prioridades = [\n        { value: 'alta', label: 'alta' },\n        { value: 'media', label: 'media' },\n        { value: 'baja', label: 'baja' }\n    ]\n\n    const footer = (\n        <div>\n            <Button text=\"Guardar\" icon=\"pi pi-check\" onClick={() => {\n                debugger;\n                const tareaData = {\n                    nombre: enteredNombre,\n                    idProyecto: {idProyecto: 1},//harcodeado\n                    descripcion: enteredDescripcion,\n                    fechaInicioReal: enteredFechaInicioReal,\n                    fechaFinalizacionReal: enteredFechaFinalizacionReal,\n                    horasEstimadas: enteredHorasEstimadas,\n                    idTicket: enteredIdTicket,\n                    prioridad: enteredPrioridad,\n                    estado: enteredEstado\n                }\n                props.onSave(tareaData);\n                setEnteredNombre('');\n                setEnteredDescripcion('');\n                setEnteredFechaInicioReal('');\n                setEnteredFechaFinalizacionReal('');\n                setenteredHorasEstimadas(0);\n                setEnteredEstado('');\n                setEnteredPrioridad('');\n            }} />\n        </div>\n    );\n    const nombreChangeHandler = (event) => {\n        let val = event.target.value;\n        setEnteredNombre(val);\n    }\n    const descripcionChangeHandler = (event) => {\n        let val = event.target.value;\n        setEnteredDescripcion(val);\n    }\n    const fechaInicioRealChangeHandler = (event) => {\n        let val = event.target.value.toString();\n        setEnteredFechaInicioReal(val);\n    };\n    const fechaFinalizacionRealChangeHandler = (event) => {\n        let val = event.target.value.toString();\n        setEnteredFechaFinalizacionReal(val);\n    };\n\n    const horasChangeHandler = (event) => {\n        let val = parseInt(event.target.value);\n        setenteredHorasEstimadas(val);\n    }\n    const estadoChangeHandler = (event) => {\n        let val = event.target.value;\n        setEnteredEstado(val);\n    };\n    const prioridadChangeHandler = (event) => {\n        let val = event.target.value;\n        setEnteredPrioridad(val);\n    };\n    return (\n        <div>\n            <Dialog header={'Crear Tarea'} visible={props.visible} style={{ width: '600px' }} footer={footer} modal={true} onHide={() => props.setVisible(false)}>\n                <form id=\"proyecto-form\" style={{ width: '100%' }}>\n                    <br />\n                    <span className=\"p-float-label\">\n                        <InputText type='text' name='nombre' value={enteredNombre} style={{ width: '100%' }} id=\"nombre\" onChange={nombreChangeHandler} />\n                        <label htmlFor=\"nombre\">Nombre</label>\n                    </span>\n                    <br />\n                    <span className=\"p-float-label\">\n                        <InputText type='text' value={enteredDescripcion} style={{ width: '100%' }} id=\"descripcion\" onChange={descripcionChangeHandler} />\n                        <label htmlFor=\"descripcion\">Descripción</label>\n                    </span>\n                    <br />\n\n                    <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'space-between'}}>\n                        <label htmlFor=\"fechaInicioReal\">Fecha Inicio</label>\n                        <span className=\"p-float-label\">\n                            <Input type='date' data-data-format='YYYY-MM-DD' value={enteredFechaInicioReal} onChange={fechaInicioRealChangeHandler} />\n                        </span>\n                        <br />\n                        <label htmlFor=\"fechaFinalizacionReal\">Fecha Finalización</label>\n                        <span className=\"p-float-label\">\n                            <Input type='date' data-data-format='YYYY-MM-DD' value={enteredFechaFinalizacionReal} onChange={fechaFinalizacionRealChangeHandler} />\n                        </span>\n                    </div>\n\n                    <br />\n                    <span className=\"p-float-label\">\n                        <InputText type={'number'} value={enteredHorasEstimadas} style={{ width: '100%' }} id=\"horasEstimadas\" onKeyPress={horasChangeHandler} onInput={horasChangeHandler} />\n                        <label htmlFor=\"HorasEstimadas\">Horas estimadas</label>\n                    </span>\n                    <br />\n                    <span className=\"p-float-label\">\n                        <Box sx={{ minWidth: 120 }}>\n                            <FormControl fullWidth>\n                                <InputLabel id='prioridad'>Prioridad</InputLabel>\n                                <Select labelId='prioridad' id=\"prioridades\" label='Prioridad' onChange={prioridadChangeHandler} value={enteredPrioridad}\n                                >\n                                    <MenuItem value={'alta'}>Alta</MenuItem>\n                                    <MenuItem value={'media'}>Media</MenuItem>\n                                    <MenuItem value={'baja'}>Baja</MenuItem>\n                                </Select>\n                            </FormControl>\n                        </Box>\n                    </span>\n                    <br />\n                    <span className=\"p-float-label\">\n                        <Box sx={{ minWidth: 120 }}>\n                            <FormControl fullWidth>\n                                <InputLabel id='estado'>Estado</InputLabel>\n                                <Select labelId='Estado' id=\"estados\" label='Estado' onChange={estadoChangeHandler} value={enteredEstado}\n                                >\n                                    <MenuItem value={'no iniciada'}>No iniciada</MenuItem>\n                                    <MenuItem value={'iniciada'}>Iniciada</MenuItem>\n                                    <MenuItem value={'finalizada'}>Finalizada</MenuItem>\n                                </Select>\n                            </FormControl>\n                        </Box>\n                    </span>\n                </form>\n            </Dialog>\n        </div>\n    );\n}\n\nexport default TareasForm;","import { Toast } from 'primereact/toast';\nimport { useRef, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { onCreateTarea, onDeleteTarea, onGetTareas } from 'redux_folder/actions/tareas.actions';\nimport TareaItem from './TareaItem';\nimport TareasEditForm from './TareasEditForm';\nimport TareasForm from './TareasForm';\n\nconst tareaDefault = {\n    idTarea: 0,\n    idProyecto: 0,\n    idLegajoEmpleado: 0,\n    nombre: \"\",\n    descripcion: \"\",\n    fechaInicioReal: \"\",\n    fechaFinalizacionReal: \"\",\n    horasEstimadas: 0,\n    horasTrabajadas: 0,\n    idTicket: 0,\n    prioridad: \"\",\n    estado: \"\"\n}\nconst Tareas = (props: any) => {\n    const toast = useRef(document.createElement(\"div\") as any);\n    const [visibleSave, setVisibleSave] = useState(false)\n    const [visibleEdit, setVisibleEdit] = useState(false)\n    const [selectedTarea, setSelectedTarea] = useState(tareaDefault)\n    const [enteredtarea, setTarea] = useState(tareaDefault)\n    const dispatch = useDispatch();\n\n    const buttons = [\n        {\n            label: 'Nuevo',\n            icon: 'pi pi-fw pi-plus',\n            command: () => { showSaveDialog() }\n        },\n        {\n            label: 'Editar',\n            icon: 'pi pi-fw pi-pencil',\n            command: () => { showEditDialog() }\n        },\n        {\n            label: 'Eliminar',\n            icon: 'pi pi-fw pi-trash',\n            command: () => { tareasDelete() }\n        }\n    ];\n\n    const showSaveDialog = () => {\n        setVisibleSave(true);\n        //setProyecto(proyectoDefault)\n        //document.getElementById('proyecto-form').reset();\n    }\n\n    const showSuccess = (msje: any) => {\n        toast.current.show({ severity: 'success', summary: msje.title, detail: msje.description, life: 3000 });\n    }\n\n    const showWarn = (msje) => {\n        toast.current.show({ severity: 'warn', summary: msje.title, detail: msje.description, life: 3000 });\n    }\n\n    const showEditDialog = () => {\n        setVisibleEdit(true);\n        setTarea(selectedTarea);\n    }\n\n    const tareasDelete = () => {\n        if (0!== selectedTarea.idTarea) {\n            if (window.confirm(\"¿Desea eliminar Tarea: \" + selectedTarea.idTarea + \"?\")) {\n                console.log(selectedTarea.idTarea.toString());\n                dispatch(onDeleteTarea(selectedTarea.idTarea.toString())); \n                const deletedMessage = {\n                    title: 'Tarea Eliminada! ',\n                    description: 'Se elimina tarea con exito.'\n                }\n                showSuccess(deletedMessage);\n            }\n            //vuelvo a llamar para actualizar el numero de proyectos.\n           // dispatch(onGetTareas());\n        } else {\n            const deletedWarningMessage = {\n                title: 'Atencion! ',\n                description: 'Debe seleccionar una tarea para ser eliminada.'\n            }\n            showWarn(deletedWarningMessage);\n        }\n    }\n\n    const save = (enteredTarea) => {\n        //SQUAD 9 HACER EL FLUJO DEL DISPATCH COMO EL GET, PARA EL POST\n        console.log(enteredTarea);\n        dispatch(onCreateTarea(enteredTarea));\n        setVisibleSave(false);\n        const createdMessage = {\n            title: 'Tarea agregada! ',\n            description: 'Se agrego correctamente al proyecto: ' + enteredTarea.nombre\n        }\n        showSuccess(createdMessage);\n        //vuelvo a llamar a todos los proyectos.\n        // dispatch(onGetTareas(enteredTarea.idProyecto.idProyecto.toString()));\n\n    }\n\n    const actualizar = (id: any) => {\n\n    }\n    return (\n        <div>\n            <Toast ref={toast} />\n            <TareaItem\n                items={props.items}\n                buttons={buttons}\n                selectedTarea={selectedTarea}\n                setSelectedTarea={setSelectedTarea}\n            />\n            <TareasForm\n                // items={props.items}\n                onSave={save}\n                visible={visibleSave}\n                setVisible={setVisibleSave}\n            />\n            <TareasEditForm\n            // projectSelected={proyecto}\n            // onEdit={edit}\n            // onSetEditedProject={setSelectedProject}\n            // visible={visibleEdit}\n            // setVisible={setVisibleEdit}\n            />\n        </div>\n    );\n}\n\nexport default Tareas;","import useTypedSelector from \"hooks/useTypedSelector\";\nimport { useRef, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport Tareas from \"views/Proyects/Tareas/Tareas\";\n\nconst tareaDefault = {\n    \"idTarea\": 0,\n    \"idProyecto\": 0,\n    \"idLegajoEmpleado\": 0,\n    \"nombre\": \"\",\n    \"descripcion\": \"\",\n    \"fechaInicioReal\": \"\",\n    \"fechaFinalizacionReal\": \"\",\n    \"horasEstimadas\": 0,\n    \"horasTrabajadas\": 0,\n    \"idTicket\": 0,\n    \"prioridad\": \"\",\n    \"estado\": \"\"\n}\n\nconst TareasContainer = () => {\n    const { state } = useLocation();\n    const { tareas } = state;\n\n\n    return (\n        <Tareas\n            items={tareas}\n        ></Tareas>\n    );\n}\n\nexport default TareasContainer;","\nimport Header from 'components/Header/Header';\nimport SideBar from 'components/SideBar';\nimport AboutContainer from 'containers/AboutContainer';\nimport HomeContainer from 'containers/HomeContainer';\nimport HoursContainer from 'containers/HoursContainer';\nimport SoporteContainer from 'containers/SoporteContainer';\nimport TicketsContainer from 'containers/TicketsContainer';\nimport FormularioTicketsContainer from 'containers/FormularioTicketsContainer';\nimport EliminarTicketsContainer from 'containers/EliminarTicketsContainer';\nimport ModificarTicketsContainer from 'containers/ModificarTicketsContainer';\nimport React from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport './App.css';\nimport ProyectoContainer from 'containers/ProyectoContainer';\nimport TareasContainer from 'containers/TareasContainer';\n\nfunction App() {\n  \n  return (\n        <div className=\"App\">\n          <Header/>\n          <div className=\"rowView\">\n            <SideBar />\n            <div className='contentView'>\n              <Routes>\n                <Route path=\"/\" element={<HomeContainer />}/>\n                <Route path=\"/about\" element={<AboutContainer />} />\n                <Route path=\"/hours\" element={<HoursContainer />} />\n                <Route path=\"/soporte\" element={<SoporteContainer />} />\n                <Route path=\"/soporte/tickets\" element={<TicketsContainer />} />\n                <Route path=\"/proyecto\" element={<ProyectoContainer />} />\n                <Route path=\"/proyecto/tareas\" element={<TareasContainer />} />\n                <Route path=\"/soporte/tickets/crear\" element={<FormularioTicketsContainer />} />\n                <Route path=\"/soporte/tickets/eliminar\" element={<EliminarTicketsContainer />} />\n                <Route path=\"/soporte/tickets/modificar\" element={<ModificarTicketsContainer />} />\n                <Route path=\"/proyecto\" element={<ProyectoContainer />} />\n              </Routes>\n            </div>\n          </div>\n        </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Reducer } from 'redux';\nimport * as constants from 'redux_folder/constants/hours.constants';\nimport { IHoursDefaultState } from 'types/hours.types';\n\nconst defaultState: IHoursDefaultState = {\n  loading: false,\n  hours: [],\n  actionSucceeded: false,\n  editSucceeded: false,\n  deleteSucceeded: false,\n};\n\n// eslint-disable-next-line default-param-last\nconst hoursReducer: Reducer = (state = defaultState, action) => {\n  const { data, type } = action;\n  switch (type) {\n    case constants.HOURS_ON_GET_REQUESTED:\n      return {\n        ...state,\n        loading: true,\n        hours: [],\n      };\n    case constants.HOURS_ON_GET_SUCCEEDED:\n      return {\n        ...state,\n        loading: false,\n        hours: data.data.hours,\n      }\n    case constants.HOURS_ON_GET_FAILED:\n      return {\n        ...state,\n        loading:false,\n        hours:[],\n      }\n    case constants.HOURS_ON_CREATE_REQUESTED:\n    case constants.HOURS_ON_EDIT_REQUESTED:\n      case constants.HOURS_ON_DELETE_REQUESTED:\n      return {\n        ...state,\n        loading:true,\n        actionSucceeded:false,\n      }\n      case constants.HOURS_ON_CREATE_SUCCEEDED:\n      case constants.HOURS_ON_EDIT_SUCCEEDED:\n      case constants.HOURS_ON_DELETE_SUCCEEDED:\n        return {\n          ...state,\n          loading:false,\n          actionSucceeded:true,\n        }\n      case constants.HOURS_ON_CREATE_FAILED:\n        case constants.HOURS_ON_EDIT_FAILED:\n        case constants.HOURS_ON_DELETE_FAILED:\n        return {\n          ...state,\n          loading:false,\n          actionSucceeded:false,\n        }\n    default:\n      return state;\n  }\n};\n\nexport default hoursReducer;\n","import { Reducer } from 'redux';\nimport * as constants from 'redux_folder/constants/tickets.constants';\nimport { ITicketsDefaultState } from 'types/tickets.types';\n\nconst defaultState: ITicketsDefaultState = {\n  loading: false,\n  tickets: [],\n};\n\n// eslint-disable-next-line default-param-last\nconst ticketsReducer: Reducer = (state = defaultState, action) => {\n  const { data, type } = action;\n  switch (type) {\n    case constants.TICKETS_ON_GET_ALL_REQUESTED:\n      return {\n        ...state,\n        loading: true,\n        tickets: [],\n      };\n    case constants.TICKETS_ON_GET_ALL_SUCCEEDED:\n      return {\n        ...state,\n        loading: false,\n        tickets: data.data,\n      }\n    case constants.TICKETS_ON_GET_ALL_FAILED:\n      return {\n        ...state,\n        loading:false,\n        tickets:[],\n      }\n    default:\n      return state;\n  }\n};\n\nexport default ticketsReducer;\n","import { Reducer } from 'redux';\nimport * as constants from 'redux_folder/constants/tickets.constants';\nimport { IProductsDefaultState } from 'types/tickets.types';\n\nconst defaultState: IProductsDefaultState = {\n  loading: false,\n  products: [],\n};\n\n// eslint-disable-next-line default-param-last\nconst productsReducer: Reducer = (state = defaultState, action) => {\n  const { data, type } = action;\n  switch (type) {\n    case constants.PRODUCTS_ON_GET_ALL_REQUESTED:\n      return {\n        ...state,\n        loading: true,\n        products: [],\n      };\n    case constants.PRODUCTS_ON_GET_ALL_SUCCEEDED:\n      return {\n        ...state,\n        loading: false,\n        products: data.data,\n      }\n    case constants.PRODUCTS_ON_GET_ALL_FAILED:\n      return {\n        ...state,\n        loading:false,\n        products:[],\n      }\n    default:\n      return state;\n  }\n};\n\nexport default productsReducer;\n","import { Reducer } from 'redux';\nimport * as constantsTareas from 'redux_folder/constants/tareas.constants';\nimport { ITareasDefaultState } from 'types/tareas.types';\nimport * as constants from 'redux_folder/constants/tickets.constants';\n//import { ITareasDefaultState } from 'types/tickets.types';\n\nconst defaultState: ITareasDefaultState = {\n  loading: false,\n  tareas: [],\n};\n\n// eslint-disable-next-line default-param-last\nconst tareasReducer: Reducer = (state = defaultState, action) => {\n  const { data, type } = action;\n  switch (type) {\n    case constantsTareas.TAREAS_ON_GET_REQUESTED:\n    case constants.TAREAS_ON_GET_ALL_REQUESTED:\n      return {\n        ...state,\n        loading: true,\n        tareas: [],\n      };\n    case constantsTareas.TAREAS_ON_GET_SUCCEEDED:\n    case constants.TAREAS_ON_GET_ALL_SUCCEEDED:\n      return {\n        ...state,\n        loading: false,\n        tareas: data.data,\n      }\n    case constantsTareas.TAREAS_ON_GET_FAILED:\n    case constants.TAREAS_ON_GET_ALL_FAILED:\n      return {\n        ...state,\n        loading:false,\n        tareas:[],\n      }\n    default:\n      return state;\n  }\n};\n\nexport default tareasReducer;","import { Reducer } from 'redux';\nimport * as constants from 'redux_folder/constants/tickets.constants';\nimport { IResourcesDefaultState } from 'types/tickets.types';\n\nconst defaultState: IResourcesDefaultState = {\n  loading: false,\n  resources: [],\n};\n\n// eslint-disable-next-line default-param-last\nconst resourcesReducer: Reducer = (state = defaultState, action) => {\n  const { data, type } = action;\n  switch (type) {\n    case constants.RESOURCES_ON_GET_ALL_REQUESTED:\n      return {\n        ...state,\n        loading: true,\n        resources: [],\n      };\n    case constants.RESOURCES_ON_GET_ALL_SUCCEEDED:\n      return {\n        ...state,\n        loading: false,\n        resources: data.data.resources,\n      }\n    case constants.RESOURCES_ON_GET_ALL_FAILED:\n      return {\n        ...state,\n        loading:false,\n        resources:[],\n      }\n    default:\n      return state;\n  }\n};\n\nexport default resourcesReducer;\n","import { Reducer } from 'redux';\nimport * as constants from 'redux_folder/constants/tickets.constants';\nimport { IClientsDefaultState } from 'types/tickets.types';\n\nconst defaultState: IClientsDefaultState = {\n  loading: false,\n  clients: [],\n};\n\n// eslint-disable-next-line default-param-last\nconst clientsReducer: Reducer = (state = defaultState, action) => {\n  const { data, type } = action;\n  switch (type) {\n    case constants.CLIENTS_ON_GET_ALL_REQUESTED:\n      return {\n        ...state,\n        loading: true,\n        clients: [],\n      };\n    case constants.CLIENTS_ON_GET_ALL_SUCCEEDED:\n      return {\n        ...state,\n        loading: false,\n        clients: data.data,\n      }\n    case constants.CLIENTS_ON_GET_ALL_FAILED:\n      return {\n        ...state,\n        loading:false,\n        clients:[],\n      }\n    default:\n      return state;\n  }\n};\n\nexport default clientsReducer;\n","import { Reducer } from 'redux';\nimport * as constants from 'redux_folder/constants/proyects.constants';\n\nconst defaultState  = {\n  loading: false,\n  proyects: [],\n  tasks: [],\n};\n\n// eslint-disable-next-line default-param-last\nconst proyectsReducer: Reducer = (state = defaultState, action) => {\n  const { data, type } = action;\n  switch (type) {\n    case constants.PROYECTS_ON_GET_ALL_REQUESTED:\n      return {\n        ...state,\n        loading: true,\n        proyects: [],\n      };\n\n    case constants.PROYECTS_ON_GET_TASKS_REQUESTED:\n    case constants.PROYECTS_ON_GET_TASKS_BY_IDS_REQUESTED:\n      return {\n        ...state,\n        loading: true,\n        tasks: [],\n      };\n    case constants.PROYECTS_ON_GET_ALL_SUCCEEDED:\n      return {\n        ...state,\n        loading: false,\n        proyects: data.data,\n      }\n    case constants.PROYECTS_ON_GET_TASKS_SUCCEEDED:\n    case constants.PROYECTS_ON_GET_TASKS_BY_IDS_SUCCEEDED:\n      return {\n        ...state,\n        loading: false,\n        tasks: data.data,\n      }\n    case constants.PROYECTS_ON_GET_ALL_FAILED:\n      return {\n        ...state,\n        loading:false,\n        proyects:[],\n      }\n    case constants.PROYECTS_ON_GET_TASKS_FAILED:\n    case constants.PROYECTS_ON_GET_TASKS_BY_IDS_FAILED:\n      return {\n        ...state,\n        loading:false,\n        tasks:[],\n      }\n    default:\n      return state;\n  }\n};\n\nexport default proyectsReducer;","import { combineReducers } from 'redux';\n\nimport hoursReducer from 'redux_folder/reducers/hours.reducer';\nimport ticketsReducer from 'redux_folder/reducers/tickets.reducer';\nimport productsReducer from 'redux_folder/reducers/products.reducer';\nimport tareasReducer from 'redux_folder/reducers/tareas.reducer';\nimport resourcesReducer from 'redux_folder/reducers/resources.reducer';\nimport clientsReducer from 'redux_folder/reducers/clients.reducer';\n\nimport proyectsReducer from './proyects.reducer';\n\nconst rootReducer = combineReducers({\n  hours: hoursReducer,\n  tickets: ticketsReducer,\n  products: productsReducer,\n  tareas: tareasReducer,\n  resources: resourcesReducer,\n  clients: clientsReducer,\n  proyects: proyectsReducer,\n});\n\nexport default rootReducer;\n","import { get, patch, post, delete_ } from 'services/api';\n\nconst url = 'https://psa-tribu2-recursos.herokuapp.com'\n\nexport async function getHours(filters:any): Promise<any> {\n  let url_ = `${url}/hours?limit=50&offset=0`;\n\n  if(filters.day){\n    url_ += `&day=${filters.day}`\n  }\n\n  if(filters.user_id){\n    url_ += `&user_id=${filters.user_id}`\n  }\n\n  if(filters.task_id){\n    url_ += `&task_id=${filters.task_id}`\n  }\n  const response = await get(url_);\n  return response;\n}\n\n\nexport async function createHours(data_:any): Promise<any> {\n  const response = await post(`${url}/hours`, data_);\n  return response;\n}\nexport async function editHours(data: any): Promise<any> {\n  let body = {}\n\n  if( data.day ){\n    body = {\n      ...body,\n      day: data.day\n    }\n  }\n  \n  if( data.note ){\n    body = {\n      ...body,\n      note: data.note\n    }\n  }\n  if( data.hours ){\n    body = {\n      ...body,\n      hours: data.hours\n    }\n  }\n  if( data.minutes ){\n    body = {\n      ...body,\n      minutes: data.minutes\n    }\n  }\n  if( data.seconds ){\n    body = {\n      ...body,\n      seconds: data.seconds\n    }\n  }\n  const response = await patch(`${url}/hours/${data.id}`, body)\n  return response;\n}\n\nexport async function deleteHours(id:string): Promise<any> {\n\n  const response = await delete_(`${url}/hours/${id}`);\n  return response;\n}\n","import {\n  all, call, put, takeLatest,\n} from 'redux-saga/effects';\n\nimport * as constants from 'redux_folder/constants/hours.constants';\nimport * as actions from 'redux_folder/actions/hours.actions';\n\nimport { createHours, deleteHours, editHours, getHours } from 'services/hours.services';\n\nexport function* hoursGet(action:any) {\n  try {\n    const data: unknown = yield call(getHours,action.filters);\n    yield put(actions.onGetSucceeded(data));\n  } catch (error) {\n    yield put(actions.onGetFailed(error));\n  }\n}\nexport function* hoursCreate(action: any) {\n  try {\n    const data: unknown = yield call(createHours, action.data_);\n    yield put(actions.onCreateHoursSucceeded(data));\n  } catch (error) {\n    yield put(actions.onCreateHoursFailed(error));\n  }\n}\nexport function* hoursEdit(action: any) {\n  try {\n    const data: unknown = yield call(editHours, action.data);\n    yield put(actions.onHoursEditSucceeded(data));\n  } catch (error) {\n    yield put(actions.onHoursEditFailed(error));\n  }\n}\nexport function* hoursDelete(action: any) {\n  try {\n    const data: unknown = yield call(deleteHours, action.id);\n    yield put(actions.onHoursDeleteSucceeded(data));\n  } catch (error) {\n    yield put(actions.onHoursDeleteFailed(error));\n  }\n}\nexport function* watchHours() {\n  yield all([\n    takeLatest(constants.HOURS_ON_GET_REQUESTED, hoursGet),\n    takeLatest(constants.HOURS_ON_CREATE_REQUESTED,hoursCreate),\n    takeLatest(constants.HOURS_ON_EDIT_REQUESTED,hoursEdit),\n    takeLatest(constants.HOURS_ON_DELETE_REQUESTED,hoursDelete),\n  ]);\n}\n","import axios from 'axios';\nimport { get , post, delete_,put} from 'services/api';\n\nconst url = 'https://psa-tribu2-proyectos.herokuapp.com'\n\nexport async function getProyects(): Promise<any> {\n  const response = await get(`${url}/proyectos`);\n  return response;\n}\n\nexport async function postProyects(proyecto: any): Promise<any> {\n  const response = await post(`${url}/proyectos`, proyecto.data);\n  return response;\n}\n\nexport async function putProyects(data: any): Promise<any> {\n  const response = await put(`${url}/proyectos`, data);\n  return response;\n}\n\nexport async function saveProyects(): Promise<any> {\n  const response = await get(`${url}/proyectos`);\n  return response;\n}\n export async function deleteProyects(id): Promise<any> {\n   const response = await delete_(`${url}/proyectos/${id}`);\n   return response;\n }\n\nexport async function getTasks(): Promise<any> {\n  const response = await get(`${url}/tareas`);\n  return response;\n}\n\nexport async function getTasksByIds(ids: string[]): Promise<any> {\n  console.log(`${url}/tareas?ids=${ids}`);\n  \n  const response = await get(`${url}/tareas?ids=${ids}`);\n  return response;\n}\n","import {\n    all, call, put, takeLatest,\n  } from 'redux-saga/effects';\n  \n  import * as constants from 'redux_folder/constants/proyects.constants';\n  import * as actions from 'redux_folder/actions/proyects.actions';\n  \n  import { deleteProyects, getProyects , getTasks, getTasksByIds, postProyects, putProyects } from 'services/proyects.services';\n  \n  export function* proyectsGetAll() {\n    try {\n      const data: unknown = yield call(getProyects);\n      yield put(actions.onGetAllSucceeded(data));\n    } catch (error) {\n      yield put(actions.onGetAllFailed(error));\n    }\n  }\n  \n  export function* proyectsCreate(data_:any) {\n    try {\n      const data: unknown = yield call(postProyects,data_);\n      yield put(actions.createProyectSucceeded(data));\n    } catch (error) {\n      yield put(actions.createProyectFailed(error));\n    }\n  }\n\n  export function* proyectsPut(data_:any) {\n    try {\n      const data: unknown = yield call(putProyects,data_);\n      yield put(actions.putProyectSucceeded(data));\n    } catch (error) {\n      yield put(actions.putProyectFailed(error));\n    }\n  }\n\n  export function* proyectsDelete(action:any) {\n    try {\n      const data: unknown = yield call(deleteProyects,action.id);\n      yield put(actions.deleteProyectSucceeded(data));\n    } catch (error) {\n      yield put(actions.deleteProyectFailed(error));\n      //yield error; //devuelvo el error para mostrar mensaje\n    }\n  }\n  export function* tasksGet() {\n    try {\n      const data: unknown = yield call(getTasks);\n      yield put(actions.onGetTasksSucceeded(data));\n    } catch (error) {\n      yield put(actions.onGetTasksFailed(error));\n    }\n  }\n  export function* tasksGetByIds(action:any) {\n    try {\n      const data: unknown = yield call(getTasksByIds, action.ids);\n      yield put(actions.onGetTasksByIdsSucceeded(data));\n    } catch (error) {\n      yield put(actions.onGetTasksByIdsFailed(error));\n    }\n  }\n\n  \n  \n  export function* watchProyects() {\n    yield all([\n      takeLatest(constants.PROYECTS_ON_GET_ALL_REQUESTED, proyectsGetAll),\n      takeLatest(constants.PROYECTS_ON_CREATE_REQUESTED, proyectsCreate),\n      takeLatest(constants.PROYECTS_ON_PUT_REQUESTED, proyectsPut),\n      takeLatest(constants.PROYECTS_ON_DELETE_REQUESTED, proyectsDelete),\n      takeLatest(constants.PROYECTS_ON_GET_TASKS_REQUESTED, tasksGet),\n      takeLatest(constants.PROYECTS_ON_GET_TASKS_BY_IDS_REQUESTED, tasksGetByIds),\n\n    ]);\n  }\n  ","import axios from 'axios';\nimport { get, post, delete_, put } from 'services/api';\n\nconst url = 'https://psa-tribu2-proyectos.herokuapp.com'\n\nexport async function onGetTareasByprojectId(id : any): Promise<any> {\n    const response = await get(`${url}/tareas/proyecto/`+id.toString());\n    return response;\n  }\nexport async function onPostTarea(tarea : any): Promise<any> {\n    console.log(\"hola\" ,tarea.data)\n    const response = await post(`${url}/tareas`,tarea.data);\n    return response;\n  }\nexport async function onDeleteTarea(id : any): Promise<any> {\n    const response = await delete_(`${url}/tareas/` + id.toString());\n    return response;\n}","import { get } from 'services/api';\n\nconst url = 'https://shielded-shelf-11253.herokuapp.com'\nconst proyectos_url = \"https://psa-tribu2-proyectos.herokuapp.com\"\nconst recursos_url = \"https://psa-tribu2-recursos.herokuapp.com\"\n\nexport async function getTickets(producto:string, version:string): Promise<any> {\n  const response = await get(`${url}/tickets?producto=`+producto+`&version=`+version);\n  return response;\n}\n\nexport async function getProducts(): Promise<any> {\n  const response = await get(`${url}/products`);\n  return response;\n}\n\nexport async function getTareas(): Promise<any> {\n  const response = await get(`${proyectos_url}/tareas`);\n  return response;\n}\n\nexport async function getResources(): Promise<any> {\n  const response = await get(`${recursos_url}/resources`);\n  return response;\n}\n\nexport async function getClients(): Promise<any> {\n  const response = await get(`${url}/clients`);\n  return response;\n}\n","import {\n    all, call, put, takeLatest,\n  } from 'redux-saga/effects';\n  \n  import * as constants from 'redux_folder/constants/tareas.constants';\n  import * as actions from 'redux_folder/actions/tareas.actions';\n  import * as constantsTickets from 'redux_folder/constants/tickets.constants';\n  import * as actionsTickets from 'redux_folder/actions/tickets.actions';\n\n  import { onGetTareasByprojectId, onPostTarea } from 'services/tareas.services';\nimport { onDeleteTarea } from 'redux_folder/actions/tareas.actions';\nimport { getTareas } from 'services/tickets.services';\n\n  \nexport function* getTareasForProject(action:any) {\n    try {\n      const data: unknown = yield call(onGetTareasByprojectId,action.id);\n      yield put(actions.getTareasSucceeded(data));\n    } catch (error) {\n      yield put(actions.getTareasFailed(error));\n    }\n  }\n\nexport function* postTareasForProject(data_:any) {\n    try {\n      const data: unknown = yield call(onPostTarea,data_);\n      yield put(actions.onPostTareaSucceeded(data));\n    } catch (error) {\n      yield put(actions.onPostTareaFailed(error));\n    }\n  }\n\nexport function* deleteTareasForProject(action:any) {\n    try {\n      const data: unknown = yield call(onDeleteTarea,action.id);\n      yield put(actions.onDeleteTareaSucceeded(data));\n    } catch (error) {\n      yield put(actions.onDeleteTareaFailed(error));\n    }\n  }\n\n  export function* tareasGetAll(action:any) {\n    try {\n      const data: unknown = yield call(getTareas);\n      yield put(actionsTickets.onTareasGetAllSucceeded(data));\n    } catch (error) {\n      yield put(actionsTickets.onTareasGetAllFailed(error));\n    }\n  }\n  \n  export function* watchTareas() {\n    yield all([\n      takeLatest(constants.TAREAS_ON_GET_REQUESTED, getTareasForProject),\n      takeLatest(constants.TAREAS_ON_POST_REQUESTED, postTareasForProject),\n      takeLatest(constants.TAREAS_ON_DELETE_REQUESTED,deleteTareasForProject),\n      takeLatest(constantsTickets.TAREAS_ON_GET_ALL_REQUESTED, tareasGetAll),\n\n    ]);\n  }\n\n ","import {\n  all, call, put, takeLatest,\n} from 'redux-saga/effects';\n\nimport * as constants from 'redux_folder/constants/tickets.constants';\nimport * as actions from 'redux_folder/actions/tickets.actions';\n\nimport { getTickets, getProducts, getTareas, getResources, getClients } from 'services/tickets.services';\n\nexport function* ticketsGetAll(action:any) {\n  try {\n    const data: unknown = yield call(getTickets, action.producto, action.version);\n    yield put(actions.onTicketsGetAllSucceeded(data));\n  } catch (error) {\n    yield put(actions.onTicketsGetAllFailed(error));\n  }\n}\n\nexport function* productsGetAll(action:any) {\n  try {\n    const data: unknown = yield call(getProducts);\n    yield put(actions.onProductsGetAllSucceeded(data));\n  } catch (error) {\n    yield put(actions.onProductsGetAllFailed(error));\n  }\n}\n\nexport function* resourcesGetAll(action:any) {\n  try {\n    const data: unknown = yield call(getResources);\n    yield put(actions.onResourcesGetAllSucceeded(data));\n  } catch (error) {\n    yield put(actions.onResourcesGetAllFailed(error));\n  }\n}\n\nexport function* clientsGetAll(action:any) {\n  try {\n    const data: unknown = yield call(getClients);\n    yield put(actions.onClientsGetAllSucceeded(data));\n  } catch (error) {\n    yield put(actions.onClientsGetAllFailed(error));\n  }\n}\n\n\nexport function* watchTickets() {\n  yield all([\n    takeLatest(constants.TICKETS_ON_GET_ALL_REQUESTED, ticketsGetAll),\n  ]);\n}\n\nexport function* watchProducts() {\n  yield all([\n    takeLatest(constants.PRODUCTS_ON_GET_ALL_REQUESTED, productsGetAll),\n  ]);\n}\n\nexport function* watchResources() {\n  yield all([\n    takeLatest(constants.RESOURCES_ON_GET_ALL_REQUESTED, resourcesGetAll),\n  ]);\n}\n\nexport function* watchClients() {\n  yield all([\n    takeLatest(constants.CLIENTS_ON_GET_ALL_REQUESTED, clientsGetAll),\n  ]);\n}\n","import { watchFile } from 'fs';\nimport { all } from 'redux-saga/effects';\n\nimport { watchHours } from './hours.sagas';\nimport { watchProyects } from './proyects.sagas';\nimport { watchTareas } from './tareas.sagas';\nimport { watchTickets, watchProducts,  watchResources, watchClients } from './tickets.sagas';\n\nexport default function* rootSaga(): Generator {\n  yield all([watchHours(), watchTickets(), watchProducts(), watchTareas(), watchResources(), watchClients(), watchProyects()]);\n}\n","import { applyMiddleware, createStore, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { createLogger } from 'redux-logger';\n\nimport reducers from 'redux_folder/reducers';\nimport rootSaga from 'redux_folder/sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst loggerMiddleware = createLogger();\n\nexport const composeEnhancers =\n  (window && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\nconst store = createStore(\n  reducers,\n  /* preloadedState, */\n  composeEnhancers(\n    applyMiddleware(\n      sagaMiddleware,\n      loggerMiddleware,\n    ),\n  ),\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from 'redux_folder/store';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}